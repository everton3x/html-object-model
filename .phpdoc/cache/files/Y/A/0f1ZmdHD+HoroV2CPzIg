1615849916
waR3U4bTeM%3A1b567170f5633c2000519c072c39b63a-16eebb03d388c6dfe9674e005346a3e7
s:46700:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxMjp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6NTE6IlRlc3RzIHRoYXQgYWxsIGFyaXRobWV0aWMgb3BlcmF0aW9ucyBhcmUgYnJhY2tldGVkLiI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YTozOntpOjA7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcQXV0aG9yIjo0OntzOjc6IgAqAG5hbWUiO3M6NjoiYXV0aG9yIjtzOjU3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcQXV0aG9yAGF1dGhvck5hbWUiO3M6MTM6IkdyZWcgU2hlcndvb2QiO3M6NTg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xBdXRob3IAYXV0aG9yRW1haWwiO3M6MTk6ImdzaGVyd29vZEBzcXVpei5uZXQiO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtOO31pOjE7Tzo0NjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcR2VuZXJpYyI6Mjp7czo3OiIAKgBuYW1lIjtzOjk6ImNvcHlyaWdodCI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6NDQ6IjIwMDYtMjAxNSBTcXVpeiBQdHkgTHRkIChBQk4gNzcgMDg0IDY3MCA2MDApIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX19aToyO086NDY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXEdlbmVyaWMiOjI6e3M6NzoiACoAbmFtZSI7czo3OiJsaWNlbnNlIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czo4MDoiaHR0cHM6Ly9naXRodWIuY29tL3NxdWl6bGFicy9QSFBfQ29kZVNuaWZmZXIvYmxvYi9tYXN0ZXIvbGljZW5jZS50eHQgQlNEIExpY2VuY2UiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fX19czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBjb250ZXh0IjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dCI6Mjp7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZSI7czowOiIiO3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2VBbGlhc2VzIjthOjA6e319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MjtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjE2ZWViYjAzZDM4OGM2ZGZlOTY3NGUwMDUzNDZhM2U3IjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MjQ6Ik9wZXJhdG9yQnJhY2tldFNuaWZmLnBocCI7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBwYXRoIjtzOjk1OiJ2ZW5kb3Ivc3F1aXpsYWJzL3BocF9jb2Rlc25pZmZlci9zcmMvU3RhbmRhcmRzL1NxdWl6L1NuaWZmcy9Gb3JtYXR0aW5nL09wZXJhdG9yQnJhY2tldFNuaWZmLnBocCI7czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBzb3VyY2UiO3M6MTUyMDE6Ijw/cGhwCi8qKgogKiBUZXN0cyB0aGF0IGFsbCBhcml0aG1ldGljIG9wZXJhdGlvbnMgYXJlIGJyYWNrZXRlZC4KICoKICogQGF1dGhvciAgICBHcmVnIFNoZXJ3b29kIDxnc2hlcndvb2RAc3F1aXoubmV0PgogKiBAY29weXJpZ2h0IDIwMDYtMjAxNSBTcXVpeiBQdHkgTHRkIChBQk4gNzcgMDg0IDY3MCA2MDApCiAqIEBsaWNlbnNlICAgaHR0cHM6Ly9naXRodWIuY29tL3NxdWl6bGFicy9QSFBfQ29kZVNuaWZmZXIvYmxvYi9tYXN0ZXIvbGljZW5jZS50eHQgQlNEIExpY2VuY2UKICovCgpuYW1lc3BhY2UgUEhQX0NvZGVTbmlmZmVyXFN0YW5kYXJkc1xTcXVpelxTbmlmZnNcRm9ybWF0dGluZzsKCnVzZSBQSFBfQ29kZVNuaWZmZXJcRmlsZXNcRmlsZTsKdXNlIFBIUF9Db2RlU25pZmZlclxTbmlmZnNcU25pZmY7CnVzZSBQSFBfQ29kZVNuaWZmZXJcVXRpbFxUb2tlbnM7CgpjbGFzcyBPcGVyYXRvckJyYWNrZXRTbmlmZiBpbXBsZW1lbnRzIFNuaWZmCnsKCiAgICAvKioKICAgICAqIEEgbGlzdCBvZiB0b2tlbml6ZXJzIHRoaXMgc25pZmYgc3VwcG9ydHMuCiAgICAgKgogICAgICogQHZhciBhcnJheQogICAgICovCiAgICBwdWJsaWMgJHN1cHBvcnRlZFRva2VuaXplcnMgPSBbCiAgICAgICAgJ1BIUCcsCiAgICAgICAgJ0pTJywKICAgIF07CgoKICAgIC8qKgogICAgICogUmV0dXJucyBhbiBhcnJheSBvZiB0b2tlbnMgdGhpcyB0ZXN0IHdhbnRzIHRvIGxpc3RlbiBmb3IuCiAgICAgKgogICAgICogQHJldHVybiBhcnJheQogICAgICovCiAgICBwdWJsaWMgZnVuY3Rpb24gcmVnaXN0ZXIoKQogICAgewogICAgICAgIHJldHVybiBUb2tlbnM6OiRvcGVyYXRvcnM7CgogICAgfS8vZW5kIHJlZ2lzdGVyKCkKCgogICAgLyoqCiAgICAgKiBQcm9jZXNzZXMgdGhpcyB0ZXN0LCB3aGVuIG9uZSBvZiBpdHMgdG9rZW5zIGlzIGVuY291bnRlcmVkLgogICAgICoKICAgICAqIEBwYXJhbSBcUEhQX0NvZGVTbmlmZmVyXEZpbGVzXEZpbGUgJHBocGNzRmlsZSBUaGUgZmlsZSBiZWluZyBzY2FubmVkLgogICAgICogQHBhcmFtIGludCAgICAgICAgICAgICAgICAgICAgICAgICAkc3RhY2tQdHIgIFRoZSBwb3NpdGlvbiBvZiB0aGUgY3VycmVudCB0b2tlbiBpbiB0aGUKICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGFjayBwYXNzZWQgaW4gJHRva2Vucy4KICAgICAqCiAgICAgKiBAcmV0dXJuIHZvaWQKICAgICAqLwogICAgcHVibGljIGZ1bmN0aW9uIHByb2Nlc3MoRmlsZSAkcGhwY3NGaWxlLCAkc3RhY2tQdHIpCiAgICB7CiAgICAgICAgJHRva2VucyA9ICRwaHBjc0ZpbGUtPmdldFRva2VucygpOwoKICAgICAgICBpZiAoJHBocGNzRmlsZS0+dG9rZW5pemVyVHlwZSA9PT0gJ0pTJyAmJiAkdG9rZW5zWyRzdGFja1B0cl1bJ2NvZGUnXSA9PT0gVF9QTFVTKSB7CiAgICAgICAgICAgIC8vIEphdmFTY3JpcHQgdXNlcyB0aGUgcGx1cyBvcGVyYXRvciBmb3Igc3RyaW5nIGNvbmNhdGVuYXRpb24gYXMgd2VsbAogICAgICAgICAgICAvLyBzbyB3ZSBjYW5ub3QgYWNjdXJhdGVseSBkZXRlcm1pbmUgaWYgaXQgaXMgYSBzdHJpbmcgY29uY2F0IG9yIGFkZGl0aW9uLgogICAgICAgICAgICAvLyBTbyBqdXN0IGlnbm9yZSBpdC4KICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgLy8gSWYgdGhlICYgaXMgYSByZWZlcmVuY2UsIHRoZW4gd2UgZG9uJ3Qgd2FudCB0byBjaGVjayBmb3IgYnJhY2tldHMuCiAgICAgICAgaWYgKCR0b2tlbnNbJHN0YWNrUHRyXVsnY29kZSddID09PSBUX0JJVFdJU0VfQU5EICYmICRwaHBjc0ZpbGUtPmlzUmVmZXJlbmNlKCRzdGFja1B0cikgPT09IHRydWUpIHsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgLy8gVGhlcmUgaXMgb25lIGluc3RhbmNlIHdoZXJlIGJyYWNrZXRzIGFyZW4ndCBuZWVkZWQsIHdoaWNoIGludm9sdmVzCiAgICAgICAgLy8gdGhlIG1pbnVzIHNpZ24gYmVpbmcgdXNlZCB0byBhc3NpZ24gYSBuZWdhdGl2ZSBudW1iZXIgdG8gYSB2YXJpYWJsZS4KICAgICAgICBpZiAoJHRva2Vuc1skc3RhY2tQdHJdWydjb2RlJ10gPT09IFRfTUlOVVMpIHsKICAgICAgICAgICAgLy8gQ2hlY2sgdG8gc2VlIGlmIHdlIGFyZSB0cnlpbmcgdG8gcmV0dXJuIC1uLgogICAgICAgICAgICAkcHJldiA9ICRwaHBjc0ZpbGUtPmZpbmRQcmV2aW91cyhUb2tlbnM6OiRlbXB0eVRva2VucywgKCRzdGFja1B0ciAtIDEpLCBudWxsLCB0cnVlKTsKICAgICAgICAgICAgaWYgKCR0b2tlbnNbJHByZXZdWydjb2RlJ10gPT09IFRfUkVUVVJOKSB7CiAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgICRudW1iZXIgPSAkcGhwY3NGaWxlLT5maW5kTmV4dChUX1dISVRFU1BBQ0UsICgkc3RhY2tQdHIgKyAxKSwgbnVsbCwgdHJ1ZSk7CiAgICAgICAgICAgIGlmICgkdG9rZW5zWyRudW1iZXJdWydjb2RlJ10gPT09IFRfTE5VTUJFUiB8fCAkdG9rZW5zWyRudW1iZXJdWydjb2RlJ10gPT09IFRfRE5VTUJFUikgewogICAgICAgICAgICAgICAgJHByZXZpb3VzID0gJHBocGNzRmlsZS0+ZmluZFByZXZpb3VzKFRfV0hJVEVTUEFDRSwgKCRzdGFja1B0ciAtIDEpLCBudWxsLCB0cnVlKTsKICAgICAgICAgICAgICAgIGlmICgkcHJldmlvdXMgIT09IGZhbHNlKSB7CiAgICAgICAgICAgICAgICAgICAgJGlzQXNzaWdubWVudCA9IGlzc2V0KFRva2Vuczo6JGFzc2lnbm1lbnRUb2tlbnNbJHRva2Vuc1skcHJldmlvdXNdWydjb2RlJ11dKTsKICAgICAgICAgICAgICAgICAgICAkaXNFcXVhbGl0eSAgID0gaXNzZXQoVG9rZW5zOjokZXF1YWxpdHlUb2tlbnNbJHRva2Vuc1skcHJldmlvdXNdWydjb2RlJ11dKTsKICAgICAgICAgICAgICAgICAgICAkaXNDb21wYXJpc29uID0gaXNzZXQoVG9rZW5zOjokY29tcGFyaXNvblRva2Vuc1skdG9rZW5zWyRwcmV2aW91c11bJ2NvZGUnXV0pOwogICAgICAgICAgICAgICAgICAgIGlmICgkaXNBc3NpZ25tZW50ID09PSB0cnVlIHx8ICRpc0VxdWFsaXR5ID09PSB0cnVlIHx8ICRpc0NvbXBhcmlzb24gPT09IHRydWUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgLy8gVGhpcyBpcyBhIG5lZ2F0aXZlIGFzc2lnbm1lbnQgb3IgY29tcGFyaXNvbi4KICAgICAgICAgICAgICAgICAgICAgICAgLy8gV2UgbmVlZCB0byBjaGVjayB0aGF0IHRoZSBtaW51cyBhbmQgdGhlIG51bWJlciBhcmUKICAgICAgICAgICAgICAgICAgICAgICAgLy8gYWRqYWNlbnQuCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICgoJG51bWJlciAtICRzdGFja1B0cikgIT09IDEpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRlcnJvciA9ICdObyBzcGFjZSBhbGxvd2VkIGJldHdlZW4gbWludXMgc2lnbiBhbmQgbnVtYmVyJzsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRwaHBjc0ZpbGUtPmFkZEVycm9yKCRlcnJvciwgJHN0YWNrUHRyLCAnU3BhY2luZ0FmdGVyTWludXMnKTsKICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0vL2VuZCBpZgoKICAgICAgICAkcHJldmlvdXNUb2tlbiA9ICRwaHBjc0ZpbGUtPmZpbmRQcmV2aW91cyhUX1dISVRFU1BBQ0UsICgkc3RhY2tQdHIgLSAxKSwgbnVsbCwgdHJ1ZSwgbnVsbCwgdHJ1ZSk7CiAgICAgICAgaWYgKCRwcmV2aW91c1Rva2VuICE9PSBmYWxzZSkgewogICAgICAgICAgICAvLyBBIGxpc3Qgb2YgdG9rZW5zIHRoYXQgaW5kaWNhdGUgdGhhdCB0aGUgdG9rZW4gaXMgbm90CiAgICAgICAgICAgIC8vIHBhcnQgb2YgYW4gYXJpdGhtZXRpYyBvcGVyYXRpb24uCiAgICAgICAgICAgICRpbnZhbGlkVG9rZW5zID0gWwogICAgICAgICAgICAgICAgVF9DT01NQSAgICAgICAgICAgICAgID0+IHRydWUsCiAgICAgICAgICAgICAgICBUX0NPTE9OICAgICAgICAgICAgICAgPT4gdHJ1ZSwKICAgICAgICAgICAgICAgIFRfT1BFTl9QQVJFTlRIRVNJUyAgICA9PiB0cnVlLAogICAgICAgICAgICAgICAgVF9PUEVOX1NRVUFSRV9CUkFDS0VUID0+IHRydWUsCiAgICAgICAgICAgICAgICBUX09QRU5fQ1VSTFlfQlJBQ0tFVCAgPT4gdHJ1ZSwKICAgICAgICAgICAgICAgIFRfT1BFTl9TSE9SVF9BUlJBWSAgICA9PiB0cnVlLAogICAgICAgICAgICAgICAgVF9DQVNFICAgICAgICAgICAgICAgID0+IHRydWUsCiAgICAgICAgICAgIF07CgogICAgICAgICAgICBpZiAoaXNzZXQoJGludmFsaWRUb2tlbnNbJHRva2Vuc1skcHJldmlvdXNUb2tlbl1bJ2NvZGUnXV0pID09PSB0cnVlKSB7CiAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIGlmICgkdG9rZW5zWyRzdGFja1B0cl1bJ2NvZGUnXSA9PT0gVF9CSVRXSVNFX09SCiAgICAgICAgICAgICYmIGlzc2V0KCR0b2tlbnNbJHN0YWNrUHRyXVsnbmVzdGVkX3BhcmVudGhlc2lzJ10pID09PSB0cnVlCiAgICAgICAgKSB7CiAgICAgICAgICAgICRicmFja2V0cyAgICA9ICR0b2tlbnNbJHN0YWNrUHRyXVsnbmVzdGVkX3BhcmVudGhlc2lzJ107CiAgICAgICAgICAgICRsYXN0QnJhY2tldCA9IGFycmF5X3BvcCgkYnJhY2tldHMpOwogICAgICAgICAgICBpZiAoaXNzZXQoJHRva2Vuc1skbGFzdEJyYWNrZXRdWydwYXJlbnRoZXNpc19vd25lciddKSA9PT0gdHJ1ZQogICAgICAgICAgICAgICAgJiYgJHRva2Vuc1skdG9rZW5zWyRsYXN0QnJhY2tldF1bJ3BhcmVudGhlc2lzX293bmVyJ11dWydjb2RlJ10gPT09IFRfQ0FUQ0gKICAgICAgICAgICAgKSB7CiAgICAgICAgICAgICAgICAvLyBUaGlzIGlzIGEgcGlwZSBjaGFyYWN0ZXIgaW5zaWRlIGEgY2F0Y2ggc3RhdGVtZW50LCBzbyBpdCBpcyBhY3RpbmcKICAgICAgICAgICAgICAgIC8vIGFzIGFuIGV4Y2VwdGlvbiB0eXBlIHNlcGFyYXRvciBhbmQgbm90IGFuIGFyaXRobWV0aWMgb3BlcmF0aW9uLgogICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICAvLyBUb2tlbnMgdGhhdCBhcmUgYWxsb3dlZCBpbnNpZGUgYSBicmFja2V0ZWQgb3BlcmF0aW9uLgogICAgICAgICRhbGxvd2VkID0gWwogICAgICAgICAgICBUX1ZBUklBQkxFLAogICAgICAgICAgICBUX0xOVU1CRVIsCiAgICAgICAgICAgIFRfRE5VTUJFUiwKICAgICAgICAgICAgVF9TVFJJTkcsCiAgICAgICAgICAgIFRfV0hJVEVTUEFDRSwKICAgICAgICAgICAgVF9OU19TRVBBUkFUT1IsCiAgICAgICAgICAgIFRfVEhJUywKICAgICAgICAgICAgVF9TRUxGLAogICAgICAgICAgICBUX1NUQVRJQywKICAgICAgICAgICAgVF9PQkpFQ1RfT1BFUkFUT1IsCiAgICAgICAgICAgIFRfRE9VQkxFX0NPTE9OLAogICAgICAgICAgICBUX09QRU5fU1FVQVJFX0JSQUNLRVQsCiAgICAgICAgICAgIFRfQ0xPU0VfU1FVQVJFX0JSQUNLRVQsCiAgICAgICAgICAgIFRfTU9EVUxVUywKICAgICAgICAgICAgVF9OT05FLAogICAgICAgICAgICBUX0JJVFdJU0VfTk9ULAogICAgICAgIF07CgogICAgICAgICRhbGxvd2VkICs9IFRva2Vuczo6JG9wZXJhdG9yczsKCiAgICAgICAgJGxhc3RCcmFja2V0ID0gZmFsc2U7CiAgICAgICAgaWYgKGlzc2V0KCR0b2tlbnNbJHN0YWNrUHRyXVsnbmVzdGVkX3BhcmVudGhlc2lzJ10pID09PSB0cnVlKSB7CiAgICAgICAgICAgICRwYXJlbnRoZXNpcyA9IGFycmF5X3JldmVyc2UoJHRva2Vuc1skc3RhY2tQdHJdWyduZXN0ZWRfcGFyZW50aGVzaXMnXSwgdHJ1ZSk7CiAgICAgICAgICAgIGZvcmVhY2ggKCRwYXJlbnRoZXNpcyBhcyAkYnJhY2tldCA9PiAkZW5kQnJhY2tldCkgewogICAgICAgICAgICAgICAgJHByZXZUb2tlbiA9ICRwaHBjc0ZpbGUtPmZpbmRQcmV2aW91cyhUX1dISVRFU1BBQ0UsICgkYnJhY2tldCAtIDEpLCBudWxsLCB0cnVlKTsKICAgICAgICAgICAgICAgICRwcmV2Q29kZSAgPSAkdG9rZW5zWyRwcmV2VG9rZW5dWydjb2RlJ107CgogICAgICAgICAgICAgICAgaWYgKCRwcmV2Q29kZSA9PT0gVF9JU1NFVCkgewogICAgICAgICAgICAgICAgICAgIC8vIFRoaXMgb3BlcmF0aW9uIGlzIGluc2lkZSBhbiBpc3NldCgpIGNhbGwsIGJ1dCBoYXMKICAgICAgICAgICAgICAgICAgICAvLyBubyBicmFja2V0IG9mIGl0J3Mgb3duLgogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGlmICgkcHJldkNvZGUgPT09IFRfU1RSSU5HIHx8ICRwcmV2Q29kZSA9PT0gVF9TV0lUQ0gpIHsKICAgICAgICAgICAgICAgICAgICAvLyBXZSBhbGxvdyBzaW1wbGUgb3BlcmF0aW9ucyB0byBub3QgYmUgYnJhY2tldGVkLgogICAgICAgICAgICAgICAgICAgIC8vIEZvciBleGFtcGxlLCBjZWlsKCRvbmUgLyAkdHdvKS4KICAgICAgICAgICAgICAgICAgICBmb3IgKCRwcmV2ID0gKCRzdGFja1B0ciAtIDEpOyAkcHJldiA+ICRicmFja2V0OyAkcHJldi0tKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpbl9hcnJheSgkdG9rZW5zWyRwcmV2XVsnY29kZSddLCAkYWxsb3dlZCwgdHJ1ZSkgPT09IHRydWUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICBpZiAoJHRva2Vuc1skcHJldl1bJ2NvZGUnXSA9PT0gVF9DTE9TRV9QQVJFTlRIRVNJUykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgJHByZXYgPSAkdG9rZW5zWyRwcmV2XVsncGFyZW50aGVzaXNfb3BlbmVyJ107CiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgaWYgKCRwcmV2ICE9PSAkYnJhY2tldCkgewogICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgIGZvciAoJG5leHQgPSAoJHN0YWNrUHRyICsgMSk7ICRuZXh0IDwgJGVuZEJyYWNrZXQ7ICRuZXh0KyspIHsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGluX2FycmF5KCR0b2tlbnNbJG5leHRdWydjb2RlJ10sICRhbGxvd2VkLCB0cnVlKSA9PT0gdHJ1ZSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkdG9rZW5zWyRuZXh0XVsnY29kZSddID09PSBUX09QRU5fUEFSRU5USEVTSVMpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRuZXh0ID0gJHRva2Vuc1skbmV4dF1bJ3BhcmVudGhlc2lzX2Nsb3NlciddOwogICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgIGlmICgkbmV4dCAhPT0gJGVuZEJyYWNrZXQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfS8vZW5kIGlmCgogICAgICAgICAgICAgICAgaWYgKGluX2FycmF5KCRwcmV2Q29kZSwgVG9rZW5zOjokc2NvcGVPcGVuZXJzLCB0cnVlKSA9PT0gdHJ1ZSkgewogICAgICAgICAgICAgICAgICAgIC8vIFRoaXMgb3BlcmF0aW9uIGlzIGluc2lkZSBhIGNvbnRyb2wgc3RydWN0dXJlIGxpa2UgRk9SRUFDSAogICAgICAgICAgICAgICAgICAgIC8vIG9yIElGLCBidXQgaGFzIG5vIGJyYWNrZXQgb2YgaXQncyBvd24uCiAgICAgICAgICAgICAgICAgICAgLy8gVGhlIG9ubHkgY29udHJvbCBzdHJ1Y3R1cmUgYWxsb3dlZCB0byBkbyB0aGlzIGlzIFNXSVRDSC4KICAgICAgICAgICAgICAgICAgICBpZiAoJHByZXZDb2RlICE9PSBUX1NXSVRDSCkgewogICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgaWYgKCRwcmV2Q29kZSA9PT0gVF9PUEVOX1BBUkVOVEhFU0lTKSB7CiAgICAgICAgICAgICAgICAgICAgLy8gVGhlc2UgYXJlIHR3byBvcGVuIHBhcmVudGhlc2lzIGluIGEgcm93LiBJZiB0aGUgY3VycmVudAogICAgICAgICAgICAgICAgICAgIC8vIG9uZSBkb2Vzbid0IGVuY2xvc2UgdGhlIG9wZXJhdG9yLCBnbyB0byB0aGUgcHJldmlvdXMgb25lLgogICAgICAgICAgICAgICAgICAgIGlmICgkZW5kQnJhY2tldCA8ICRzdGFja1B0cikgewogICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgJGxhc3RCcmFja2V0ID0gJGJyYWNrZXQ7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfS8vZW5kIGZvcmVhY2gKICAgICAgICB9Ly9lbmQgaWYKCiAgICAgICAgaWYgKCRsYXN0QnJhY2tldCA9PT0gZmFsc2UpIHsKICAgICAgICAgICAgLy8gSXQgaXMgbm90IGluIGEgYnJhY2tldGVkIHN0YXRlbWVudCBhdCBhbGwuCiAgICAgICAgICAgICR0aGlzLT5hZGRNaXNzaW5nQnJhY2tldHNFcnJvcigkcGhwY3NGaWxlLCAkc3RhY2tQdHIpOwogICAgICAgICAgICByZXR1cm47CiAgICAgICAgfSBlbHNlIGlmICgkdG9rZW5zWyRsYXN0QnJhY2tldF1bJ3BhcmVudGhlc2lzX2Nsb3NlciddIDwgJHN0YWNrUHRyKSB7CiAgICAgICAgICAgIC8vIFRoZXJlIGFyZSBhIHNldCBvZiBicmFja2V0cyBpbiBmcm9udCBvZiBpdCB0aGF0IGRvbid0IGluY2x1ZGUgaXQuCiAgICAgICAgICAgICR0aGlzLT5hZGRNaXNzaW5nQnJhY2tldHNFcnJvcigkcGhwY3NGaWxlLCAkc3RhY2tQdHIpOwogICAgICAgICAgICByZXR1cm47CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgLy8gV2UgYXJlIGVuY2xvc2VkIGluIGEgc2V0IG9mIGJyYWNrZXQsIHNvIHRoZSBsYXN0IHRoaW5nIHRvCiAgICAgICAgICAgIC8vIGNoZWNrIGlzIHRoYXQgd2UgYXJlIG5vdCBhbHNvIGVuY2xvc2VkIGluIHNxdWFyZSBicmFja2V0cwogICAgICAgICAgICAvLyBsaWtlIHRoaXM6ICgkYXJyYXlbJGluZGV4ICsgMV0pLCB3aGljaCBpcyBpbnZhbGlkLgogICAgICAgICAgICAkYnJhY2tldHMgPSBbCiAgICAgICAgICAgICAgICBUX09QRU5fU1FVQVJFX0JSQUNLRVQsCiAgICAgICAgICAgICAgICBUX0NMT1NFX1NRVUFSRV9CUkFDS0VULAogICAgICAgICAgICBdOwoKICAgICAgICAgICAgJHNxdWFyZUJyYWNrZXQgPSAkcGhwY3NGaWxlLT5maW5kUHJldmlvdXMoJGJyYWNrZXRzLCAoJHN0YWNrUHRyIC0gMSksICRsYXN0QnJhY2tldCk7CiAgICAgICAgICAgIGlmICgkc3F1YXJlQnJhY2tldCAhPT0gZmFsc2UgJiYgJHRva2Vuc1skc3F1YXJlQnJhY2tldF1bJ2NvZGUnXSA9PT0gVF9PUEVOX1NRVUFSRV9CUkFDS0VUKSB7CiAgICAgICAgICAgICAgICAkY2xvc2VTcXVhcmVCcmFja2V0ID0gJHBocGNzRmlsZS0+ZmluZE5leHQoJGJyYWNrZXRzLCAoJHN0YWNrUHRyICsgMSkpOwogICAgICAgICAgICAgICAgaWYgKCRjbG9zZVNxdWFyZUJyYWNrZXQgIT09IGZhbHNlICYmICR0b2tlbnNbJGNsb3NlU3F1YXJlQnJhY2tldF1bJ2NvZGUnXSA9PT0gVF9DTE9TRV9TUVVBUkVfQlJBQ0tFVCkgewogICAgICAgICAgICAgICAgICAgICR0aGlzLT5hZGRNaXNzaW5nQnJhY2tldHNFcnJvcigkcGhwY3NGaWxlLCAkc3RhY2tQdHIpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CgogICAgICAgICAgICByZXR1cm47CiAgICAgICAgfS8vZW5kIGlmCgogICAgICAgICRsYXN0QXNzaWdubWVudCA9ICRwaHBjc0ZpbGUtPmZpbmRQcmV2aW91cyhUb2tlbnM6OiRhc3NpZ25tZW50VG9rZW5zLCAkc3RhY2tQdHIsIG51bGwsIGZhbHNlLCBudWxsLCB0cnVlKTsKICAgICAgICBpZiAoJGxhc3RBc3NpZ25tZW50ICE9PSBmYWxzZSAmJiAkbGFzdEFzc2lnbm1lbnQgPiAkbGFzdEJyYWNrZXQpIHsKICAgICAgICAgICAgJHRoaXMtPmFkZE1pc3NpbmdCcmFja2V0c0Vycm9yKCRwaHBjc0ZpbGUsICRzdGFja1B0cik7CiAgICAgICAgfQoKICAgIH0vL2VuZCBwcm9jZXNzKCkKCgogICAgLyoqCiAgICAgKiBBZGQgYW5kIGZpeCB0aGUgbWlzc2luZyBicmFja2V0cyBlcnJvci4KICAgICAqCiAgICAgKiBAcGFyYW0gXFBIUF9Db2RlU25pZmZlclxGaWxlc1xGaWxlICRwaHBjc0ZpbGUgVGhlIGZpbGUgYmVpbmcgc2Nhbm5lZC4KICAgICAqIEBwYXJhbSBpbnQgICAgICAgICAgICAgICAgICAgICAgICAgJHN0YWNrUHRyICBUaGUgcG9zaXRpb24gb2YgdGhlIGN1cnJlbnQgdG9rZW4gaW4gdGhlCiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhY2sgcGFzc2VkIGluICR0b2tlbnMuCiAgICAgKgogICAgICogQHJldHVybiB2b2lkCiAgICAgKi8KICAgIHB1YmxpYyBmdW5jdGlvbiBhZGRNaXNzaW5nQnJhY2tldHNFcnJvcigkcGhwY3NGaWxlLCAkc3RhY2tQdHIpCiAgICB7CiAgICAgICAgJHRva2VucyA9ICRwaHBjc0ZpbGUtPmdldFRva2VucygpOwoKICAgICAgICAkYWxsb3dlZCA9IFsKICAgICAgICAgICAgVF9WQVJJQUJMRSAgICAgICAgICAgICAgICAgPT4gdHJ1ZSwKICAgICAgICAgICAgVF9MTlVNQkVSICAgICAgICAgICAgICAgICAgPT4gdHJ1ZSwKICAgICAgICAgICAgVF9ETlVNQkVSICAgICAgICAgICAgICAgICAgPT4gdHJ1ZSwKICAgICAgICAgICAgVF9TVFJJTkcgICAgICAgICAgICAgICAgICAgPT4gdHJ1ZSwKICAgICAgICAgICAgVF9DT05TVEFOVF9FTkNBUFNFRF9TVFJJTkcgPT4gdHJ1ZSwKICAgICAgICAgICAgVF9ET1VCTEVfUVVPVEVEX1NUUklORyAgICAgPT4gdHJ1ZSwKICAgICAgICAgICAgVF9XSElURVNQQUNFICAgICAgICAgICAgICAgPT4gdHJ1ZSwKICAgICAgICAgICAgVF9OU19TRVBBUkFUT1IgICAgICAgICAgICAgPT4gdHJ1ZSwKICAgICAgICAgICAgVF9USElTICAgICAgICAgICAgICAgICAgICAgPT4gdHJ1ZSwKICAgICAgICAgICAgVF9TRUxGICAgICAgICAgICAgICAgICAgICAgPT4gdHJ1ZSwKICAgICAgICAgICAgVF9TVEFUSUMgICAgICAgICAgICAgICAgICAgPT4gdHJ1ZSwKICAgICAgICAgICAgVF9PQkpFQ1RfT1BFUkFUT1IgICAgICAgICAgPT4gdHJ1ZSwKICAgICAgICAgICAgVF9ET1VCTEVfQ09MT04gICAgICAgICAgICAgPT4gdHJ1ZSwKICAgICAgICAgICAgVF9NT0RVTFVTICAgICAgICAgICAgICAgICAgPT4gdHJ1ZSwKICAgICAgICAgICAgVF9JU1NFVCAgICAgICAgICAgICAgICAgICAgPT4gdHJ1ZSwKICAgICAgICAgICAgVF9BUlJBWSAgICAgICAgICAgICAgICAgICAgPT4gdHJ1ZSwKICAgICAgICAgICAgVF9OT05FICAgICAgICAgICAgICAgICAgICAgPT4gdHJ1ZSwKICAgICAgICAgICAgVF9CSVRXSVNFX05PVCAgICAgICAgICAgICAgPT4gdHJ1ZSwKICAgICAgICBdOwoKICAgICAgICAvLyBGaW5kIHRoZSBmaXJzdCB0b2tlbiBpbiB0aGUgZXhwcmVzc2lvbi4KICAgICAgICBmb3IgKCRiZWZvcmUgPSAoJHN0YWNrUHRyIC0gMSk7ICRiZWZvcmUgPiAwOyAkYmVmb3JlLS0pIHsKICAgICAgICAgICAgLy8gU3BlY2lhbCBjYXNlIGZvciBwbHVzIG9wZXJhdG9ycyBiZWNhdXNlIHdlIGNhbid0IHRlbGwgaWYgdGhleSBhcmUgdXNlZAogICAgICAgICAgICAvLyBmb3IgYWRkaXRpb24gb3Igc3RyaW5nIGNvbnRhY3QuIFNvIGFzc3VtZSBzdHJpbmcgY29uY2F0IHRvIGJlIHNhZmUuCiAgICAgICAgICAgIGlmICgkcGhwY3NGaWxlLT50b2tlbml6ZXJUeXBlID09PSAnSlMnICYmICR0b2tlbnNbJGJlZm9yZV1bJ2NvZGUnXSA9PT0gVF9QTFVTKSB7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKGlzc2V0KFRva2Vuczo6JGVtcHR5VG9rZW5zWyR0b2tlbnNbJGJlZm9yZV1bJ2NvZGUnXV0pID09PSB0cnVlCiAgICAgICAgICAgICAgICB8fCBpc3NldChUb2tlbnM6OiRvcGVyYXRvcnNbJHRva2Vuc1skYmVmb3JlXVsnY29kZSddXSkgPT09IHRydWUKICAgICAgICAgICAgICAgIHx8IGlzc2V0KFRva2Vuczo6JGNhc3RUb2tlbnNbJHRva2Vuc1skYmVmb3JlXVsnY29kZSddXSkgPT09IHRydWUKICAgICAgICAgICAgICAgIHx8IGlzc2V0KCRhbGxvd2VkWyR0b2tlbnNbJGJlZm9yZV1bJ2NvZGUnXV0pID09PSB0cnVlCiAgICAgICAgICAgICkgewogICAgICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmICgkdG9rZW5zWyRiZWZvcmVdWydjb2RlJ10gPT09IFRfQ0xPU0VfUEFSRU5USEVTSVMpIHsKICAgICAgICAgICAgICAgICRiZWZvcmUgPSAkdG9rZW5zWyRiZWZvcmVdWydwYXJlbnRoZXNpc19vcGVuZXInXTsKICAgICAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAoJHRva2Vuc1skYmVmb3JlXVsnY29kZSddID09PSBUX0NMT1NFX1NRVUFSRV9CUkFDS0VUKSB7CiAgICAgICAgICAgICAgICAkYmVmb3JlID0gJHRva2Vuc1skYmVmb3JlXVsnYnJhY2tldF9vcGVuZXInXTsKICAgICAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAoJHRva2Vuc1skYmVmb3JlXVsnY29kZSddID09PSBUX0NMT1NFX1NIT1JUX0FSUkFZKSB7CiAgICAgICAgICAgICAgICAkYmVmb3JlID0gJHRva2Vuc1skYmVmb3JlXVsnYnJhY2tldF9vcGVuZXInXTsKICAgICAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgICB9CgogICAgICAgICAgICBicmVhazsKICAgICAgICB9Ly9lbmQgZm9yCgogICAgICAgICRiZWZvcmUgPSAkcGhwY3NGaWxlLT5maW5kTmV4dChUb2tlbnM6OiRlbXB0eVRva2VucywgKCRiZWZvcmUgKyAxKSwgbnVsbCwgdHJ1ZSk7CgogICAgICAgIC8vIEZpbmQgdGhlIGxhc3QgdG9rZW4gaW4gdGhlIGV4cHJlc3Npb24uCiAgICAgICAgZm9yICgkYWZ0ZXIgPSAoJHN0YWNrUHRyICsgMSk7ICRhZnRlciA8ICRwaHBjc0ZpbGUtPm51bVRva2VuczsgJGFmdGVyKyspIHsKICAgICAgICAgICAgLy8gU3BlY2lhbCBjYXNlIGZvciBwbHVzIG9wZXJhdG9ycyBiZWNhdXNlIHdlIGNhbid0IHRlbGwgaWYgdGhleSBhcmUgdXNlZAogICAgICAgICAgICAvLyBmb3IgYWRkaXRpb24gb3Igc3RyaW5nIGNvbmNhdC4gU28gYXNzdW1lIHN0cmluZyBjb25jYXQgdG8gYmUgc2FmZS4KICAgICAgICAgICAgaWYgKCRwaHBjc0ZpbGUtPnRva2VuaXplclR5cGUgPT09ICdKUycgJiYgJHRva2Vuc1skYWZ0ZXJdWydjb2RlJ10gPT09IFRfUExVUykgewogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmIChpc3NldChUb2tlbnM6OiRlbXB0eVRva2Vuc1skdG9rZW5zWyRhZnRlcl1bJ2NvZGUnXV0pID09PSB0cnVlCiAgICAgICAgICAgICAgICB8fCBpc3NldChUb2tlbnM6OiRvcGVyYXRvcnNbJHRva2Vuc1skYWZ0ZXJdWydjb2RlJ11dKSA9PT0gdHJ1ZQogICAgICAgICAgICAgICAgfHwgaXNzZXQoVG9rZW5zOjokY2FzdFRva2Vuc1skdG9rZW5zWyRhZnRlcl1bJ2NvZGUnXV0pID09PSB0cnVlCiAgICAgICAgICAgICAgICB8fCBpc3NldCgkYWxsb3dlZFskdG9rZW5zWyRhZnRlcl1bJ2NvZGUnXV0pID09PSB0cnVlCiAgICAgICAgICAgICkgewogICAgICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmICgkdG9rZW5zWyRhZnRlcl1bJ2NvZGUnXSA9PT0gVF9PUEVOX1BBUkVOVEhFU0lTKSB7CiAgICAgICAgICAgICAgICAkYWZ0ZXIgPSAkdG9rZW5zWyRhZnRlcl1bJ3BhcmVudGhlc2lzX2Nsb3NlciddOwogICAgICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmICgkdG9rZW5zWyRhZnRlcl1bJ2NvZGUnXSA9PT0gVF9PUEVOX1NRVUFSRV9CUkFDS0VUKSB7CiAgICAgICAgICAgICAgICAkYWZ0ZXIgPSAkdG9rZW5zWyRhZnRlcl1bJ2JyYWNrZXRfY2xvc2VyJ107CiAgICAgICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKCR0b2tlbnNbJGFmdGVyXVsnY29kZSddID09PSBUX09QRU5fU0hPUlRfQVJSQVkpIHsKICAgICAgICAgICAgICAgICRhZnRlciA9ICR0b2tlbnNbJGFmdGVyXVsnYnJhY2tldF9jbG9zZXInXTsKICAgICAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgICB9CgogICAgICAgICAgICBicmVhazsKICAgICAgICB9Ly9lbmQgZm9yCgogICAgICAgICRhZnRlciA9ICRwaHBjc0ZpbGUtPmZpbmRQcmV2aW91cyhUb2tlbnM6OiRlbXB0eVRva2VucywgKCRhZnRlciAtIDEpLCBudWxsLCB0cnVlKTsKCiAgICAgICAgJGVycm9yID0gJ09wZXJhdGlvbiBtdXN0IGJlIGJyYWNrZXRlZCc7CiAgICAgICAgaWYgKCRiZWZvcmUgPT09ICRhZnRlciB8fCAkYmVmb3JlID09PSAkc3RhY2tQdHIgfHwgJGFmdGVyID09PSAkc3RhY2tQdHIpIHsKICAgICAgICAgICAgJHBocGNzRmlsZS0+YWRkRXJyb3IoJGVycm9yLCAkc3RhY2tQdHIsICdNaXNzaW5nQnJhY2tldHMnKTsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgJGZpeCA9ICRwaHBjc0ZpbGUtPmFkZEZpeGFibGVFcnJvcigkZXJyb3IsICRzdGFja1B0ciwgJ01pc3NpbmdCcmFja2V0cycpOwogICAgICAgIGlmICgkZml4ID09PSB0cnVlKSB7CiAgICAgICAgICAgIC8vIENhbiBvbmx5IGZpeCB0aGlzIGVycm9yIGlmIGJvdGggdG9rZW5zIGFyZSBhdmFpbGFibGUgZm9yIGZpeGluZy4KICAgICAgICAgICAgLy8gQWRkaW5nIG9uZSBicmFja2V0IHdpdGhvdXQgdGhlIG90aGVyIHdpbGwgY3JlYXRlIHBhcnNlIGVycm9ycy4KICAgICAgICAgICAgJHBocGNzRmlsZS0+Zml4ZXItPmJlZ2luQ2hhbmdlc2V0KCk7CiAgICAgICAgICAgICRwaHBjc0ZpbGUtPmZpeGVyLT5yZXBsYWNlVG9rZW4oJGJlZm9yZSwgJygnLiR0b2tlbnNbJGJlZm9yZV1bJ2NvbnRlbnQnXSk7CiAgICAgICAgICAgICRwaHBjc0ZpbGUtPmZpeGVyLT5yZXBsYWNlVG9rZW4oJGFmdGVyLCAkdG9rZW5zWyRhZnRlcl1bJ2NvbnRlbnQnXS4nKScpOwogICAgICAgICAgICAkcGhwY3NGaWxlLT5maXhlci0+ZW5kQ2hhbmdlc2V0KCk7CiAgICAgICAgfQoKICAgIH0vL2VuZCBhZGRNaXNzaW5nQnJhY2tldHNFcnJvcigpCgoKfS8vZW5kIGNsYXNzCiI7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lc3BhY2VzIjthOjE6e3M6NTA6IlxQSFBfQ29kZVNuaWZmZXJcU3RhbmRhcmRzXFNxdWl6XFNuaWZmc1xGb3JtYXR0aW5nIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NTA6IlxQSFBfQ29kZVNuaWZmZXJcU3RhbmRhcmRzXFNxdWl6XFNuaWZmc1xGb3JtYXR0aW5nIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTA6IkZvcm1hdHRpbmciO319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbmNsdWRlcyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBmdW5jdGlvbnMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY29uc3RhbnRzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNsYXNzZXMiO2E6MTp7czo3MToiXFBIUF9Db2RlU25pZmZlclxTdGFuZGFyZHNcU3F1aXpcU25pZmZzXEZvcm1hdHRpbmdcT3BlcmF0b3JCcmFja2V0U25pZmYiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfIjoxMTp7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NzE6IlxQSFBfQ29kZVNuaWZmZXJcU3RhbmRhcmRzXFNxdWl6XFNuaWZmc1xGb3JtYXR0aW5nXE9wZXJhdG9yQnJhY2tldFNuaWZmIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MjA6Ik9wZXJhdG9yQnJhY2tldFNuaWZmIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGRvY0Jsb2NrIjtOO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBhYnN0cmFjdCI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBmaW5hbCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBwYXJlbnQiO047czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGltcGxlbWVudHMiO2E6MTp7czoyOToiXFBIUF9Db2RlU25pZmZlclxTbmlmZnNcU25pZmYiO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czoyOToiXFBIUF9Db2RlU25pZmZlclxTbmlmZnNcU25pZmYiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czo1OiJTbmlmZiI7fX1zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AY29uc3RhbnRzIjthOjA6e31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AcHJvcGVydGllcyI7YToxOntzOjkzOiJcUEhQX0NvZGVTbmlmZmVyXFN0YW5kYXJkc1xTcXVpelxTbmlmZnNcRm9ybWF0dGluZ1xPcGVyYXRvckJyYWNrZXRTbmlmZjo6JHN1cHBvcnRlZFRva2VuaXplcnMiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkiOjg6e3M6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6OTM6IlxQSFBfQ29kZVNuaWZmZXJcU3RhbmRhcmRzXFNxdWl6XFNuaWZmc1xGb3JtYXR0aW5nXE9wZXJhdG9yQnJhY2tldFNuaWZmOjokc3VwcG9ydGVkVG9rZW5pemVycyI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjE5OiJzdXBwb3J0ZWRUb2tlbml6ZXJzIjt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAZG9jQmxvY2siO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jayI6Nzp7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBzdW1tYXJ5IjtzOjQxOiJBIGxpc3Qgb2YgdG9rZW5pemVycyB0aGlzIHNuaWZmIHN1cHBvcnRzLiI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YToxOntpOjA7Tzo0MzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcVmFyXyI6NDp7czoxNToiACoAdmFyaWFibGVOYW1lIjtzOjA6IiI7czo3OiIAKgB0eXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQXJyYXlfIjozOntzOjEyOiIAKgB2YWx1ZVR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e31zOjEwOiIAKgBrZXlUeXBlIjtOO3M6MTc6IgAqAGRlZmF1bHRLZXlUeXBlIjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29tcG91bmQiOjE6e3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29tcG91bmQAdHlwZXMiO2E6Mjp7aTowO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xTdHJpbmdfIjowOnt9aToxO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xJbnRlZ2VyIjowOnt9fX19czo3OiIAKgBuYW1lIjtzOjM6InZhciI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX19fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAY29udGV4dCI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQiOjI6e3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2UiO3M6NDk6IlBIUF9Db2RlU25pZmZlclxTdGFuZGFyZHNcU3F1aXpcU25pZmZzXEZvcm1hdHRpbmciO3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2VBbGlhc2VzIjthOjM6e3M6NDoiRmlsZSI7czoyNjoiUEhQX0NvZGVTbmlmZmVyXEZpbGVzXEZpbGUiO3M6NToiU25pZmYiO3M6Mjg6IlBIUF9Db2RlU25pZmZlclxTbmlmZnNcU25pZmYiO3M6NjoiVG9rZW5zIjtzOjI3OiJQSFBfQ29kZVNuaWZmZXJcVXRpbFxUb2tlbnMiO319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MTk7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAdHlwZXMiO2E6MDp7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AGRlZmF1bHQiO3M6MTM6IlsnUEhQJywgJ0pTJ10iO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AHN0YXRpYyI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjY6InB1YmxpYyI7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToyNDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQB0eXBlIjtOO319czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAG1ldGhvZHMiO2E6Mzp7czo4MzoiXFBIUF9Db2RlU25pZmZlclxTdGFuZGFyZHNcU3F1aXpcU25pZmZzXEZvcm1hdHRpbmdcT3BlcmF0b3JCcmFja2V0U25pZmY6OnJlZ2lzdGVyKCkiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kIjo5OntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZG9jQmxvY2siO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jayI6Nzp7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBzdW1tYXJ5IjtzOjU3OiJSZXR1cm5zIGFuIGFycmF5IG9mIHRva2VucyB0aGlzIHRlc3Qgd2FudHMgdG8gbGlzdGVuIGZvci4iO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHRhZ3MiO2E6MTp7aTowO086NDY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFJldHVybl8iOjM6e3M6NzoiACoAdHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFycmF5XyI6Mzp7czoxMjoiACoAdmFsdWVUeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czoxMDoiACoAa2V5VHlwZSI7TjtzOjE3OiIAKgBkZWZhdWx0S2V5VHlwZSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbXBvdW5kIjoxOntzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbXBvdW5kAHR5cGVzIjthOjI6e2k6MDtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcU3RyaW5nXyI6MDp7fWk6MTtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcSW50ZWdlciI6MDp7fX19fXM6NzoiACoAbmFtZSI7czo2OiJyZXR1cm4iO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO3I6ODA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MzA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6ODM6IlxQSFBfQ29kZVNuaWZmZXJcU3RhbmRhcmRzXFNxdWl6XFNuaWZmc1xGb3JtYXR0aW5nXE9wZXJhdG9yQnJhY2tldFNuaWZmOjpyZWdpc3RlcigpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6ODoicmVnaXN0ZXIiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjY6InB1YmxpYyI7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MzU7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e319czo4MjoiXFBIUF9Db2RlU25pZmZlclxTdGFuZGFyZHNcU3F1aXpcU25pZmZzXEZvcm1hdHRpbmdcT3BlcmF0b3JCcmFja2V0U25pZmY6OnByb2Nlc3MoKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjk6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6NTk6IlByb2Nlc3NlcyB0aGlzIHRlc3QsIHdoZW4gb25lIG9mIGl0cyB0b2tlbnMgaXMgZW5jb3VudGVyZWQuIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjM6e2k6MDtPOjQ0OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbSI6NTp7czo1ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAHZhcmlhYmxlTmFtZSI7czo5OiJwaHBjc0ZpbGUiO3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbQBpc1ZhcmlhZGljIjtiOjA7czo3OiIAKgB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XyI6MTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6Mjc6IlxQSFBfQ29kZVNuaWZmZXJcRmlsZXNcRmlsZSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjQ6IkZpbGUiO319czo3OiIAKgBuYW1lIjtzOjU6InBhcmFtIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czoyMzoiVGhlIGZpbGUgYmVpbmcgc2Nhbm5lZC4iO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fX1pOjE7Tzo0NDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0iOjU6e3M6NTg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbQB2YXJpYWJsZU5hbWUiO3M6ODoic3RhY2tQdHIiO3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbQBpc1ZhcmlhZGljIjtiOjA7czo3OiIAKgB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcSW50ZWdlciI6MDp7fXM6NzoiACoAbmFtZSI7czo1OiJwYXJhbSI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6NjU6IlRoZSBwb3NpdGlvbiBvZiB0aGUgY3VycmVudCB0b2tlbiBpbiB0aGUKc3RhY2sgcGFzc2VkIGluICR0b2tlbnMuIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX19aToyO086NDY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFJldHVybl8iOjM6e3M6NzoiACoAdHlwZSI7TzozNjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFZvaWRfIjowOnt9czo3OiIAKgBuYW1lIjtzOjY6InJldHVybiI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX19fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAY29udGV4dCI7cjo4MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTo0MjtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo4MjoiXFBIUF9Db2RlU25pZmZlclxTdGFuZGFyZHNcU3F1aXpcU25pZmZzXEZvcm1hdHRpbmdcT3BlcmF0b3JCcmFja2V0U25pZmY6OnByb2Nlc3MoKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjc6InByb2Nlc3MiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjY6InB1YmxpYyI7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6Mjp7aTowO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6OToicGhwY3NGaWxlIjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XyI6MTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6Mjc6IlxQSFBfQ29kZVNuaWZmZXJcRmlsZXNcRmlsZSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjQ6IkZpbGUiO319czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9aToxO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6ODoic3RhY2tQdHIiO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO319czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTo1MTtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAcmV0dXJuVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fX1zOjk4OiJcUEhQX0NvZGVTbmlmZmVyXFN0YW5kYXJkc1xTcXVpelxTbmlmZnNcRm9ybWF0dGluZ1xPcGVyYXRvckJyYWNrZXRTbmlmZjo6YWRkTWlzc2luZ0JyYWNrZXRzRXJyb3IoKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjk6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6Mzk6IkFkZCBhbmQgZml4IHRoZSBtaXNzaW5nIGJyYWNrZXRzIGVycm9yLiI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YTozOntpOjA7Tzo0NDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0iOjU6e3M6NTg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbQB2YXJpYWJsZU5hbWUiO3M6OToicGhwY3NGaWxlIjtzOjU2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0AaXNWYXJpYWRpYyI7YjowO3M6NzoiACoAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8iOjE6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XwBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjI3OiJcUEhQX0NvZGVTbmlmZmVyXEZpbGVzXEZpbGUiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czo0OiJGaWxlIjt9fXM6NzoiACoAbmFtZSI7czo1OiJwYXJhbSI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MjM6IlRoZSBmaWxlIGJlaW5nIHNjYW5uZWQuIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX19aToxO086NDQ6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtIjo1OntzOjU4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0AdmFyaWFibGVOYW1lIjtzOjg6InN0YWNrUHRyIjtzOjU2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0AaXNWYXJpYWRpYyI7YjowO3M6NzoiACoAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEludGVnZXIiOjA6e31zOjc6IgAqAG5hbWUiO3M6NToicGFyYW0iO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjY1OiJUaGUgcG9zaXRpb24gb2YgdGhlIGN1cnJlbnQgdG9rZW4gaW4gdGhlCnN0YWNrIHBhc3NlZCBpbiAkdG9rZW5zLiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fWk6MjtPOjQ2OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xSZXR1cm5fIjozOntzOjc6IgAqAHR5cGUiO086MzY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xWb2lkXyI6MDp7fXM6NzoiACoAbmFtZSI7czo2OiJyZXR1cm4iO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO3I6ODA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MjYwO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjk4OiJcUEhQX0NvZGVTbmlmZmVyXFN0YW5kYXJkc1xTcXVpelxTbmlmZnNcRm9ybWF0dGluZ1xPcGVyYXRvckJyYWNrZXRTbmlmZjo6YWRkTWlzc2luZ0JyYWNrZXRzRXJyb3IoKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjIzOiJhZGRNaXNzaW5nQnJhY2tldHNFcnJvciI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhYnN0cmFjdCI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABzdGF0aWMiO2I6MDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6NjoicHVibGljIjt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFyZ3VtZW50cyI7YToyOntpOjA7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czo5OiJwaHBjc0ZpbGUiO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO31pOjE7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czo4OiJzdGFja1B0ciI7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fX1zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjI2OTtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAcmV0dXJuVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fX19czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAHVzZWRUcmFpdHMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MTY7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9fX1zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGludGVyZmFjZXMiO2E6MDp7fXM6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAdHJhaXRzIjthOjA6e319";