1615849909
waR3U4bTeM%3A9890ecaed02328e646ccdb8ebb613949-48843a8601956637aae1c14653a1b67f
s:3284:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxMjp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjQ4ODQzYTg2MDE5NTY2MzdhYWUxYzE0NjUzYTFiNjdmIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MTI6IlRlc3RDYXNlLnBocCI7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBwYXRoIjtzOjUxOiJ2ZW5kb3IvZnJpZW5kc29mcGhwL3BocC1jcy1maXhlci90ZXN0cy9UZXN0Q2FzZS5waHAiO3M6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAc291cmNlIjtzOjE0NTA6Ijw/cGhwCgovKgogKiBUaGlzIGZpbGUgaXMgcGFydCBvZiBQSFAgQ1MgRml4ZXIuCiAqCiAqIChjKSBGYWJpZW4gUG90ZW5jaWVyIDxmYWJpZW5Ac3ltZm9ueS5jb20+CiAqICAgICBEYXJpdXN6IFJ1bWnFhHNraSA8ZGFyaXVzei5ydW1pbnNraUBnbWFpbC5jb20+CiAqCiAqIFRoaXMgc291cmNlIGZpbGUgaXMgc3ViamVjdCB0byB0aGUgTUlUIGxpY2Vuc2UgdGhhdCBpcyBidW5kbGVkCiAqIHdpdGggdGhpcyBzb3VyY2UgY29kZSBpbiB0aGUgZmlsZSBMSUNFTlNFLgogKi8KCm5hbWVzcGFjZSBQaHBDc0ZpeGVyXFRlc3RzOwoKdXNlIFBIUFVuaXRcRnJhbWV3b3JrXFRlc3RDYXNlIGFzIEJhc2VUZXN0Q2FzZTsKdXNlIFBIUFVuaXRHb29kUHJhY3RpY2VzXFRyYWl0c1xFeHBlY3RhdGlvblZpYUNvZGVPdmVyQW5ub3RhdGlvblRyYWl0Owp1c2UgUEhQVW5pdEdvb2RQcmFjdGljZXNcVHJhaXRzXEV4cGVjdE92ZXJTZXRFeGNlcHRpb25UcmFpdDsKdXNlIFBIUFVuaXRHb29kUHJhY3RpY2VzXFRyYWl0c1xJZGVudGl0eU92ZXJFcXVhbGl0eVRyYWl0Owp1c2UgUEhQVW5pdEdvb2RQcmFjdGljZXNcVHJhaXRzXFByb3BoZWN5T3Zlck1vY2tPYmplY3RUcmFpdDsKdXNlIFBIUFVuaXRHb29kUHJhY3RpY2VzXFRyYWl0c1xQcm9waGVzaXplT25seUludGVyZmFjZVRyYWl0OwoKaWYgKHRyYWl0X2V4aXN0cyhQcm9waGVzaXplT25seUludGVyZmFjZVRyYWl0OjpjbGFzcykpIHsKICAgIC8qKgogICAgICogQGF1dGhvciBEYXJpdXN6IFJ1bWnFhHNraSA8ZGFyaXVzei5ydW1pbnNraUBnbWFpbC5jb20+CiAgICAgKgogICAgICogQGludGVybmFsCiAgICAgKi8KICAgIGFic3RyYWN0IGNsYXNzIFRlc3RDYXNlIGV4dGVuZHMgQmFzZVRlc3RDYXNlCiAgICB7CiAgICAgICAgdXNlIEV4cGVjdGF0aW9uVmlhQ29kZU92ZXJBbm5vdGF0aW9uVHJhaXQ7CiAgICAgICAgdXNlIEV4cGVjdE92ZXJTZXRFeGNlcHRpb25UcmFpdDsKICAgICAgICB1c2UgSWRlbnRpdHlPdmVyRXF1YWxpdHlUcmFpdDsKICAgICAgICB1c2UgUHJvcGhlY3lPdmVyTW9ja09iamVjdFRyYWl0OwogICAgICAgIHVzZSBQcm9waGVzaXplT25seUludGVyZmFjZVRyYWl0OwogICAgfQp9IGVsc2UgewogICAgLyoqCiAgICAgKiBWZXJzaW9uIHdpdGhvdXQgdHJhaXRzIGZvciBjYXNlcyB3aGVuIHRoaXMgY2xhc3MgaXMgdXNlZCBhcyBhIGxpYi4KICAgICAqCiAgICAgKiBAYXV0aG9yIERhcml1c3ogUnVtacWEc2tpIDxkYXJpdXN6LnJ1bWluc2tpQGdtYWlsLmNvbT4KICAgICAqCiAgICAgKiBAaW50ZXJuYWwKICAgICAqCiAgICAgKiBAdG9kbyAzLjAgVG8gYmUgcmVtb3ZlZCB3aGVuIHdlIGNsZWFuIHVwIGNvbXBvc2VyIHByb2QtYXV0b2xvYWRlciBmcm9tIGRldi1wYWNrYWdlcy4KICAgICAqLwogICAgYWJzdHJhY3QgY2xhc3MgVGVzdENhc2UgZXh0ZW5kcyBCYXNlVGVzdENhc2UKICAgIHsKICAgIH0KfQoiO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbmFtZXNwYWNlcyI7YToxOntzOjE3OiJcUGhwQ3NGaXhlclxUZXN0cyI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjE3OiJcUGhwQ3NGaXhlclxUZXN0cyI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjU6IlRlc3RzIjt9fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW5jbHVkZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZnVuY3Rpb25zIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNvbnN0YW50cyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGludGVyZmFjZXMiO2E6MDp7fXM6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAdHJhaXRzIjthOjA6e319";