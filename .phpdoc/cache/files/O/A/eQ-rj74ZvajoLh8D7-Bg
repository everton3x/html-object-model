1615849917
waR3U4bTeM%3Adc6ddf70cdb8786e2313b53e79abb808-ec5a79ff34a4812e2e77124a7aa1d2d1
s:113124:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxMjp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6NDk6IlRlc3RzIGZvciBQSFBfQ29kZVNuaWZmZXIgZXJyb3Igc3VwcHJlc3Npb24gdGFncy4iO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHRhZ3MiO2E6Mzp7aTowO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXEF1dGhvciI6NDp7czo3OiIAKgBuYW1lIjtzOjY6ImF1dGhvciI7czo1NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXEF1dGhvcgBhdXRob3JOYW1lIjtzOjEzOiJHcmVnIFNoZXJ3b29kIjtzOjU4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcQXV0aG9yAGF1dGhvckVtYWlsIjtzOjE5OiJnc2hlcndvb2RAc3F1aXoubmV0IjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tjt9aToxO086NDY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXEdlbmVyaWMiOjI6e3M6NzoiACoAbmFtZSI7czo5OiJjb3B5cmlnaHQiO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjQ0OiIyMDA2LTIwMTUgU3F1aXogUHR5IEx0ZCAoQUJOIDc3IDA4NCA2NzAgNjAwKSI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fWk6MjtPOjQ2OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xHZW5lcmljIjoyOntzOjc6IgAqAG5hbWUiO3M6NzoibGljZW5zZSI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6ODA6Imh0dHBzOi8vZ2l0aHViLmNvbS9zcXVpemxhYnMvUEhQX0NvZGVTbmlmZmVyL2Jsb2IvbWFzdGVyL2xpY2VuY2UudHh0IEJTRCBMaWNlbmNlIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX19fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAY29udGV4dCI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQiOjI6e3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2UiO3M6MDoiIjtzOjU2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlQWxpYXNlcyI7YTowOnt9fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjI7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBoYXNoIjtzOjMyOiJlYzVhNzlmZjM0YTQ4MTJlMmU3NzEyNGE3YWExZDJkMSI7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lIjtzOjI0OiJFcnJvclN1cHByZXNzaW9uVGVzdC5waHAiO3M6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAcGF0aCI7czo2ODoidmVuZG9yL3NxdWl6bGFicy9waHBfY29kZXNuaWZmZXIvdGVzdHMvQ29yZS9FcnJvclN1cHByZXNzaW9uVGVzdC5waHAiO3M6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAc291cmNlIjtzOjUzNzA4OiI8P3BocAovKioKICogVGVzdHMgZm9yIFBIUF9Db2RlU25pZmZlciBlcnJvciBzdXBwcmVzc2lvbiB0YWdzLgogKgogKiBAYXV0aG9yICAgIEdyZWcgU2hlcndvb2QgPGdzaGVyd29vZEBzcXVpei5uZXQ+CiAqIEBjb3B5cmlnaHQgMjAwNi0yMDE1IFNxdWl6IFB0eSBMdGQgKEFCTiA3NyAwODQgNjcwIDYwMCkKICogQGxpY2Vuc2UgICBodHRwczovL2dpdGh1Yi5jb20vc3F1aXpsYWJzL1BIUF9Db2RlU25pZmZlci9ibG9iL21hc3Rlci9saWNlbmNlLnR4dCBCU0QgTGljZW5jZQogKi8KCm5hbWVzcGFjZSBQSFBfQ29kZVNuaWZmZXJcVGVzdHNcQ29yZTsKCnVzZSBQSFBfQ29kZVNuaWZmZXJcQ29uZmlnOwp1c2UgUEhQX0NvZGVTbmlmZmVyXFJ1bGVzZXQ7CnVzZSBQSFBfQ29kZVNuaWZmZXJcRmlsZXNcRHVtbXlGaWxlOwp1c2UgUEhQVW5pdFxGcmFtZXdvcmtcVGVzdENhc2U7CgpjbGFzcyBFcnJvclN1cHByZXNzaW9uVGVzdCBleHRlbmRzIFRlc3RDYXNlCnsKCgogICAgLyoqCiAgICAgKiBUZXN0IHN1cHByZXNzaW5nIGEgc2luZ2xlIGVycm9yLgogICAgICoKICAgICAqIEByZXR1cm4gdm9pZAogICAgICovCiAgICBwdWJsaWMgZnVuY3Rpb24gdGVzdFN1cHByZXNzRXJyb3IoKQogICAgewogICAgICAgICRjb25maWcgICAgICAgICAgICA9IG5ldyBDb25maWcoKTsKICAgICAgICAkY29uZmlnLT5zdGFuZGFyZHMgPSBbJ0dlbmVyaWMnXTsKICAgICAgICAkY29uZmlnLT5zbmlmZnMgICAgPSBbJ0dlbmVyaWMuUEhQLkxvd2VyQ2FzZUNvbnN0YW50J107CgogICAgICAgICRydWxlc2V0ID0gbmV3IFJ1bGVzZXQoJGNvbmZpZyk7CgogICAgICAgIC8vIFByb2Nlc3Mgd2l0aG91dCBzdXBwcmVzc2lvbi4KICAgICAgICAkY29udGVudCA9ICc8P3BocCAnLlBIUF9FT0wuJyR2YXIgPSBGQUxTRTsnOwogICAgICAgICRmaWxlICAgID0gbmV3IER1bW15RmlsZSgkY29udGVudCwgJHJ1bGVzZXQsICRjb25maWcpOwogICAgICAgICRmaWxlLT5wcm9jZXNzKCk7CgogICAgICAgICRlcnJvcnMgICAgPSAkZmlsZS0+Z2V0RXJyb3JzKCk7CiAgICAgICAgJG51bUVycm9ycyA9ICRmaWxlLT5nZXRFcnJvckNvdW50KCk7CiAgICAgICAgJHRoaXMtPmFzc2VydEVxdWFscygxLCAkbnVtRXJyb3JzKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0Q291bnQoMSwgJGVycm9ycyk7CgogICAgICAgIC8vIFByb2Nlc3Mgd2l0aCBpbmxpbmUgY29tbWVudCBzdXBwcmVzc2lvbi4KICAgICAgICAkY29udGVudCA9ICc8P3BocCAnLlBIUF9FT0wuJy8vIHBocGNzOmRpc2FibGUnLlBIUF9FT0wuJyR2YXIgPSBGQUxTRTsnLlBIUF9FT0wuJy8vIHBocGNzOmVuYWJsZSc7CiAgICAgICAgJGZpbGUgICAgPSBuZXcgRHVtbXlGaWxlKCRjb250ZW50LCAkcnVsZXNldCwgJGNvbmZpZyk7CiAgICAgICAgJGZpbGUtPnByb2Nlc3MoKTsKCiAgICAgICAgJGVycm9ycyAgICA9ICRmaWxlLT5nZXRFcnJvcnMoKTsKICAgICAgICAkbnVtRXJyb3JzID0gJGZpbGUtPmdldEVycm9yQ291bnQoKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0RXF1YWxzKDAsICRudW1FcnJvcnMpOwogICAgICAgICR0aGlzLT5hc3NlcnRDb3VudCgwLCAkZXJyb3JzKTsKCiAgICAgICAgLy8gUHJvY2VzcyB3aXRoIG11bHRpLWxpbmUgaW5saW5lIGNvbW1lbnQgc3VwcHJlc3Npb24sIHRhYi1pbmRlbnRlZC4KICAgICAgICAkY29udGVudCA9ICc8P3BocCAnLlBIUF9FT0wuIlx0Ii4nLy8gRm9yIHJlYXNvbnMnLlBIUF9FT0wuIlx0Ii4nLy8gcGhwY3M6ZGlzYWJsZScuUEhQX0VPTC4iXHQiLickdmFyID0gRkFMU0U7Jy5QSFBfRU9MLiJcdCIuJy8vIHBocGNzOmVuYWJsZSc7CiAgICAgICAgJGZpbGUgICAgPSBuZXcgRHVtbXlGaWxlKCRjb250ZW50LCAkcnVsZXNldCwgJGNvbmZpZyk7CiAgICAgICAgJGZpbGUtPnByb2Nlc3MoKTsKCiAgICAgICAgJGVycm9ycyAgICA9ICRmaWxlLT5nZXRFcnJvcnMoKTsKICAgICAgICAkbnVtRXJyb3JzID0gJGZpbGUtPmdldEVycm9yQ291bnQoKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0RXF1YWxzKDAsICRudW1FcnJvcnMpOwogICAgICAgICR0aGlzLT5hc3NlcnRDb3VudCgwLCAkZXJyb3JzKTsKCiAgICAgICAgLy8gUHJvY2VzcyB3aXRoIGlubGluZSBAIGNvbW1lbnQgc3VwcHJlc3Npb24uCiAgICAgICAgJGNvbnRlbnQgPSAnPD9waHAgJy5QSFBfRU9MLicvLyBAcGhwY3M6ZGlzYWJsZScuUEhQX0VPTC4nJHZhciA9IEZBTFNFOycuUEhQX0VPTC4nLy8gQHBocGNzOmVuYWJsZSc7CiAgICAgICAgJGZpbGUgICAgPSBuZXcgRHVtbXlGaWxlKCRjb250ZW50LCAkcnVsZXNldCwgJGNvbmZpZyk7CiAgICAgICAgJGZpbGUtPnByb2Nlc3MoKTsKCiAgICAgICAgJGVycm9ycyAgICA9ICRmaWxlLT5nZXRFcnJvcnMoKTsKICAgICAgICAkbnVtRXJyb3JzID0gJGZpbGUtPmdldEVycm9yQ291bnQoKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0RXF1YWxzKDAsICRudW1FcnJvcnMpOwogICAgICAgICR0aGlzLT5hc3NlcnRDb3VudCgwLCAkZXJyb3JzKTsKCiAgICAgICAgLy8gUHJvY2VzcyB3aXRoIGlubGluZSBjb21tZW50IHN1cHByZXNzaW9uIG1peGVkIGNhc2UuCiAgICAgICAgJGNvbnRlbnQgPSAnPD9waHAgJy5QSFBfRU9MLicvLyBQSFBDUzpEaXNhYmxlJy5QSFBfRU9MLickdmFyID0gRkFMU0U7Jy5QSFBfRU9MLicvLyBwSFBjczplbmFiTEUnOwogICAgICAgICRmaWxlICAgID0gbmV3IER1bW15RmlsZSgkY29udGVudCwgJHJ1bGVzZXQsICRjb25maWcpOwogICAgICAgICRmaWxlLT5wcm9jZXNzKCk7CgogICAgICAgICRlcnJvcnMgICAgPSAkZmlsZS0+Z2V0RXJyb3JzKCk7CiAgICAgICAgJG51bUVycm9ycyA9ICRmaWxlLT5nZXRFcnJvckNvdW50KCk7CiAgICAgICAgJHRoaXMtPmFzc2VydEVxdWFscygwLCAkbnVtRXJyb3JzKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0Q291bnQoMCwgJGVycm9ycyk7CgogICAgICAgIC8vIFByb2Nlc3Mgd2l0aCBpbmxpbmUgY29tbWVudCBzdXBwcmVzc2lvbiAoZGVwcmVjYXRlZCBzeW50YXgpLgogICAgICAgICRjb250ZW50ID0gJzw/cGhwICcuUEhQX0VPTC4nLy8gQGNvZGluZ1N0YW5kYXJkc0lnbm9yZVN0YXJ0Jy5QSFBfRU9MLickdmFyID0gRkFMU0U7Jy5QSFBfRU9MLicvLyBAY29kaW5nU3RhbmRhcmRzSWdub3JlRW5kJzsKICAgICAgICAkZmlsZSAgICA9IG5ldyBEdW1teUZpbGUoJGNvbnRlbnQsICRydWxlc2V0LCAkY29uZmlnKTsKICAgICAgICAkZmlsZS0+cHJvY2VzcygpOwoKICAgICAgICAkZXJyb3JzICAgID0gJGZpbGUtPmdldEVycm9ycygpOwogICAgICAgICRudW1FcnJvcnMgPSAkZmlsZS0+Z2V0RXJyb3JDb3VudCgpOwogICAgICAgICR0aGlzLT5hc3NlcnRFcXVhbHMoMCwgJG51bUVycm9ycyk7CiAgICAgICAgJHRoaXMtPmFzc2VydENvdW50KDAsICRlcnJvcnMpOwoKICAgICAgICAvLyBQcm9jZXNzIHdpdGggYmxvY2sgY29tbWVudCBzdXBwcmVzc2lvbi4KICAgICAgICAkY29udGVudCA9ICc8P3BocCAnLlBIUF9FT0wuJy8qIHBocGNzOmRpc2FibGUgKi8nLlBIUF9FT0wuJyR2YXIgPSBGQUxTRTsnLlBIUF9FT0wuJy8qIHBocGNzOmVuYWJsZSAqLyc7CiAgICAgICAgJGZpbGUgICAgPSBuZXcgRHVtbXlGaWxlKCRjb250ZW50LCAkcnVsZXNldCwgJGNvbmZpZyk7CiAgICAgICAgJGZpbGUtPnByb2Nlc3MoKTsKCiAgICAgICAgJGVycm9ycyAgICA9ICRmaWxlLT5nZXRFcnJvcnMoKTsKICAgICAgICAkbnVtRXJyb3JzID0gJGZpbGUtPmdldEVycm9yQ291bnQoKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0RXF1YWxzKDAsICRudW1FcnJvcnMpOwogICAgICAgICR0aGlzLT5hc3NlcnRDb3VudCgwLCAkZXJyb3JzKTsKCiAgICAgICAgLy8gUHJvY2VzcyB3aXRoIG11bHRpLWxpbmUgYmxvY2sgY29tbWVudCBzdXBwcmVzc2lvbi4KICAgICAgICAkY29udGVudCA9ICc8P3BocCAnLlBIUF9FT0wuJy8qJy5QSFBfRU9MLicgcGhwY3M6ZGlzYWJsZScuUEhQX0VPTC4nICovJy5QSFBfRU9MLickdmFyID0gRkFMU0U7Jy5QSFBfRU9MLicvKicuUEhQX0VPTC4nIHBocGNzOmVuYWJsZScuUEhQX0VPTC4nICovJzsKICAgICAgICAkZmlsZSAgICA9IG5ldyBEdW1teUZpbGUoJGNvbnRlbnQsICRydWxlc2V0LCAkY29uZmlnKTsKICAgICAgICAkZmlsZS0+cHJvY2VzcygpOwoKICAgICAgICAkZXJyb3JzICAgID0gJGZpbGUtPmdldEVycm9ycygpOwogICAgICAgICRudW1FcnJvcnMgPSAkZmlsZS0+Z2V0RXJyb3JDb3VudCgpOwogICAgICAgICR0aGlzLT5hc3NlcnRFcXVhbHMoMCwgJG51bUVycm9ycyk7CiAgICAgICAgJHRoaXMtPmFzc2VydENvdW50KDAsICRlcnJvcnMpOwoKICAgICAgICAvLyBQcm9jZXNzIHdpdGggbXVsdGktbGluZSBibG9jayBjb21tZW50IHN1cHByZXNzaW9uLCBlYWNoIGxpbmUgc3RhcnJlZC4KICAgICAgICAkY29udGVudCA9ICc8P3BocCAnLlBIUF9FT0wuJy8qJy5QSFBfRU9MLicgKiBwaHBjczpkaXNhYmxlJy5QSFBfRU9MLicgKi8nLlBIUF9FT0wuJyR2YXIgPSBGQUxTRTsnLlBIUF9FT0wuJy8qJy5QSFBfRU9MLicgKiBwaHBjczplbmFibGUnLlBIUF9FT0wuJyAqLyc7CiAgICAgICAgJGZpbGUgICAgPSBuZXcgRHVtbXlGaWxlKCRjb250ZW50LCAkcnVsZXNldCwgJGNvbmZpZyk7CiAgICAgICAgJGZpbGUtPnByb2Nlc3MoKTsKCiAgICAgICAgJGVycm9ycyAgICA9ICRmaWxlLT5nZXRFcnJvcnMoKTsKICAgICAgICAkbnVtRXJyb3JzID0gJGZpbGUtPmdldEVycm9yQ291bnQoKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0RXF1YWxzKDAsICRudW1FcnJvcnMpOwogICAgICAgICR0aGlzLT5hc3NlcnRDb3VudCgwLCAkZXJyb3JzKTsKCiAgICAgICAgLy8gUHJvY2VzcyB3aXRoIG11bHRpLWxpbmUgYmxvY2sgY29tbWVudCBzdXBwcmVzc2lvbiwgdGFiLWluZGVudGVkLgogICAgICAgICRjb250ZW50ID0gJzw/cGhwICcuUEhQX0VPTC4iXHQiLicvKicuUEhQX0VPTC4iXHQiLicgKiBwaHBjczpkaXNhYmxlJy5QSFBfRU9MLiJcdCIuJyAqLycuUEhQX0VPTC4iXHQiLickdmFyID0gRkFMU0U7Jy5QSFBfRU9MLiJcdCIuJy8qJy5QSFBfRU9MLicgKiBwaHBjczplbmFibGUnLlBIUF9FT0wuJyAqLyc7CiAgICAgICAgJGZpbGUgICAgPSBuZXcgRHVtbXlGaWxlKCRjb250ZW50LCAkcnVsZXNldCwgJGNvbmZpZyk7CiAgICAgICAgJGZpbGUtPnByb2Nlc3MoKTsKCiAgICAgICAgJGVycm9ycyAgICA9ICRmaWxlLT5nZXRFcnJvcnMoKTsKICAgICAgICAkbnVtRXJyb3JzID0gJGZpbGUtPmdldEVycm9yQ291bnQoKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0RXF1YWxzKDAsICRudW1FcnJvcnMpOwogICAgICAgICR0aGlzLT5hc3NlcnRDb3VudCgwLCAkZXJyb3JzKTsKCiAgICAgICAgLy8gUHJvY2VzcyB3aXRoIGJsb2NrIGNvbW1lbnQgc3VwcHJlc3Npb24gKGRlcHJlY2F0ZWQgc3ludGF4KS4KICAgICAgICAkY29udGVudCA9ICc8P3BocCAnLlBIUF9FT0wuJy8qIEBjb2RpbmdTdGFuZGFyZHNJZ25vcmVTdGFydCAqLycuUEhQX0VPTC4nJHZhciA9IEZBTFNFOycuUEhQX0VPTC4nLyogQGNvZGluZ1N0YW5kYXJkc0lnbm9yZUVuZCAqLyc7CiAgICAgICAgJGZpbGUgICAgPSBuZXcgRHVtbXlGaWxlKCRjb250ZW50LCAkcnVsZXNldCwgJGNvbmZpZyk7CiAgICAgICAgJGZpbGUtPnByb2Nlc3MoKTsKCiAgICAgICAgJGVycm9ycyAgICA9ICRmaWxlLT5nZXRFcnJvcnMoKTsKICAgICAgICAkbnVtRXJyb3JzID0gJGZpbGUtPmdldEVycm9yQ291bnQoKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0RXF1YWxzKDAsICRudW1FcnJvcnMpOwogICAgICAgICR0aGlzLT5hc3NlcnRDb3VudCgwLCAkZXJyb3JzKTsKCiAgICAgICAgLy8gUHJvY2VzcyB3aXRoIG11bHRpLWxpbmUgYmxvY2sgY29tbWVudCBzdXBwcmVzc2lvbiAoZGVwcmVjYXRlZCBzeW50YXgpLgogICAgICAgICRjb250ZW50ID0gJzw/cGhwICcuUEhQX0VPTC4nLyonLlBIUF9FT0wuJyBAY29kaW5nU3RhbmRhcmRzSWdub3JlU3RhcnQnLlBIUF9FT0wuJyAqLycuUEhQX0VPTC4nJHZhciA9IEZBTFNFOycuUEhQX0VPTC4nLyonLlBIUF9FT0wuJyBAY29kaW5nU3RhbmRhcmRzSWdub3JlRW5kJy5QSFBfRU9MLicgKi8nOwogICAgICAgICRmaWxlICAgID0gbmV3IER1bW15RmlsZSgkY29udGVudCwgJHJ1bGVzZXQsICRjb25maWcpOwogICAgICAgICRmaWxlLT5wcm9jZXNzKCk7CgogICAgICAgICRlcnJvcnMgICAgPSAkZmlsZS0+Z2V0RXJyb3JzKCk7CiAgICAgICAgJG51bUVycm9ycyA9ICRmaWxlLT5nZXRFcnJvckNvdW50KCk7CiAgICAgICAgJHRoaXMtPmFzc2VydEVxdWFscygwLCAkbnVtRXJyb3JzKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0Q291bnQoMCwgJGVycm9ycyk7CgogICAgICAgIC8vIFByb2Nlc3Mgd2l0aCBhIGRvY2Jsb2NrIHN1cHByZXNzaW9uLgogICAgICAgICRjb250ZW50ID0gJzw/cGhwICcuUEhQX0VPTC4nLyoqIHBocGNzOmRpc2FibGUgKi8nLlBIUF9FT0wuJyR2YXIgPSBGQUxTRTsnLlBIUF9FT0wuJy8qKiBwaHBjczplbmFibGUgKi8nOwogICAgICAgICRmaWxlICAgID0gbmV3IER1bW15RmlsZSgkY29udGVudCwgJHJ1bGVzZXQsICRjb25maWcpOwogICAgICAgICRmaWxlLT5wcm9jZXNzKCk7CgogICAgICAgICRlcnJvcnMgICAgPSAkZmlsZS0+Z2V0RXJyb3JzKCk7CiAgICAgICAgJG51bUVycm9ycyA9ICRmaWxlLT5nZXRFcnJvckNvdW50KCk7CiAgICAgICAgJHRoaXMtPmFzc2VydEVxdWFscygwLCAkbnVtRXJyb3JzKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0Q291bnQoMCwgJGVycm9ycyk7CgogICAgICAgIC8vIFByb2Nlc3Mgd2l0aCBhIGRvY2Jsb2NrIHN1cHByZXNzaW9uIChkZXByZWNhdGVkIHN5bnRheCkuCiAgICAgICAgJGNvbnRlbnQgPSAnPD9waHAgJy5QSFBfRU9MLicvKiogQGNvZGluZ1N0YW5kYXJkc0lnbm9yZVN0YXJ0ICovJy5QSFBfRU9MLickdmFyID0gRkFMU0U7Jy5QSFBfRU9MLicvKiogQGNvZGluZ1N0YW5kYXJkc0lnbm9yZUVuZCAqLyc7CiAgICAgICAgJGZpbGUgICAgPSBuZXcgRHVtbXlGaWxlKCRjb250ZW50LCAkcnVsZXNldCwgJGNvbmZpZyk7CiAgICAgICAgJGZpbGUtPnByb2Nlc3MoKTsKCiAgICAgICAgJGVycm9ycyAgICA9ICRmaWxlLT5nZXRFcnJvcnMoKTsKICAgICAgICAkbnVtRXJyb3JzID0gJGZpbGUtPmdldEVycm9yQ291bnQoKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0RXF1YWxzKDAsICRudW1FcnJvcnMpOwogICAgICAgICR0aGlzLT5hc3NlcnRDb3VudCgwLCAkZXJyb3JzKTsKCiAgICB9Ly9lbmQgdGVzdFN1cHByZXNzRXJyb3IoKQoKCiAgICAvKioKICAgICAqIFRlc3Qgc3VwcHJlc3NpbmcgMSBvdXQgb2YgMiBlcnJvcnMuCiAgICAgKgogICAgICogQHJldHVybiB2b2lkCiAgICAgKi8KICAgIHB1YmxpYyBmdW5jdGlvbiB0ZXN0U3VwcHJlc3NTb21lRXJyb3JzKCkKICAgIHsKICAgICAgICAkY29uZmlnICAgICAgICAgICAgPSBuZXcgQ29uZmlnKCk7CiAgICAgICAgJGNvbmZpZy0+c3RhbmRhcmRzID0gWydHZW5lcmljJ107CiAgICAgICAgJGNvbmZpZy0+c25pZmZzICAgID0gWydHZW5lcmljLlBIUC5Mb3dlckNhc2VDb25zdGFudCddOwoKICAgICAgICAkcnVsZXNldCA9IG5ldyBSdWxlc2V0KCRjb25maWcpOwoKICAgICAgICAvLyBQcm9jZXNzIHdpdGhvdXQgc3VwcHJlc3Npb24uCiAgICAgICAgJGNvbnRlbnQgPSAnPD9waHAgJy5QSFBfRU9MLickdmFyID0gRkFMU0U7Jy5QSFBfRU9MLickdmFyID0gVFJVRTsnOwogICAgICAgICRmaWxlICAgID0gbmV3IER1bW15RmlsZSgkY29udGVudCwgJHJ1bGVzZXQsICRjb25maWcpOwogICAgICAgICRmaWxlLT5wcm9jZXNzKCk7CgogICAgICAgICRlcnJvcnMgICAgPSAkZmlsZS0+Z2V0RXJyb3JzKCk7CiAgICAgICAgJG51bUVycm9ycyA9ICRmaWxlLT5nZXRFcnJvckNvdW50KCk7CiAgICAgICAgJHRoaXMtPmFzc2VydEVxdWFscygyLCAkbnVtRXJyb3JzKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0Q291bnQoMiwgJGVycm9ycyk7CgogICAgICAgIC8vIFByb2Nlc3Mgd2l0aCBzdXBwcmVzc2lvbi4KICAgICAgICAkY29udGVudCA9ICc8P3BocCAnLlBIUF9FT0wuJy8vIHBocGNzOmRpc2FibGUnLlBIUF9FT0wuJyR2YXIgPSBGQUxTRTsnLlBIUF9FT0wuJy8vIHBocGNzOmVuYWJsZScuUEhQX0VPTC4nJHZhciA9IFRSVUU7JzsKICAgICAgICAkZmlsZSAgICA9IG5ldyBEdW1teUZpbGUoJGNvbnRlbnQsICRydWxlc2V0LCAkY29uZmlnKTsKICAgICAgICAkZmlsZS0+cHJvY2VzcygpOwoKICAgICAgICAkZXJyb3JzICAgID0gJGZpbGUtPmdldEVycm9ycygpOwogICAgICAgICRudW1FcnJvcnMgPSAkZmlsZS0+Z2V0RXJyb3JDb3VudCgpOwogICAgICAgICR0aGlzLT5hc3NlcnRFcXVhbHMoMSwgJG51bUVycm9ycyk7CiAgICAgICAgJHRoaXMtPmFzc2VydENvdW50KDEsICRlcnJvcnMpOwoKICAgICAgICAvLyBQcm9jZXNzIHdpdGggQCBzdXBwcmVzc2lvbi4KICAgICAgICAkY29udGVudCA9ICc8P3BocCAnLlBIUF9FT0wuJy8vIEBwaHBjczpkaXNhYmxlJy5QSFBfRU9MLickdmFyID0gRkFMU0U7Jy5QSFBfRU9MLicvLyBAcGhwY3M6ZW5hYmxlJy5QSFBfRU9MLickdmFyID0gVFJVRTsnOwogICAgICAgICRmaWxlICAgID0gbmV3IER1bW15RmlsZSgkY29udGVudCwgJHJ1bGVzZXQsICRjb25maWcpOwogICAgICAgICRmaWxlLT5wcm9jZXNzKCk7CgogICAgICAgICRlcnJvcnMgICAgPSAkZmlsZS0+Z2V0RXJyb3JzKCk7CiAgICAgICAgJG51bUVycm9ycyA9ICRmaWxlLT5nZXRFcnJvckNvdW50KCk7CiAgICAgICAgJHRoaXMtPmFzc2VydEVxdWFscygxLCAkbnVtRXJyb3JzKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0Q291bnQoMSwgJGVycm9ycyk7CgogICAgICAgIC8vIFByb2Nlc3Mgd2l0aCBzdXBwcmVzc2lvbiAoZGVwcmVjYXRlZCBzeW50YXgpLgogICAgICAgICRjb250ZW50ID0gJzw/cGhwICcuUEhQX0VPTC4nLy8gQGNvZGluZ1N0YW5kYXJkc0lnbm9yZVN0YXJ0Jy5QSFBfRU9MLickdmFyID0gRkFMU0U7Jy5QSFBfRU9MLicvLyBAY29kaW5nU3RhbmRhcmRzSWdub3JlRW5kJy5QSFBfRU9MLickdmFyID0gVFJVRTsnOwogICAgICAgICRmaWxlICAgID0gbmV3IER1bW15RmlsZSgkY29udGVudCwgJHJ1bGVzZXQsICRjb25maWcpOwogICAgICAgICRmaWxlLT5wcm9jZXNzKCk7CgogICAgICAgICRlcnJvcnMgICAgPSAkZmlsZS0+Z2V0RXJyb3JzKCk7CiAgICAgICAgJG51bUVycm9ycyA9ICRmaWxlLT5nZXRFcnJvckNvdW50KCk7CiAgICAgICAgJHRoaXMtPmFzc2VydEVxdWFscygxLCAkbnVtRXJyb3JzKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0Q291bnQoMSwgJGVycm9ycyk7CgogICAgICAgIC8vIFByb2Nlc3Mgd2l0aCBhIFBIUERvYyBibG9jayBzdXBwcmVzc2lvbi4KICAgICAgICAkY29udGVudCA9ICc8P3BocCAnLlBIUF9FT0wuJy8qKiBwaHBjczpkaXNhYmxlICovJy5QSFBfRU9MLickdmFyID0gRkFMU0U7Jy5QSFBfRU9MLicvKiogcGhwY3M6ZW5hYmxlICovJy5QSFBfRU9MLickdmFyID0gVFJVRTsnOwogICAgICAgICRmaWxlICAgID0gbmV3IER1bW15RmlsZSgkY29udGVudCwgJHJ1bGVzZXQsICRjb25maWcpOwogICAgICAgICRmaWxlLT5wcm9jZXNzKCk7CgogICAgICAgICRlcnJvcnMgICAgPSAkZmlsZS0+Z2V0RXJyb3JzKCk7CiAgICAgICAgJG51bUVycm9ycyA9ICRmaWxlLT5nZXRFcnJvckNvdW50KCk7CiAgICAgICAgJHRoaXMtPmFzc2VydEVxdWFscygxLCAkbnVtRXJyb3JzKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0Q291bnQoMSwgJGVycm9ycyk7CgogICAgICAgIC8vIFByb2Nlc3Mgd2l0aCBhIFBIUERvYyBibG9jayBzdXBwcmVzc2lvbiAoZGVwcmVjYXRlZCBzeW50YXgpLgogICAgICAgICRjb250ZW50ID0gJzw/cGhwICcuUEhQX0VPTC4nLyoqIEBjb2RpbmdTdGFuZGFyZHNJZ25vcmVTdGFydCAqLycuUEhQX0VPTC4nJHZhciA9IEZBTFNFOycuUEhQX0VPTC4nLyoqIEBjb2RpbmdTdGFuZGFyZHNJZ25vcmVFbmQgKi8nLlBIUF9FT0wuJyR2YXIgPSBUUlVFOyc7CiAgICAgICAgJGZpbGUgICAgPSBuZXcgRHVtbXlGaWxlKCRjb250ZW50LCAkcnVsZXNldCwgJGNvbmZpZyk7CiAgICAgICAgJGZpbGUtPnByb2Nlc3MoKTsKCiAgICAgICAgJGVycm9ycyAgICA9ICRmaWxlLT5nZXRFcnJvcnMoKTsKICAgICAgICAkbnVtRXJyb3JzID0gJGZpbGUtPmdldEVycm9yQ291bnQoKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0RXF1YWxzKDEsICRudW1FcnJvcnMpOwogICAgICAgICR0aGlzLT5hc3NlcnRDb3VudCgxLCAkZXJyb3JzKTsKCiAgICB9Ly9lbmQgdGVzdFN1cHByZXNzU29tZUVycm9ycygpCgoKICAgIC8qKgogICAgICogVGVzdCBzdXBwcmVzc2luZyBhIHNpbmdsZSB3YXJuaW5nLgogICAgICoKICAgICAqIEByZXR1cm4gdm9pZAogICAgICovCiAgICBwdWJsaWMgZnVuY3Rpb24gdGVzdFN1cHByZXNzV2FybmluZygpCiAgICB7CiAgICAgICAgJGNvbmZpZyAgICAgICAgICAgID0gbmV3IENvbmZpZygpOwogICAgICAgICRjb25maWctPnN0YW5kYXJkcyA9IFsnR2VuZXJpYyddOwogICAgICAgICRjb25maWctPnNuaWZmcyAgICA9IFsnR2VuZXJpYy5Db21tZW50aW5nLlRvZG8nXTsKCiAgICAgICAgJHJ1bGVzZXQgPSBuZXcgUnVsZXNldCgkY29uZmlnKTsKCiAgICAgICAgLy8gUHJvY2VzcyB3aXRob3V0IHN1cHByZXNzaW9uLgogICAgICAgICRjb250ZW50ID0gJzw/cGhwICcuUEhQX0VPTC4nLy9UT0RPOiB3cml0ZSBzb21lIGNvZGUnOwogICAgICAgICRmaWxlICAgID0gbmV3IER1bW15RmlsZSgkY29udGVudCwgJHJ1bGVzZXQsICRjb25maWcpOwogICAgICAgICRmaWxlLT5wcm9jZXNzKCk7CgogICAgICAgICR3YXJuaW5ncyAgICA9ICRmaWxlLT5nZXRXYXJuaW5ncygpOwogICAgICAgICRudW1XYXJuaW5ncyA9ICRmaWxlLT5nZXRXYXJuaW5nQ291bnQoKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0RXF1YWxzKDEsICRudW1XYXJuaW5ncyk7CiAgICAgICAgJHRoaXMtPmFzc2VydENvdW50KDEsICR3YXJuaW5ncyk7CgogICAgICAgIC8vIFByb2Nlc3Mgd2l0aCBzdXBwcmVzc2lvbi4KICAgICAgICAkY29udGVudCA9ICc8P3BocCAnLlBIUF9FT0wuJy8vIHBocGNzOmRpc2FibGUnLlBIUF9FT0wuJy8vVE9ETzogd3JpdGUgc29tZSBjb2RlJy5QSFBfRU9MLicvLyBwaHBjczplbmFibGUnOwogICAgICAgICRmaWxlICAgID0gbmV3IER1bW15RmlsZSgkY29udGVudCwgJHJ1bGVzZXQsICRjb25maWcpOwogICAgICAgICRmaWxlLT5wcm9jZXNzKCk7CgogICAgICAgICR3YXJuaW5ncyAgICA9ICRmaWxlLT5nZXRXYXJuaW5ncygpOwogICAgICAgICRudW1XYXJuaW5ncyA9ICRmaWxlLT5nZXRXYXJuaW5nQ291bnQoKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0RXF1YWxzKDAsICRudW1XYXJuaW5ncyk7CiAgICAgICAgJHRoaXMtPmFzc2VydENvdW50KDAsICR3YXJuaW5ncyk7CgogICAgICAgIC8vIFByb2Nlc3Mgd2l0aCBAIHN1cHByZXNzaW9uLgogICAgICAgICRjb250ZW50ID0gJzw/cGhwICcuUEhQX0VPTC4nLy8gQHBocGNzOmRpc2FibGUnLlBIUF9FT0wuJy8vVE9ETzogd3JpdGUgc29tZSBjb2RlJy5QSFBfRU9MLicvLyBAcGhwY3M6ZW5hYmxlJzsKICAgICAgICAkZmlsZSAgICA9IG5ldyBEdW1teUZpbGUoJGNvbnRlbnQsICRydWxlc2V0LCAkY29uZmlnKTsKICAgICAgICAkZmlsZS0+cHJvY2VzcygpOwoKICAgICAgICAkd2FybmluZ3MgICAgPSAkZmlsZS0+Z2V0V2FybmluZ3MoKTsKICAgICAgICAkbnVtV2FybmluZ3MgPSAkZmlsZS0+Z2V0V2FybmluZ0NvdW50KCk7CiAgICAgICAgJHRoaXMtPmFzc2VydEVxdWFscygwLCAkbnVtV2FybmluZ3MpOwogICAgICAgICR0aGlzLT5hc3NlcnRDb3VudCgwLCAkd2FybmluZ3MpOwoKICAgICAgICAvLyBQcm9jZXNzIHdpdGggc3VwcHJlc3Npb24gKGRlcHJlY2F0ZWQgc3ludGF4KS4KICAgICAgICAkY29udGVudCA9ICc8P3BocCAnLlBIUF9FT0wuJy8vIEBjb2RpbmdTdGFuZGFyZHNJZ25vcmVTdGFydCcuUEhQX0VPTC4nLy9UT0RPOiB3cml0ZSBzb21lIGNvZGUnLlBIUF9FT0wuJy8vIEBjb2RpbmdTdGFuZGFyZHNJZ25vcmVFbmQnOwogICAgICAgICRmaWxlICAgID0gbmV3IER1bW15RmlsZSgkY29udGVudCwgJHJ1bGVzZXQsICRjb25maWcpOwogICAgICAgICRmaWxlLT5wcm9jZXNzKCk7CgogICAgICAgICR3YXJuaW5ncyAgICA9ICRmaWxlLT5nZXRXYXJuaW5ncygpOwogICAgICAgICRudW1XYXJuaW5ncyA9ICRmaWxlLT5nZXRXYXJuaW5nQ291bnQoKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0RXF1YWxzKDAsICRudW1XYXJuaW5ncyk7CiAgICAgICAgJHRoaXMtPmFzc2VydENvdW50KDAsICR3YXJuaW5ncyk7CgogICAgICAgIC8vIFByb2Nlc3Mgd2l0aCBhIGRvY2Jsb2NrIHN1cHByZXNzaW9uLgogICAgICAgICRjb250ZW50ID0gJzw/cGhwICcuUEhQX0VPTC4nLyoqIHBocGNzOmRpc2FibGUgKi8nLlBIUF9FT0wuJy8vVE9ETzogd3JpdGUgc29tZSBjb2RlJy5QSFBfRU9MLicvKiogcGhwY3M6ZW5hYmxlICovJzsKICAgICAgICAkZmlsZSAgICA9IG5ldyBEdW1teUZpbGUoJGNvbnRlbnQsICRydWxlc2V0LCAkY29uZmlnKTsKICAgICAgICAkZmlsZS0+cHJvY2VzcygpOwoKICAgICAgICAkd2FybmluZ3MgICAgPSAkZmlsZS0+Z2V0V2FybmluZ3MoKTsKICAgICAgICAkbnVtV2FybmluZ3MgPSAkZmlsZS0+Z2V0V2FybmluZ0NvdW50KCk7CiAgICAgICAgJHRoaXMtPmFzc2VydEVxdWFscygwLCAkbnVtV2FybmluZ3MpOwogICAgICAgICR0aGlzLT5hc3NlcnRDb3VudCgwLCAkd2FybmluZ3MpOwoKICAgICAgICAvLyBQcm9jZXNzIHdpdGggYSBkb2NibG9jayBzdXBwcmVzc2lvbiAoZGVwcmVjYXRlZCBzeW50YXgpLgogICAgICAgICRjb250ZW50ID0gJzw/cGhwICcuUEhQX0VPTC4nLyoqIEBjb2RpbmdTdGFuZGFyZHNJZ25vcmVTdGFydCAqLycuUEhQX0VPTC4nLy9UT0RPOiB3cml0ZSBzb21lIGNvZGUnLlBIUF9FT0wuJy8qKiBAY29kaW5nU3RhbmRhcmRzSWdub3JlRW5kICovJzsKICAgICAgICAkZmlsZSAgICA9IG5ldyBEdW1teUZpbGUoJGNvbnRlbnQsICRydWxlc2V0LCAkY29uZmlnKTsKICAgICAgICAkZmlsZS0+cHJvY2VzcygpOwoKICAgICAgICAkd2FybmluZ3MgICAgPSAkZmlsZS0+Z2V0V2FybmluZ3MoKTsKICAgICAgICAkbnVtV2FybmluZ3MgPSAkZmlsZS0+Z2V0V2FybmluZ0NvdW50KCk7CiAgICAgICAgJHRoaXMtPmFzc2VydEVxdWFscygwLCAkbnVtV2FybmluZ3MpOwogICAgICAgICR0aGlzLT5hc3NlcnRDb3VudCgwLCAkd2FybmluZ3MpOwoKICAgIH0vL2VuZCB0ZXN0U3VwcHJlc3NXYXJuaW5nKCkKCgogICAgLyoqCiAgICAgKiBUZXN0IHN1cHByZXNzaW5nIGEgc2luZ2xlIGVycm9yIHVzaW5nIGEgc2luZ2xlIGxpbmUgaWdub3JlLgogICAgICoKICAgICAqIEByZXR1cm4gdm9pZAogICAgICovCiAgICBwdWJsaWMgZnVuY3Rpb24gdGVzdFN1cHByZXNzTGluZSgpCiAgICB7CiAgICAgICAgJGNvbmZpZyAgICAgICAgICAgID0gbmV3IENvbmZpZygpOwogICAgICAgICRjb25maWctPnN0YW5kYXJkcyA9IFsnR2VuZXJpYyddOwogICAgICAgICRjb25maWctPnNuaWZmcyAgICA9IFsnR2VuZXJpYy5QSFAuTG93ZXJDYXNlQ29uc3RhbnQnXTsKCiAgICAgICAgJHJ1bGVzZXQgPSBuZXcgUnVsZXNldCgkY29uZmlnKTsKCiAgICAgICAgLy8gUHJvY2VzcyB3aXRob3V0IHN1cHByZXNzaW9uLgogICAgICAgICRjb250ZW50ID0gJzw/cGhwICcuUEhQX0VPTC4nJHZhciA9IEZBTFNFOycuUEhQX0VPTC4nJHZhciA9IEZBTFNFOyc7CiAgICAgICAgJGZpbGUgICAgPSBuZXcgRHVtbXlGaWxlKCRjb250ZW50LCAkcnVsZXNldCwgJGNvbmZpZyk7CiAgICAgICAgJGZpbGUtPnByb2Nlc3MoKTsKCiAgICAgICAgJGVycm9ycyAgICA9ICRmaWxlLT5nZXRFcnJvcnMoKTsKICAgICAgICAkbnVtRXJyb3JzID0gJGZpbGUtPmdldEVycm9yQ291bnQoKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0RXF1YWxzKDIsICRudW1FcnJvcnMpOwogICAgICAgICR0aGlzLT5hc3NlcnRDb3VudCgyLCAkZXJyb3JzKTsKCiAgICAgICAgLy8gUHJvY2VzcyB3aXRoIHN1cHByZXNzaW9uIG9uIGxpbmUgYmVmb3JlLgogICAgICAgICRjb250ZW50ID0gJzw/cGhwICcuUEhQX0VPTC4nLy8gcGhwY3M6aWdub3JlJy5QSFBfRU9MLickdmFyID0gRkFMU0U7Jy5QSFBfRU9MLickdmFyID0gRkFMU0U7JzsKICAgICAgICAkZmlsZSAgICA9IG5ldyBEdW1teUZpbGUoJGNvbnRlbnQsICRydWxlc2V0LCAkY29uZmlnKTsKICAgICAgICAkZmlsZS0+cHJvY2VzcygpOwoKICAgICAgICAkZXJyb3JzICAgID0gJGZpbGUtPmdldEVycm9ycygpOwogICAgICAgICRudW1FcnJvcnMgPSAkZmlsZS0+Z2V0RXJyb3JDb3VudCgpOwogICAgICAgICR0aGlzLT5hc3NlcnRFcXVhbHMoMSwgJG51bUVycm9ycyk7CiAgICAgICAgJHRoaXMtPmFzc2VydENvdW50KDEsICRlcnJvcnMpOwoKICAgICAgICAgLy8gUHJvY2VzcyB3aXRoIEAgc3VwcHJlc3Npb24gb24gbGluZSBiZWZvcmUuCiAgICAgICAgJGNvbnRlbnQgPSAnPD9waHAgJy5QSFBfRU9MLicvLyBAcGhwY3M6aWdub3JlJy5QSFBfRU9MLickdmFyID0gRkFMU0U7Jy5QSFBfRU9MLickdmFyID0gRkFMU0U7JzsKICAgICAgICAkZmlsZSAgICA9IG5ldyBEdW1teUZpbGUoJGNvbnRlbnQsICRydWxlc2V0LCAkY29uZmlnKTsKICAgICAgICAkZmlsZS0+cHJvY2VzcygpOwoKICAgICAgICAkZXJyb3JzICAgID0gJGZpbGUtPmdldEVycm9ycygpOwogICAgICAgICRudW1FcnJvcnMgPSAkZmlsZS0+Z2V0RXJyb3JDb3VudCgpOwogICAgICAgICR0aGlzLT5hc3NlcnRFcXVhbHMoMSwgJG51bUVycm9ycyk7CiAgICAgICAgJHRoaXMtPmFzc2VydENvdW50KDEsICRlcnJvcnMpOwoKICAgICAgICAvLyBQcm9jZXNzIHdpdGggc3VwcHJlc3Npb24gb24gbGluZSBiZWZvcmUuCiAgICAgICAgJGNvbnRlbnQgPSAnPD9waHAgJy5QSFBfRU9MLicvKiBwaHBjczppZ25vcmUgKi8nLlBIUF9FT0wuJyR2YXIgPSBGQUxTRTsnLlBIUF9FT0wuJyR2YXIgPSBGQUxTRTsnOwogICAgICAgICRmaWxlICAgID0gbmV3IER1bW15RmlsZSgkY29udGVudCwgJHJ1bGVzZXQsICRjb25maWcpOwogICAgICAgICRmaWxlLT5wcm9jZXNzKCk7CgogICAgICAgICRlcnJvcnMgICAgPSAkZmlsZS0+Z2V0RXJyb3JzKCk7CiAgICAgICAgJG51bUVycm9ycyA9ICRmaWxlLT5nZXRFcnJvckNvdW50KCk7CiAgICAgICAgJHRoaXMtPmFzc2VydEVxdWFscygxLCAkbnVtRXJyb3JzKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0Q291bnQoMSwgJGVycm9ycyk7CgogICAgICAgICAvLyBQcm9jZXNzIHdpdGggQCBzdXBwcmVzc2lvbiBvbiBsaW5lIGJlZm9yZS4KICAgICAgICAkY29udGVudCA9ICc8P3BocCAnLlBIUF9FT0wuJy8qIEBwaHBjczppZ25vcmUgKi8nLlBIUF9FT0wuJyR2YXIgPSBGQUxTRTsnLlBIUF9FT0wuJyR2YXIgPSBGQUxTRTsnOwogICAgICAgICRmaWxlICAgID0gbmV3IER1bW15RmlsZSgkY29udGVudCwgJHJ1bGVzZXQsICRjb25maWcpOwogICAgICAgICRmaWxlLT5wcm9jZXNzKCk7CgogICAgICAgICRlcnJvcnMgICAgPSAkZmlsZS0+Z2V0RXJyb3JzKCk7CiAgICAgICAgJG51bUVycm9ycyA9ICRmaWxlLT5nZXRFcnJvckNvdW50KCk7CiAgICAgICAgJHRoaXMtPmFzc2VydEVxdWFscygxLCAkbnVtRXJyb3JzKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0Q291bnQoMSwgJGVycm9ycyk7CgogICAgICAgIC8vIFByb2Nlc3Mgd2l0aCBzdXBwcmVzc2lvbiBvbiBsaW5lIGJlZm9yZSAoZGVwcmVjYXRlZCBzeW50YXgpLgogICAgICAgICRjb250ZW50ID0gJzw/cGhwICcuUEhQX0VPTC4nLy8gQGNvZGluZ1N0YW5kYXJkc0lnbm9yZUxpbmUnLlBIUF9FT0wuJyR2YXIgPSBGQUxTRTsnLlBIUF9FT0wuJyR2YXIgPSBGQUxTRTsnOwogICAgICAgICRmaWxlICAgID0gbmV3IER1bW15RmlsZSgkY29udGVudCwgJHJ1bGVzZXQsICRjb25maWcpOwogICAgICAgICRmaWxlLT5wcm9jZXNzKCk7CgogICAgICAgICRlcnJvcnMgICAgPSAkZmlsZS0+Z2V0RXJyb3JzKCk7CiAgICAgICAgJG51bUVycm9ycyA9ICRmaWxlLT5nZXRFcnJvckNvdW50KCk7CiAgICAgICAgJHRoaXMtPmFzc2VydEVxdWFscygxLCAkbnVtRXJyb3JzKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0Q291bnQoMSwgJGVycm9ycyk7CgogICAgICAgIC8vIFByb2Nlc3Mgd2l0aCBzdXBwcmVzc2lvbiBvbiBzYW1lIGxpbmUuCiAgICAgICAgJGNvbnRlbnQgPSAnPD9waHAgJy5QSFBfRU9MLickdmFyID0gRkFMU0U7IC8vIHBocGNzOmlnbm9yZScuUEhQX0VPTC4nJHZhciA9IEZBTFNFOyc7CiAgICAgICAgJGZpbGUgICAgPSBuZXcgRHVtbXlGaWxlKCRjb250ZW50LCAkcnVsZXNldCwgJGNvbmZpZyk7CiAgICAgICAgJGZpbGUtPnByb2Nlc3MoKTsKCiAgICAgICAgJGVycm9ycyAgICA9ICRmaWxlLT5nZXRFcnJvcnMoKTsKICAgICAgICAkbnVtRXJyb3JzID0gJGZpbGUtPmdldEVycm9yQ291bnQoKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0RXF1YWxzKDEsICRudW1FcnJvcnMpOwogICAgICAgICR0aGlzLT5hc3NlcnRDb3VudCgxLCAkZXJyb3JzKTsKCiAgICAgICAgLy8gUHJvY2VzcyB3aXRoIEAgc3VwcHJlc3Npb24gb24gc2FtZSBsaW5lLgogICAgICAgICRjb250ZW50ID0gJzw/cGhwICcuUEhQX0VPTC4nJHZhciA9IEZBTFNFOyAvLyBAcGhwY3M6aWdub3JlJy5QSFBfRU9MLickdmFyID0gRkFMU0U7JzsKICAgICAgICAkZmlsZSAgICA9IG5ldyBEdW1teUZpbGUoJGNvbnRlbnQsICRydWxlc2V0LCAkY29uZmlnKTsKICAgICAgICAkZmlsZS0+cHJvY2VzcygpOwoKICAgICAgICAkZXJyb3JzICAgID0gJGZpbGUtPmdldEVycm9ycygpOwogICAgICAgICRudW1FcnJvcnMgPSAkZmlsZS0+Z2V0RXJyb3JDb3VudCgpOwogICAgICAgICR0aGlzLT5hc3NlcnRFcXVhbHMoMSwgJG51bUVycm9ycyk7CiAgICAgICAgJHRoaXMtPmFzc2VydENvdW50KDEsICRlcnJvcnMpOwoKICAgICAgICAvLyBQcm9jZXNzIHdpdGggc3VwcHJlc3Npb24gb24gc2FtZSBsaW5lIChkZXByZWNhdGVkIHN5bnRheCkuCiAgICAgICAgJGNvbnRlbnQgPSAnPD9waHAgJy5QSFBfRU9MLickdmFyID0gRkFMU0U7IC8vIEBjb2RpbmdTdGFuZGFyZHNJZ25vcmVMaW5lJy5QSFBfRU9MLickdmFyID0gRkFMU0U7JzsKICAgICAgICAkZmlsZSAgICA9IG5ldyBEdW1teUZpbGUoJGNvbnRlbnQsICRydWxlc2V0LCAkY29uZmlnKTsKICAgICAgICAkZmlsZS0+cHJvY2VzcygpOwoKICAgICAgICAkZXJyb3JzICAgID0gJGZpbGUtPmdldEVycm9ycygpOwogICAgICAgICRudW1FcnJvcnMgPSAkZmlsZS0+Z2V0RXJyb3JDb3VudCgpOwogICAgICAgICR0aGlzLT5hc3NlcnRFcXVhbHMoMSwgJG51bUVycm9ycyk7CiAgICAgICAgJHRoaXMtPmFzc2VydENvdW50KDEsICRlcnJvcnMpOwoKICAgIH0vL2VuZCB0ZXN0U3VwcHJlc3NMaW5lKCkKCgogICAgLyoqCiAgICAgKiBUZXN0IHRoYXQgdXNpbmcgYSBzaW5nbGUgbGluZSBpZ25vcmUgZG9lcyBub3QgaW50ZXJmZXJlIHdpdGggb3RoZXIgc3VwcHJlc3Npb25zLgogICAgICoKICAgICAqIEByZXR1cm4gdm9pZAogICAgICovCiAgICBwdWJsaWMgZnVuY3Rpb24gdGVzdE5lc3RlZFN1cHByZXNzTGluZSgpCiAgICB7CiAgICAgICAgJGNvbmZpZyAgICAgICAgICAgID0gbmV3IENvbmZpZygpOwogICAgICAgICRjb25maWctPnN0YW5kYXJkcyA9IFsnR2VuZXJpYyddOwogICAgICAgICRjb25maWctPnNuaWZmcyAgICA9IFsnR2VuZXJpYy5QSFAuTG93ZXJDYXNlQ29uc3RhbnQnXTsKCiAgICAgICAgJHJ1bGVzZXQgPSBuZXcgUnVsZXNldCgkY29uZmlnKTsKCiAgICAgICAgLy8gUHJvY2VzcyB3aXRoIGRpc2FibGUvZW5hYmxlIHN1cHByZXNzaW9uIGFuZCBubyBzaW5nbGUgbGluZSBzdXBwcmVzc2lvbi4KICAgICAgICAkY29udGVudCA9ICc8P3BocCAnLlBIUF9FT0wuJy8vIHBocGNzOmRpc2FibGUnLlBIUF9FT0wuJyR2YXIgPSBGQUxTRTsnLlBIUF9FT0wuJyR2YXIgPSBUUlVFOycuUEhQX0VPTC4nLy8gcGhwY3M6ZW5hYmxlJzsKICAgICAgICAkZmlsZSAgICA9IG5ldyBEdW1teUZpbGUoJGNvbnRlbnQsICRydWxlc2V0LCAkY29uZmlnKTsKICAgICAgICAkZmlsZS0+cHJvY2VzcygpOwoKICAgICAgICAkZXJyb3JzICAgID0gJGZpbGUtPmdldEVycm9ycygpOwogICAgICAgICRudW1FcnJvcnMgPSAkZmlsZS0+Z2V0RXJyb3JDb3VudCgpOwogICAgICAgICR0aGlzLT5hc3NlcnRFcXVhbHMoMCwgJG51bUVycm9ycyk7CiAgICAgICAgJHRoaXMtPmFzc2VydENvdW50KDAsICRlcnJvcnMpOwoKICAgICAgICAvLyBQcm9jZXNzIHdpdGggZGlzYWJsZS9lbmFibGUgQCBzdXBwcmVzc2lvbiBhbmQgbm8gc2luZ2xlIGxpbmUgc3VwcHJlc3Npb24uCiAgICAgICAgJGNvbnRlbnQgPSAnPD9waHAgJy5QSFBfRU9MLicvLyBAcGhwY3M6ZGlzYWJsZScuUEhQX0VPTC4nJHZhciA9IEZBTFNFOycuUEhQX0VPTC4nJHZhciA9IFRSVUU7Jy5QSFBfRU9MLicvLyBAcGhwY3M6ZW5hYmxlJzsKICAgICAgICAkZmlsZSAgICA9IG5ldyBEdW1teUZpbGUoJGNvbnRlbnQsICRydWxlc2V0LCAkY29uZmlnKTsKICAgICAgICAkZmlsZS0+cHJvY2VzcygpOwoKICAgICAgICAkZXJyb3JzICAgID0gJGZpbGUtPmdldEVycm9ycygpOwogICAgICAgICRudW1FcnJvcnMgPSAkZmlsZS0+Z2V0RXJyb3JDb3VudCgpOwogICAgICAgICR0aGlzLT5hc3NlcnRFcXVhbHMoMCwgJG51bUVycm9ycyk7CiAgICAgICAgJHRoaXMtPmFzc2VydENvdW50KDAsICRlcnJvcnMpOwoKICAgICAgICAvLyBQcm9jZXNzIHdpdGggZGlzYWJsZS9lbmFibGUgc3VwcHJlc3Npb24gYW5kIG5vIHNpbmdsZSBsaW5lIHN1cHByZXNzaW9uIChkZXByZWNhdGVkIHN5bnRheCkuCiAgICAgICAgJGNvbnRlbnQgPSAnPD9waHAgJy5QSFBfRU9MLicvLyBAY29kaW5nU3RhbmRhcmRzSWdub3JlU3RhcnQnLlBIUF9FT0wuJyR2YXIgPSBGQUxTRTsnLlBIUF9FT0wuJyR2YXIgPSBUUlVFOycuUEhQX0VPTC4nLy8gQGNvZGluZ1N0YW5kYXJkc0lnbm9yZUVuZCc7CiAgICAgICAgJGZpbGUgICAgPSBuZXcgRHVtbXlGaWxlKCRjb250ZW50LCAkcnVsZXNldCwgJGNvbmZpZyk7CiAgICAgICAgJGZpbGUtPnByb2Nlc3MoKTsKCiAgICAgICAgJGVycm9ycyAgICA9ICRmaWxlLT5nZXRFcnJvcnMoKTsKICAgICAgICAkbnVtRXJyb3JzID0gJGZpbGUtPmdldEVycm9yQ291bnQoKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0RXF1YWxzKDAsICRudW1FcnJvcnMpOwogICAgICAgICR0aGlzLT5hc3NlcnRDb3VudCgwLCAkZXJyb3JzKTsKCiAgICAgICAgLy8gUHJvY2VzcyB3aXRoIGxpbmUgc3VwcHJlc3Npb24gbmVzdGVkIHdpdGhpbiBkaXNhYmxlL2VuYWJsZSBzdXBwcmVzc2lvbi4KICAgICAgICAkY29udGVudCA9ICc8P3BocCAnLlBIUF9FT0wuJy8vIHBocGNzOmRpc2FibGUnLlBIUF9FT0wuJy8vIHBocGNzOmlnbm9yZScuUEhQX0VPTC4nJHZhciA9IEZBTFNFOycuUEhQX0VPTC4nJHZhciA9IFRSVUU7Jy5QSFBfRU9MLicvLyBwaHBjczplbmFibGUnOwogICAgICAgICRmaWxlICAgID0gbmV3IER1bW15RmlsZSgkY29udGVudCwgJHJ1bGVzZXQsICRjb25maWcpOwogICAgICAgICRmaWxlLT5wcm9jZXNzKCk7CgogICAgICAgICRlcnJvcnMgICAgPSAkZmlsZS0+Z2V0RXJyb3JzKCk7CiAgICAgICAgJG51bUVycm9ycyA9ICRmaWxlLT5nZXRFcnJvckNvdW50KCk7CiAgICAgICAgJHRoaXMtPmFzc2VydEVxdWFscygwLCAkbnVtRXJyb3JzKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0Q291bnQoMCwgJGVycm9ycyk7CgogICAgICAgIC8vIFByb2Nlc3Mgd2l0aCBsaW5lIEAgc3VwcHJlc3Npb24gbmVzdGVkIHdpdGhpbiBkaXNhYmxlL2VuYWJsZSBAIHN1cHByZXNzaW9uLgogICAgICAgICRjb250ZW50ID0gJzw/cGhwICcuUEhQX0VPTC4nLy8gQHBocGNzOmRpc2FibGUnLlBIUF9FT0wuJy8vIEBwaHBjczppZ25vcmUnLlBIUF9FT0wuJyR2YXIgPSBGQUxTRTsnLlBIUF9FT0wuJyR2YXIgPSBUUlVFOycuUEhQX0VPTC4nLy8gQHBocGNzOmVuYWJsZSc7CiAgICAgICAgJGZpbGUgICAgPSBuZXcgRHVtbXlGaWxlKCRjb250ZW50LCAkcnVsZXNldCwgJGNvbmZpZyk7CiAgICAgICAgJGZpbGUtPnByb2Nlc3MoKTsKCiAgICAgICAgJGVycm9ycyAgICA9ICRmaWxlLT5nZXRFcnJvcnMoKTsKICAgICAgICAkbnVtRXJyb3JzID0gJGZpbGUtPmdldEVycm9yQ291bnQoKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0RXF1YWxzKDAsICRudW1FcnJvcnMpOwogICAgICAgICR0aGlzLT5hc3NlcnRDb3VudCgwLCAkZXJyb3JzKTsKCiAgICAgICAgLy8gUHJvY2VzcyB3aXRoIGxpbmUgc3VwcHJlc3Npb24gbmVzdGVkIHdpdGhpbiBkaXNhYmxlL2VuYWJsZSBzdXBwcmVzc2lvbiAoZGVwcmVjYXRlZCBzeW50YXgpLgogICAgICAgICRjb250ZW50ID0gJzw/cGhwICcuUEhQX0VPTC4nLy8gQGNvZGluZ1N0YW5kYXJkc0lnbm9yZVN0YXJ0Jy5QSFBfRU9MLicvLyBAY29kaW5nU3RhbmRhcmRzSWdub3JlTGluZScuUEhQX0VPTC4nJHZhciA9IEZBTFNFOycuUEhQX0VPTC4nJHZhciA9IFRSVUU7Jy5QSFBfRU9MLicvLyBAY29kaW5nU3RhbmRhcmRzSWdub3JlRW5kJzsKICAgICAgICAkZmlsZSAgICA9IG5ldyBEdW1teUZpbGUoJGNvbnRlbnQsICRydWxlc2V0LCAkY29uZmlnKTsKICAgICAgICAkZmlsZS0+cHJvY2VzcygpOwoKICAgICAgICAkZXJyb3JzICAgID0gJGZpbGUtPmdldEVycm9ycygpOwogICAgICAgICRudW1FcnJvcnMgPSAkZmlsZS0+Z2V0RXJyb3JDb3VudCgpOwogICAgICAgICR0aGlzLT5hc3NlcnRFcXVhbHMoMCwgJG51bUVycm9ycyk7CiAgICAgICAgJHRoaXMtPmFzc2VydENvdW50KDAsICRlcnJvcnMpOwoKICAgIH0vL2VuZCB0ZXN0TmVzdGVkU3VwcHJlc3NMaW5lKCkKCgogICAgLyoqCiAgICAgKiBUZXN0IHN1cHByZXNzaW5nIGEgc2NvcGUgb3BlbmVyLgogICAgICoKICAgICAqIEByZXR1cm4gdm9pZAogICAgICovCiAgICBwdWJsaWMgZnVuY3Rpb24gdGVzdFN1cHByZXNzU2NvcGUoKQogICAgewogICAgICAgICRjb25maWcgICAgICAgICAgICA9IG5ldyBDb25maWcoKTsKICAgICAgICAkY29uZmlnLT5zdGFuZGFyZHMgPSBbJ1BFQVInXTsKICAgICAgICAkY29uZmlnLT5zbmlmZnMgICAgPSBbJ1BFQVIuTmFtaW5nQ29udmVudGlvbnMuVmFsaWRWYXJpYWJsZU5hbWUnXTsKCiAgICAgICAgJHJ1bGVzZXQgPSBuZXcgUnVsZXNldCgkY29uZmlnKTsKCiAgICAgICAgLy8gUHJvY2VzcyB3aXRob3V0IHN1cHByZXNzaW9uLgogICAgICAgICRjb250ZW50ID0gJzw/cGhwICcuUEhQX0VPTC4nY2xhc3MgTXlDbGFzcygpIHsnLlBIUF9FT0wuJ2Z1bmN0aW9uIG15RnVuY3Rpb24oKSB7Jy5QSFBfRU9MLickdGhpcy0+Zm9vKCk7Jy5QSFBfRU9MLid9Jy5QSFBfRU9MLid9JzsKICAgICAgICAkZmlsZSAgICA9IG5ldyBEdW1teUZpbGUoJGNvbnRlbnQsICRydWxlc2V0LCAkY29uZmlnKTsKICAgICAgICAkZmlsZS0+cHJvY2VzcygpOwoKICAgICAgICAkZXJyb3JzICAgID0gJGZpbGUtPmdldEVycm9ycygpOwogICAgICAgICRudW1FcnJvcnMgPSAkZmlsZS0+Z2V0RXJyb3JDb3VudCgpOwogICAgICAgICR0aGlzLT5hc3NlcnRFcXVhbHMoMCwgJG51bUVycm9ycyk7CiAgICAgICAgJHRoaXMtPmFzc2VydENvdW50KDAsICRlcnJvcnMpOwoKICAgICAgICAvLyBQcm9jZXNzIHdpdGggc3VwcHJlc3Npb24uCiAgICAgICAgJGNvbnRlbnQgPSAnPD9waHAgJy5QSFBfRU9MLidjbGFzcyBNeUNsYXNzKCkgeycuUEhQX0VPTC4nLy9waHBjczpkaXNhYmxlJy5QSFBfRU9MLidmdW5jdGlvbiBteUZ1bmN0aW9uKCkgeycuUEhQX0VPTC4nLy9waHBjczplbmFibGUnLlBIUF9FT0wuJyR0aGlzLT5mb28oKTsnLlBIUF9FT0wuJ30nLlBIUF9FT0wuJ30nOwogICAgICAgICRmaWxlICAgID0gbmV3IER1bW15RmlsZSgkY29udGVudCwgJHJ1bGVzZXQsICRjb25maWcpOwogICAgICAgICRmaWxlLT5wcm9jZXNzKCk7CgogICAgICAgICRlcnJvcnMgICAgPSAkZmlsZS0+Z2V0RXJyb3JzKCk7CiAgICAgICAgJG51bUVycm9ycyA9ICRmaWxlLT5nZXRFcnJvckNvdW50KCk7CiAgICAgICAgJHRoaXMtPmFzc2VydEVxdWFscygwLCAkbnVtRXJyb3JzKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0Q291bnQoMCwgJGVycm9ycyk7CgogICAgICAgIC8vIFByb2Nlc3Mgd2l0aCBzdXBwcmVzc2lvbi4KICAgICAgICAkY29udGVudCA9ICc8P3BocCAnLlBIUF9FT0wuJ2NsYXNzIE15Q2xhc3MoKSB7Jy5QSFBfRU9MLicvL0BwaHBjczpkaXNhYmxlJy5QSFBfRU9MLidmdW5jdGlvbiBteUZ1bmN0aW9uKCkgeycuUEhQX0VPTC4nLy9AcGhwY3M6ZW5hYmxlJy5QSFBfRU9MLickdGhpcy0+Zm9vKCk7Jy5QSFBfRU9MLid9Jy5QSFBfRU9MLid9JzsKICAgICAgICAkZmlsZSAgICA9IG5ldyBEdW1teUZpbGUoJGNvbnRlbnQsICRydWxlc2V0LCAkY29uZmlnKTsKICAgICAgICAkZmlsZS0+cHJvY2VzcygpOwoKICAgICAgICAkZXJyb3JzICAgID0gJGZpbGUtPmdldEVycm9ycygpOwogICAgICAgICRudW1FcnJvcnMgPSAkZmlsZS0+Z2V0RXJyb3JDb3VudCgpOwogICAgICAgICR0aGlzLT5hc3NlcnRFcXVhbHMoMCwgJG51bUVycm9ycyk7CiAgICAgICAgJHRoaXMtPmFzc2VydENvdW50KDAsICRlcnJvcnMpOwoKICAgICAgICAvLyBQcm9jZXNzIHdpdGggc3VwcHJlc3Npb24gKGRlcHJlY2F0ZWQgc3ludGF4KS4KICAgICAgICAkY29udGVudCA9ICc8P3BocCAnLlBIUF9FT0wuJ2NsYXNzIE15Q2xhc3MoKSB7Jy5QSFBfRU9MLicvL0Bjb2RpbmdTdGFuZGFyZHNJZ25vcmVTdGFydCcuUEhQX0VPTC4nZnVuY3Rpb24gbXlGdW5jdGlvbigpIHsnLlBIUF9FT0wuJy8vQGNvZGluZ1N0YW5kYXJkc0lnbm9yZUVuZCcuUEhQX0VPTC4nJHRoaXMtPmZvbygpOycuUEhQX0VPTC4nfScuUEhQX0VPTC4nfSc7CiAgICAgICAgJGZpbGUgICAgPSBuZXcgRHVtbXlGaWxlKCRjb250ZW50LCAkcnVsZXNldCwgJGNvbmZpZyk7CiAgICAgICAgJGZpbGUtPnByb2Nlc3MoKTsKCiAgICAgICAgJGVycm9ycyAgICA9ICRmaWxlLT5nZXRFcnJvcnMoKTsKICAgICAgICAkbnVtRXJyb3JzID0gJGZpbGUtPmdldEVycm9yQ291bnQoKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0RXF1YWxzKDAsICRudW1FcnJvcnMpOwogICAgICAgICR0aGlzLT5hc3NlcnRDb3VudCgwLCAkZXJyb3JzKTsKCiAgICAgICAgLy8gUHJvY2VzcyB3aXRoIGEgZG9jYmxvY2sgc3VwcHJlc3Npb24uCiAgICAgICAgJGNvbnRlbnQgPSAnPD9waHAgJy5QSFBfRU9MLidjbGFzcyBNeUNsYXNzKCkgeycuUEhQX0VPTC4nLyoqIHBocGNzOmRpc2FibGUgKi8nLlBIUF9FT0wuJ2Z1bmN0aW9uIG15RnVuY3Rpb24oKSB7Jy5QSFBfRU9MLicvKiogcGhwY3M6ZW5hYmxlICovJy5QSFBfRU9MLickdGhpcy0+Zm9vKCk7Jy5QSFBfRU9MLid9Jy5QSFBfRU9MLid9JzsKICAgICAgICAkZmlsZSAgICA9IG5ldyBEdW1teUZpbGUoJGNvbnRlbnQsICRydWxlc2V0LCAkY29uZmlnKTsKCiAgICAgICAgJGVycm9ycyAgICA9ICRmaWxlLT5nZXRFcnJvcnMoKTsKICAgICAgICAkbnVtRXJyb3JzID0gJGZpbGUtPmdldEVycm9yQ291bnQoKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0RXF1YWxzKDAsICRudW1FcnJvcnMpOwogICAgICAgICR0aGlzLT5hc3NlcnRDb3VudCgwLCAkZXJyb3JzKTsKCiAgICAgICAgLy8gUHJvY2VzcyB3aXRoIGEgZG9jYmxvY2sgQCBzdXBwcmVzc2lvbi4KICAgICAgICAkY29udGVudCA9ICc8P3BocCAnLlBIUF9FT0wuJ2NsYXNzIE15Q2xhc3MoKSB7Jy5QSFBfRU9MLicvKiogQHBocGNzOmRpc2FibGUgKi8nLlBIUF9FT0wuJ2Z1bmN0aW9uIG15RnVuY3Rpb24oKSB7Jy5QSFBfRU9MLicvKiogQHBocGNzOmVuYWJsZSAqLycuUEhQX0VPTC4nJHRoaXMtPmZvbygpOycuUEhQX0VPTC4nfScuUEhQX0VPTC4nfSc7CiAgICAgICAgJGZpbGUgICAgPSBuZXcgRHVtbXlGaWxlKCRjb250ZW50LCAkcnVsZXNldCwgJGNvbmZpZyk7CgogICAgICAgICRlcnJvcnMgICAgPSAkZmlsZS0+Z2V0RXJyb3JzKCk7CiAgICAgICAgJG51bUVycm9ycyA9ICRmaWxlLT5nZXRFcnJvckNvdW50KCk7CiAgICAgICAgJHRoaXMtPmFzc2VydEVxdWFscygwLCAkbnVtRXJyb3JzKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0Q291bnQoMCwgJGVycm9ycyk7CgogICAgICAgIC8vIFByb2Nlc3Mgd2l0aCBhIGRvY2Jsb2NrIHN1cHByZXNzaW9uIChkZXByZWNhdGVkIHN5bnRheCkuCiAgICAgICAgJGNvbnRlbnQgPSAnPD9waHAgJy5QSFBfRU9MLidjbGFzcyBNeUNsYXNzKCkgeycuUEhQX0VPTC4nLyoqIEBjb2RpbmdTdGFuZGFyZHNJZ25vcmVTdGFydCAqLycuUEhQX0VPTC4nZnVuY3Rpb24gbXlGdW5jdGlvbigpIHsnLlBIUF9FT0wuJy8qKiBAY29kaW5nU3RhbmRhcmRzSWdub3JlRW5kICovJy5QSFBfRU9MLickdGhpcy0+Zm9vKCk7Jy5QSFBfRU9MLid9Jy5QSFBfRU9MLid9JzsKICAgICAgICAkZmlsZSAgICA9IG5ldyBEdW1teUZpbGUoJGNvbnRlbnQsICRydWxlc2V0LCAkY29uZmlnKTsKCiAgICAgICAgJGVycm9ycyAgICA9ICRmaWxlLT5nZXRFcnJvcnMoKTsKICAgICAgICAkbnVtRXJyb3JzID0gJGZpbGUtPmdldEVycm9yQ291bnQoKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0RXF1YWxzKDAsICRudW1FcnJvcnMpOwogICAgICAgICR0aGlzLT5hc3NlcnRDb3VudCgwLCAkZXJyb3JzKTsKCiAgICB9Ly9lbmQgdGVzdFN1cHByZXNzU2NvcGUoKQoKCiAgICAvKioKICAgICAqIFRlc3Qgc3VwcHJlc3NpbmcgYSB3aG9sZSBmaWxlLgogICAgICoKICAgICAqIEByZXR1cm4gdm9pZAogICAgICovCiAgICBwdWJsaWMgZnVuY3Rpb24gdGVzdFN1cHByZXNzRmlsZSgpCiAgICB7CiAgICAgICAgJGNvbmZpZyAgICAgICAgICAgID0gbmV3IENvbmZpZygpOwogICAgICAgICRjb25maWctPnN0YW5kYXJkcyA9IFsnR2VuZXJpYyddOwogICAgICAgICRjb25maWctPnNuaWZmcyAgICA9IFsnR2VuZXJpYy5Db21tZW50aW5nLlRvZG8nXTsKCiAgICAgICAgJHJ1bGVzZXQgPSBuZXcgUnVsZXNldCgkY29uZmlnKTsKCiAgICAgICAgLy8gUHJvY2VzcyB3aXRob3V0IHN1cHByZXNzaW9uLgogICAgICAgICRjb250ZW50ID0gJzw/cGhwICcuUEhQX0VPTC4nLy9UT0RPOiB3cml0ZSBzb21lIGNvZGUnOwogICAgICAgICRmaWxlICAgID0gbmV3IER1bW15RmlsZSgkY29udGVudCwgJHJ1bGVzZXQsICRjb25maWcpOwogICAgICAgICRmaWxlLT5wcm9jZXNzKCk7CgogICAgICAgICR3YXJuaW5ncyAgICA9ICRmaWxlLT5nZXRXYXJuaW5ncygpOwogICAgICAgICRudW1XYXJuaW5ncyA9ICRmaWxlLT5nZXRXYXJuaW5nQ291bnQoKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0RXF1YWxzKDEsICRudW1XYXJuaW5ncyk7CiAgICAgICAgJHRoaXMtPmFzc2VydENvdW50KDEsICR3YXJuaW5ncyk7CgogICAgICAgIC8vIFByb2Nlc3Mgd2l0aCBzdXBwcmVzc2lvbi4KICAgICAgICAkY29udGVudCA9ICc8P3BocCAnLlBIUF9FT0wuJy8vIHBocGNzOmlnbm9yZUZpbGUnLlBIUF9FT0wuJy8vVE9ETzogd3JpdGUgc29tZSBjb2RlJzsKICAgICAgICAkZmlsZSAgICA9IG5ldyBEdW1teUZpbGUoJGNvbnRlbnQsICRydWxlc2V0LCAkY29uZmlnKTsKICAgICAgICAkZmlsZS0+cHJvY2VzcygpOwoKICAgICAgICAkd2FybmluZ3MgICAgPSAkZmlsZS0+Z2V0V2FybmluZ3MoKTsKICAgICAgICAkbnVtV2FybmluZ3MgPSAkZmlsZS0+Z2V0V2FybmluZ0NvdW50KCk7CiAgICAgICAgJHRoaXMtPmFzc2VydEVxdWFscygwLCAkbnVtV2FybmluZ3MpOwogICAgICAgICR0aGlzLT5hc3NlcnRDb3VudCgwLCAkd2FybmluZ3MpOwoKICAgICAgICAvLyBQcm9jZXNzIHdpdGggQCBzdXBwcmVzc2lvbi4KICAgICAgICAkY29udGVudCA9ICc8P3BocCAnLlBIUF9FT0wuJy8vIEBwaHBjczppZ25vcmVGaWxlJy5QSFBfRU9MLicvL1RPRE86IHdyaXRlIHNvbWUgY29kZSc7CiAgICAgICAgJGZpbGUgICAgPSBuZXcgRHVtbXlGaWxlKCRjb250ZW50LCAkcnVsZXNldCwgJGNvbmZpZyk7CiAgICAgICAgJGZpbGUtPnByb2Nlc3MoKTsKCiAgICAgICAgJHdhcm5pbmdzICAgID0gJGZpbGUtPmdldFdhcm5pbmdzKCk7CiAgICAgICAgJG51bVdhcm5pbmdzID0gJGZpbGUtPmdldFdhcm5pbmdDb3VudCgpOwogICAgICAgICR0aGlzLT5hc3NlcnRFcXVhbHMoMCwgJG51bVdhcm5pbmdzKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0Q291bnQoMCwgJHdhcm5pbmdzKTsKCiAgICAgICAgLy8gUHJvY2VzcyB3aXRoIHN1cHByZXNzaW9uIChkZXByZWNhdGVkIHN5bnRheCkuCiAgICAgICAgJGNvbnRlbnQgPSAnPD9waHAgJy5QSFBfRU9MLicvLyBAY29kaW5nU3RhbmRhcmRzSWdub3JlRmlsZScuUEhQX0VPTC4nLy9UT0RPOiB3cml0ZSBzb21lIGNvZGUnOwogICAgICAgICRmaWxlICAgID0gbmV3IER1bW15RmlsZSgkY29udGVudCwgJHJ1bGVzZXQsICRjb25maWcpOwogICAgICAgICRmaWxlLT5wcm9jZXNzKCk7CgogICAgICAgICR3YXJuaW5ncyAgICA9ICRmaWxlLT5nZXRXYXJuaW5ncygpOwogICAgICAgICRudW1XYXJuaW5ncyA9ICRmaWxlLT5nZXRXYXJuaW5nQ291bnQoKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0RXF1YWxzKDAsICRudW1XYXJuaW5ncyk7CiAgICAgICAgJHRoaXMtPmFzc2VydENvdW50KDAsICR3YXJuaW5ncyk7CgogICAgICAgIC8vIFByb2Nlc3MgbWl4ZWQgY2FzZS4KICAgICAgICAkY29udGVudCA9ICc8P3BocCAnLlBIUF9FT0wuJy8vIFBIUENTOklnbm9yZWZpbGUnLlBIUF9FT0wuJy8vVE9ETzogd3JpdGUgc29tZSBjb2RlJzsKICAgICAgICAkZmlsZSAgICA9IG5ldyBEdW1teUZpbGUoJGNvbnRlbnQsICRydWxlc2V0LCAkY29uZmlnKTsKICAgICAgICAkZmlsZS0+cHJvY2VzcygpOwoKICAgICAgICAkd2FybmluZ3MgICAgPSAkZmlsZS0+Z2V0V2FybmluZ3MoKTsKICAgICAgICAkbnVtV2FybmluZ3MgPSAkZmlsZS0+Z2V0V2FybmluZ0NvdW50KCk7CiAgICAgICAgJHRoaXMtPmFzc2VydEVxdWFscygwLCAkbnVtV2FybmluZ3MpOwogICAgICAgICR0aGlzLT5hc3NlcnRDb3VudCgwLCAkd2FybmluZ3MpOwoKICAgICAgICAvLyBQcm9jZXNzIGxhdGUgY29tbWVudC4KICAgICAgICAkY29udGVudCA9ICc8P3BocCAnLlBIUF9FT0wuJ2NsYXNzIE15Q2xhc3Mge30nLlBIUF9FT0wuJyRmb28gPSBuZXcgTXlDbGFzcygpJy5QSFBfRU9MLicvLyBwaHBjczppZ25vcmVGaWxlJzsKICAgICAgICAkZmlsZSAgICA9IG5ldyBEdW1teUZpbGUoJGNvbnRlbnQsICRydWxlc2V0LCAkY29uZmlnKTsKICAgICAgICAkZmlsZS0+cHJvY2VzcygpOwoKICAgICAgICAkd2FybmluZ3MgICAgPSAkZmlsZS0+Z2V0V2FybmluZ3MoKTsKICAgICAgICAkbnVtV2FybmluZ3MgPSAkZmlsZS0+Z2V0V2FybmluZ0NvdW50KCk7CiAgICAgICAgJHRoaXMtPmFzc2VydEVxdWFscygwLCAkbnVtV2FybmluZ3MpOwogICAgICAgICR0aGlzLT5hc3NlcnRDb3VudCgwLCAkd2FybmluZ3MpOwoKICAgICAgICAvLyBQcm9jZXNzIGxhdGUgY29tbWVudCAoZGVwcmVjYXRlZCBzeW50YXgpLgogICAgICAgICRjb250ZW50ID0gJzw/cGhwICcuUEhQX0VPTC4nY2xhc3MgTXlDbGFzcyB7fScuUEhQX0VPTC4nJGZvbyA9IG5ldyBNeUNsYXNzKCknLlBIUF9FT0wuJy8vIEBjb2RpbmdTdGFuZGFyZHNJZ25vcmVGaWxlJzsKICAgICAgICAkZmlsZSAgICA9IG5ldyBEdW1teUZpbGUoJGNvbnRlbnQsICRydWxlc2V0LCAkY29uZmlnKTsKICAgICAgICAkZmlsZS0+cHJvY2VzcygpOwoKICAgICAgICAkd2FybmluZ3MgICAgPSAkZmlsZS0+Z2V0V2FybmluZ3MoKTsKICAgICAgICAkbnVtV2FybmluZ3MgPSAkZmlsZS0+Z2V0V2FybmluZ0NvdW50KCk7CiAgICAgICAgJHRoaXMtPmFzc2VydEVxdWFscygwLCAkbnVtV2FybmluZ3MpOwogICAgICAgICR0aGlzLT5hc3NlcnRDb3VudCgwLCAkd2FybmluZ3MpOwoKICAgICAgICAvLyBQcm9jZXNzIHdpdGggYSBibG9jayBjb21tZW50IHN1cHByZXNzaW9uLgogICAgICAgICRjb250ZW50ID0gJzw/cGhwICcuUEhQX0VPTC4nLyogcGhwY3M6aWdub3JlRmlsZSAqLycuUEhQX0VPTC4nLy9UT0RPOiB3cml0ZSBzb21lIGNvZGUnOwogICAgICAgICRmaWxlICAgID0gbmV3IER1bW15RmlsZSgkY29udGVudCwgJHJ1bGVzZXQsICRjb25maWcpOwogICAgICAgICRmaWxlLT5wcm9jZXNzKCk7CgogICAgICAgICR3YXJuaW5ncyAgICA9ICRmaWxlLT5nZXRXYXJuaW5ncygpOwogICAgICAgICRudW1XYXJuaW5ncyA9ICRmaWxlLT5nZXRXYXJuaW5nQ291bnQoKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0RXF1YWxzKDAsICRudW1XYXJuaW5ncyk7CiAgICAgICAgJHRoaXMtPmFzc2VydENvdW50KDAsICR3YXJuaW5ncyk7CgogICAgICAgIC8vIFByb2Nlc3Mgd2l0aCBhIG11bHRpLWxpbmUgYmxvY2sgY29tbWVudCBzdXBwcmVzc2lvbi4KICAgICAgICAkY29udGVudCA9ICc8P3BocCAnLlBIUF9FT0wuJy8qJy5QSFBfRU9MLicgcGhwY3M6aWdub3JlRmlsZScuUEhQX0VPTC4nICovJy5QSFBfRU9MLicvL1RPRE86IHdyaXRlIHNvbWUgY29kZSc7CiAgICAgICAgJGZpbGUgICAgPSBuZXcgRHVtbXlGaWxlKCRjb250ZW50LCAkcnVsZXNldCwgJGNvbmZpZyk7CiAgICAgICAgJGZpbGUtPnByb2Nlc3MoKTsKCiAgICAgICAgJHdhcm5pbmdzICAgID0gJGZpbGUtPmdldFdhcm5pbmdzKCk7CiAgICAgICAgJG51bVdhcm5pbmdzID0gJGZpbGUtPmdldFdhcm5pbmdDb3VudCgpOwogICAgICAgICR0aGlzLT5hc3NlcnRFcXVhbHMoMCwgJG51bVdhcm5pbmdzKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0Q291bnQoMCwgJHdhcm5pbmdzKTsKCiAgICAgICAgLy8gUHJvY2VzcyB3aXRoIGEgYmxvY2sgY29tbWVudCBzdXBwcmVzc2lvbiAoZGVwcmVjYXRlZCBzeW50YXgpLgogICAgICAgICRjb250ZW50ID0gJzw/cGhwICcuUEhQX0VPTC4nLyogQGNvZGluZ1N0YW5kYXJkc0lnbm9yZUZpbGUgKi8nLlBIUF9FT0wuJy8vVE9ETzogd3JpdGUgc29tZSBjb2RlJzsKICAgICAgICAkZmlsZSAgICA9IG5ldyBEdW1teUZpbGUoJGNvbnRlbnQsICRydWxlc2V0LCAkY29uZmlnKTsKICAgICAgICAkZmlsZS0+cHJvY2VzcygpOwoKICAgICAgICAkd2FybmluZ3MgICAgPSAkZmlsZS0+Z2V0V2FybmluZ3MoKTsKICAgICAgICAkbnVtV2FybmluZ3MgPSAkZmlsZS0+Z2V0V2FybmluZ0NvdW50KCk7CiAgICAgICAgJHRoaXMtPmFzc2VydEVxdWFscygwLCAkbnVtV2FybmluZ3MpOwogICAgICAgICR0aGlzLT5hc3NlcnRDb3VudCgwLCAkd2FybmluZ3MpOwoKICAgICAgICAvLyBQcm9jZXNzIHdpdGggYSBtdWx0aS1saW5lIGJsb2NrIGNvbW1lbnQgc3VwcHJlc3Npb24gKGRlcHJlY2F0ZWQgc3ludGF4KS4KICAgICAgICAkY29udGVudCA9ICc8P3BocCAnLlBIUF9FT0wuJy8qJy5QSFBfRU9MLicgQGNvZGluZ1N0YW5kYXJkc0lnbm9yZUZpbGUnLlBIUF9FT0wuJyAqLycuUEhQX0VPTC4nLy9UT0RPOiB3cml0ZSBzb21lIGNvZGUnOwogICAgICAgICRmaWxlICAgID0gbmV3IER1bW15RmlsZSgkY29udGVudCwgJHJ1bGVzZXQsICRjb25maWcpOwogICAgICAgICRmaWxlLT5wcm9jZXNzKCk7CgogICAgICAgICR3YXJuaW5ncyAgICA9ICRmaWxlLT5nZXRXYXJuaW5ncygpOwogICAgICAgICRudW1XYXJuaW5ncyA9ICRmaWxlLT5nZXRXYXJuaW5nQ291bnQoKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0RXF1YWxzKDAsICRudW1XYXJuaW5ncyk7CiAgICAgICAgJHRoaXMtPmFzc2VydENvdW50KDAsICR3YXJuaW5ncyk7CgogICAgICAgIC8vIFByb2Nlc3Mgd2l0aCBkb2NibG9jayBzdXBwcmVzc2lvbi4KICAgICAgICAkY29udGVudCA9ICc8P3BocCAnLlBIUF9FT0wuJy8qKiBwaHBjczppZ25vcmVGaWxlICovJy5QSFBfRU9MLicvL1RPRE86IHdyaXRlIHNvbWUgY29kZSc7CiAgICAgICAgJGZpbGUgICAgPSBuZXcgRHVtbXlGaWxlKCRjb250ZW50LCAkcnVsZXNldCwgJGNvbmZpZyk7CiAgICAgICAgJGZpbGUtPnByb2Nlc3MoKTsKCiAgICAgICAgJHdhcm5pbmdzICAgID0gJGZpbGUtPmdldFdhcm5pbmdzKCk7CiAgICAgICAgJG51bVdhcm5pbmdzID0gJGZpbGUtPmdldFdhcm5pbmdDb3VudCgpOwogICAgICAgICR0aGlzLT5hc3NlcnRFcXVhbHMoMCwgJG51bVdhcm5pbmdzKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0Q291bnQoMCwgJHdhcm5pbmdzKTsKCiAgICAgICAgLy8gUHJvY2VzcyB3aXRoIGRvY2Jsb2NrIHN1cHByZXNzaW9uIChkZXByZWNhdGVkIHN5bnRheCkuCiAgICAgICAgJGNvbnRlbnQgPSAnPD9waHAgJy5QSFBfRU9MLicvKiogQGNvZGluZ1N0YW5kYXJkc0lnbm9yZUZpbGUgKi8nLlBIUF9FT0wuJy8vVE9ETzogd3JpdGUgc29tZSBjb2RlJzsKICAgICAgICAkZmlsZSAgICA9IG5ldyBEdW1teUZpbGUoJGNvbnRlbnQsICRydWxlc2V0LCAkY29uZmlnKTsKICAgICAgICAkZmlsZS0+cHJvY2VzcygpOwoKICAgICAgICAkd2FybmluZ3MgICAgPSAkZmlsZS0+Z2V0V2FybmluZ3MoKTsKICAgICAgICAkbnVtV2FybmluZ3MgPSAkZmlsZS0+Z2V0V2FybmluZ0NvdW50KCk7CiAgICAgICAgJHRoaXMtPmFzc2VydEVxdWFscygwLCAkbnVtV2FybmluZ3MpOwogICAgICAgICR0aGlzLT5hc3NlcnRDb3VudCgwLCAkd2FybmluZ3MpOwoKICAgIH0vL2VuZCB0ZXN0U3VwcHJlc3NGaWxlKCkKCgogICAgLyoqCiAgICAgKiBUZXN0IGRpc2FibGluZyBzcGVjaWZpYyBzbmlmZnMuCiAgICAgKgogICAgICogQHJldHVybiB2b2lkCiAgICAgKi8KICAgIHB1YmxpYyBmdW5jdGlvbiB0ZXN0RGlzYWJsZVNlbGVjdGVkKCkKICAgIHsKICAgICAgICAkY29uZmlnICAgICAgICAgICAgPSBuZXcgQ29uZmlnKCk7CiAgICAgICAgJGNvbmZpZy0+c3RhbmRhcmRzID0gWydHZW5lcmljJ107CiAgICAgICAgJGNvbmZpZy0+c25pZmZzICAgID0gWwogICAgICAgICAgICAnR2VuZXJpYy5QSFAuTG93ZXJDYXNlQ29uc3RhbnQnLAogICAgICAgICAgICAnR2VuZXJpYy5Db21tZW50aW5nLlRvZG8nLAogICAgICAgIF07CgogICAgICAgICRydWxlc2V0ID0gbmV3IFJ1bGVzZXQoJGNvbmZpZyk7CgogICAgICAgIC8vIFN1cHByZXNzIGEgc2luZ2xlIHNuaWZmLgogICAgICAgICRjb250ZW50ID0gJzw/cGhwICcuUEhQX0VPTC4nLy8gcGhwY3M6ZGlzYWJsZSBHZW5lcmljLkNvbW1lbnRpbmcuVG9kbycuUEhQX0VPTC4nJHZhciA9IEZBTFNFOycuUEhQX0VPTC4nLy9UT0RPOiB3cml0ZSBzb21lIGNvZGUnOwogICAgICAgICRmaWxlICAgID0gbmV3IER1bW15RmlsZSgkY29udGVudCwgJHJ1bGVzZXQsICRjb25maWcpOwogICAgICAgICRmaWxlLT5wcm9jZXNzKCk7CgogICAgICAgICRlcnJvcnMgICAgICA9ICRmaWxlLT5nZXRFcnJvcnMoKTsKICAgICAgICAkbnVtRXJyb3JzICAgPSAkZmlsZS0+Z2V0RXJyb3JDb3VudCgpOwogICAgICAgICR3YXJuaW5ncyAgICA9ICRmaWxlLT5nZXRXYXJuaW5ncygpOwogICAgICAgICRudW1XYXJuaW5ncyA9ICRmaWxlLT5nZXRXYXJuaW5nQ291bnQoKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0RXF1YWxzKDEsICRudW1FcnJvcnMpOwogICAgICAgICR0aGlzLT5hc3NlcnRDb3VudCgxLCAkZXJyb3JzKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0RXF1YWxzKDAsICRudW1XYXJuaW5ncyk7CiAgICAgICAgJHRoaXMtPmFzc2VydENvdW50KDAsICR3YXJuaW5ncyk7CgogICAgICAgIC8vIFN1cHByZXNzIG11bHRpcGxlIHNuaWZmcy4KICAgICAgICAkY29udGVudCA9ICc8P3BocCAnLlBIUF9FT0wuJy8vIHBocGNzOmRpc2FibGUgR2VuZXJpYy5Db21tZW50aW5nLlRvZG8sR2VuZXJpYy5QSFAuTG93ZXJDYXNlQ29uc3RhbnQnLlBIUF9FT0wuJyR2YXIgPSBGQUxTRTsnLlBIUF9FT0wuJy8vVE9ETzogd3JpdGUgc29tZSBjb2RlJzsKICAgICAgICAkZmlsZSAgICA9IG5ldyBEdW1teUZpbGUoJGNvbnRlbnQsICRydWxlc2V0LCAkY29uZmlnKTsKICAgICAgICAkZmlsZS0+cHJvY2VzcygpOwoKICAgICAgICAkZXJyb3JzICAgICAgPSAkZmlsZS0+Z2V0RXJyb3JzKCk7CiAgICAgICAgJG51bUVycm9ycyAgID0gJGZpbGUtPmdldEVycm9yQ291bnQoKTsKICAgICAgICAkd2FybmluZ3MgICAgPSAkZmlsZS0+Z2V0V2FybmluZ3MoKTsKICAgICAgICAkbnVtV2FybmluZ3MgPSAkZmlsZS0+Z2V0V2FybmluZ0NvdW50KCk7CiAgICAgICAgJHRoaXMtPmFzc2VydEVxdWFscygwLCAkbnVtRXJyb3JzKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0Q291bnQoMCwgJGVycm9ycyk7CiAgICAgICAgJHRoaXMtPmFzc2VydEVxdWFscygwLCAkbnVtV2FybmluZ3MpOwogICAgICAgICR0aGlzLT5hc3NlcnRDb3VudCgwLCAkd2FybmluZ3MpOwoKICAgICAgICAvLyBTdXBwcmVzcyBhZGRpbmcgc25pZmZzLgogICAgICAgICRjb250ZW50ID0gJzw/cGhwICcuUEhQX0VPTC4nLy8gcGhwY3M6ZGlzYWJsZSBHZW5lcmljLkNvbW1lbnRpbmcuVG9kbycuUEhQX0VPTC4nLy8gcGhwY3M6ZGlzYWJsZSBHZW5lcmljLlBIUC5Mb3dlckNhc2VDb25zdGFudCcuUEhQX0VPTC4nJHZhciA9IEZBTFNFOycuUEhQX0VPTC4nLy9UT0RPOiB3cml0ZSBzb21lIGNvZGUnOwogICAgICAgICRmaWxlICAgID0gbmV3IER1bW15RmlsZSgkY29udGVudCwgJHJ1bGVzZXQsICRjb25maWcpOwogICAgICAgICRmaWxlLT5wcm9jZXNzKCk7CgogICAgICAgICRlcnJvcnMgICAgICA9ICRmaWxlLT5nZXRFcnJvcnMoKTsKICAgICAgICAkbnVtRXJyb3JzICAgPSAkZmlsZS0+Z2V0RXJyb3JDb3VudCgpOwogICAgICAgICR3YXJuaW5ncyAgICA9ICRmaWxlLT5nZXRXYXJuaW5ncygpOwogICAgICAgICRudW1XYXJuaW5ncyA9ICRmaWxlLT5nZXRXYXJuaW5nQ291bnQoKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0RXF1YWxzKDAsICRudW1FcnJvcnMpOwogICAgICAgICR0aGlzLT5hc3NlcnRDb3VudCgwLCAkZXJyb3JzKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0RXF1YWxzKDAsICRudW1XYXJuaW5ncyk7CiAgICAgICAgJHRoaXMtPmFzc2VydENvdW50KDAsICR3YXJuaW5ncyk7CgogICAgICAgIC8vIFN1cHByZXNzIGEgY2F0ZWdvcnkgb2Ygc25pZmZzLgogICAgICAgICRjb250ZW50ID0gJzw/cGhwICcuUEhQX0VPTC4nLy8gcGhwY3M6ZGlzYWJsZSBHZW5lcmljLkNvbW1lbnRpbmcnLlBIUF9FT0wuJyR2YXIgPSBGQUxTRTsnLlBIUF9FT0wuJy8vVE9ETzogd3JpdGUgc29tZSBjb2RlJzsKICAgICAgICAkZmlsZSAgICA9IG5ldyBEdW1teUZpbGUoJGNvbnRlbnQsICRydWxlc2V0LCAkY29uZmlnKTsKICAgICAgICAkZmlsZS0+cHJvY2VzcygpOwoKICAgICAgICAkZXJyb3JzICAgICAgPSAkZmlsZS0+Z2V0RXJyb3JzKCk7CiAgICAgICAgJG51bUVycm9ycyAgID0gJGZpbGUtPmdldEVycm9yQ291bnQoKTsKICAgICAgICAkd2FybmluZ3MgICAgPSAkZmlsZS0+Z2V0V2FybmluZ3MoKTsKICAgICAgICAkbnVtV2FybmluZ3MgPSAkZmlsZS0+Z2V0V2FybmluZ0NvdW50KCk7CiAgICAgICAgJHRoaXMtPmFzc2VydEVxdWFscygxLCAkbnVtRXJyb3JzKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0Q291bnQoMSwgJGVycm9ycyk7CiAgICAgICAgJHRoaXMtPmFzc2VydEVxdWFscygwLCAkbnVtV2FybmluZ3MpOwogICAgICAgICR0aGlzLT5hc3NlcnRDb3VudCgwLCAkd2FybmluZ3MpOwoKICAgICAgICAvLyBTdXBwcmVzcyBhIHdob2xlIHN0YW5kYXJkLgogICAgICAgICRjb250ZW50ID0gJzw/cGhwICcuUEhQX0VPTC4nLy8gcGhwY3M6ZGlzYWJsZSBHZW5lcmljJy5QSFBfRU9MLickdmFyID0gRkFMU0U7Jy5QSFBfRU9MLicvL1RPRE86IHdyaXRlIHNvbWUgY29kZSc7CiAgICAgICAgJGZpbGUgICAgPSBuZXcgRHVtbXlGaWxlKCRjb250ZW50LCAkcnVsZXNldCwgJGNvbmZpZyk7CiAgICAgICAgJGZpbGUtPnByb2Nlc3MoKTsKCiAgICAgICAgJGVycm9ycyAgICAgID0gJGZpbGUtPmdldEVycm9ycygpOwogICAgICAgICRudW1FcnJvcnMgICA9ICRmaWxlLT5nZXRFcnJvckNvdW50KCk7CiAgICAgICAgJHdhcm5pbmdzICAgID0gJGZpbGUtPmdldFdhcm5pbmdzKCk7CiAgICAgICAgJG51bVdhcm5pbmdzID0gJGZpbGUtPmdldFdhcm5pbmdDb3VudCgpOwogICAgICAgICR0aGlzLT5hc3NlcnRFcXVhbHMoMCwgJG51bUVycm9ycyk7CiAgICAgICAgJHRoaXMtPmFzc2VydENvdW50KDAsICRlcnJvcnMpOwogICAgICAgICR0aGlzLT5hc3NlcnRFcXVhbHMoMCwgJG51bVdhcm5pbmdzKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0Q291bnQoMCwgJHdhcm5pbmdzKTsKCiAgICAgICAgLy8gU3VwcHJlc3MgdXNpbmcgZG9jYmxvY2tzLgogICAgICAgICRjb250ZW50ID0gJzw/cGhwICcuUEhQX0VPTC4nLyoqCiAgICAgICAgJy5QSFBfRU9MLicgKiBwaHBjczpkaXNhYmxlIEdlbmVyaWMuQ29tbWVudGluZy5Ub2RvJy5QSFBfRU9MLicgKi8gJy5QSFBfRU9MLicvL1RPRE86IHdyaXRlIHNvbWUgY29kZSc7CiAgICAgICAgJGZpbGUgICAgPSBuZXcgRHVtbXlGaWxlKCRjb250ZW50LCAkcnVsZXNldCwgJGNvbmZpZyk7CiAgICAgICAgJGZpbGUtPnByb2Nlc3MoKTsKCiAgICAgICAgJGVycm9ycyAgICAgID0gJGZpbGUtPmdldEVycm9ycygpOwogICAgICAgICRudW1FcnJvcnMgICA9ICRmaWxlLT5nZXRFcnJvckNvdW50KCk7CiAgICAgICAgJHdhcm5pbmdzICAgID0gJGZpbGUtPmdldFdhcm5pbmdzKCk7CiAgICAgICAgJG51bVdhcm5pbmdzID0gJGZpbGUtPmdldFdhcm5pbmdDb3VudCgpOwogICAgICAgICR0aGlzLT5hc3NlcnRFcXVhbHMoMCwgJG51bUVycm9ycyk7CiAgICAgICAgJHRoaXMtPmFzc2VydENvdW50KDAsICRlcnJvcnMpOwogICAgICAgICR0aGlzLT5hc3NlcnRFcXVhbHMoMCwgJG51bVdhcm5pbmdzKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0Q291bnQoMCwgJHdhcm5pbmdzKTsKCiAgICAgICAgJGNvbnRlbnQgPSAnPD9waHAgJy5QSFBfRU9MLicvKioKICAgICAgICAnLlBIUF9FT0wuJyAqIEBwaHBjczpkaXNhYmxlIEdlbmVyaWMuQ29tbWVudGluZy5Ub2RvJy5QSFBfRU9MLicgKi8gJy5QSFBfRU9MLicvL1RPRE86IHdyaXRlIHNvbWUgY29kZSc7CiAgICAgICAgJGZpbGUgICAgPSBuZXcgRHVtbXlGaWxlKCRjb250ZW50LCAkcnVsZXNldCwgJGNvbmZpZyk7CiAgICAgICAgJGZpbGUtPnByb2Nlc3MoKTsKCiAgICAgICAgJGVycm9ycyAgICAgID0gJGZpbGUtPmdldEVycm9ycygpOwogICAgICAgICRudW1FcnJvcnMgICA9ICRmaWxlLT5nZXRFcnJvckNvdW50KCk7CiAgICAgICAgJHdhcm5pbmdzICAgID0gJGZpbGUtPmdldFdhcm5pbmdzKCk7CiAgICAgICAgJG51bVdhcm5pbmdzID0gJGZpbGUtPmdldFdhcm5pbmdDb3VudCgpOwogICAgICAgICR0aGlzLT5hc3NlcnRFcXVhbHMoMCwgJG51bUVycm9ycyk7CiAgICAgICAgJHRoaXMtPmFzc2VydENvdW50KDAsICRlcnJvcnMpOwogICAgICAgICR0aGlzLT5hc3NlcnRFcXVhbHMoMCwgJG51bVdhcm5pbmdzKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0Q291bnQoMCwgJHdhcm5pbmdzKTsKCiAgICAgICAgLy8gU3VwcHJlc3Mgd3JvbmcgY2F0ZWdvcnkgdXNpbmcgZG9jYmxvY2tzLgogICAgICAgICRjb250ZW50ID0gJzw/cGhwICcuUEhQX0VPTC4nLyoqCiAgICAgICAgJy5QSFBfRU9MLicgKiBwaHBjczpkaXNhYmxlIEdlbmVyaWMuRmlsZXMnLlBIUF9FT0wuJyAqLyAnLlBIUF9FT0wuJy8vVE9ETzogd3JpdGUgc29tZSBjb2RlJzsKICAgICAgICAkZmlsZSAgICA9IG5ldyBEdW1teUZpbGUoJGNvbnRlbnQsICRydWxlc2V0LCAkY29uZmlnKTsKICAgICAgICAkZmlsZS0+cHJvY2VzcygpOwoKICAgICAgICAkZXJyb3JzICAgICAgPSAkZmlsZS0+Z2V0RXJyb3JzKCk7CiAgICAgICAgJG51bUVycm9ycyAgID0gJGZpbGUtPmdldEVycm9yQ291bnQoKTsKICAgICAgICAkd2FybmluZ3MgICAgPSAkZmlsZS0+Z2V0V2FybmluZ3MoKTsKICAgICAgICAkbnVtV2FybmluZ3MgPSAkZmlsZS0+Z2V0V2FybmluZ0NvdW50KCk7CiAgICAgICAgJHRoaXMtPmFzc2VydEVxdWFscygwLCAkbnVtRXJyb3JzKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0Q291bnQoMCwgJGVycm9ycyk7CiAgICAgICAgJHRoaXMtPmFzc2VydEVxdWFscygxLCAkbnVtV2FybmluZ3MpOwogICAgICAgICR0aGlzLT5hc3NlcnRDb3VudCgxLCAkd2FybmluZ3MpOwoKICAgICAgICAkY29udGVudCA9ICc8P3BocCAnLlBIUF9FT0wuJy8qKgogICAgICAgICcuUEhQX0VPTC4nICogQHBocGNzOmRpc2FibGUgR2VuZXJpYy5GaWxlcycuUEhQX0VPTC4nICovICcuUEhQX0VPTC4nLy9UT0RPOiB3cml0ZSBzb21lIGNvZGUnOwogICAgICAgICRmaWxlICAgID0gbmV3IER1bW15RmlsZSgkY29udGVudCwgJHJ1bGVzZXQsICRjb25maWcpOwogICAgICAgICRmaWxlLT5wcm9jZXNzKCk7CgogICAgICAgICRlcnJvcnMgICAgICA9ICRmaWxlLT5nZXRFcnJvcnMoKTsKICAgICAgICAkbnVtRXJyb3JzICAgPSAkZmlsZS0+Z2V0RXJyb3JDb3VudCgpOwogICAgICAgICR3YXJuaW5ncyAgICA9ICRmaWxlLT5nZXRXYXJuaW5ncygpOwogICAgICAgICRudW1XYXJuaW5ncyA9ICRmaWxlLT5nZXRXYXJuaW5nQ291bnQoKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0RXF1YWxzKDAsICRudW1FcnJvcnMpOwogICAgICAgICR0aGlzLT5hc3NlcnRDb3VudCgwLCAkZXJyb3JzKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0RXF1YWxzKDEsICRudW1XYXJuaW5ncyk7CiAgICAgICAgJHRoaXMtPmFzc2VydENvdW50KDEsICR3YXJuaW5ncyk7CgogICAgfS8vZW5kIHRlc3REaXNhYmxlU2VsZWN0ZWQoKQoKCiAgICAvKioKICAgICAqIFRlc3QgcmUtZW5hYmxpbmcgc3BlY2lmaWMgc25pZmZzIHRoYXQgaGF2ZSBiZWVuIGRpc2FibGVkLgogICAgICoKICAgICAqIEByZXR1cm4gdm9pZAogICAgICovCiAgICBwdWJsaWMgZnVuY3Rpb24gdGVzdEVuYWJsZVNlbGVjdGVkKCkKICAgIHsKICAgICAgICAkY29uZmlnICAgICAgICAgICAgPSBuZXcgQ29uZmlnKCk7CiAgICAgICAgJGNvbmZpZy0+c3RhbmRhcmRzID0gWydHZW5lcmljJ107CiAgICAgICAgJGNvbmZpZy0+c25pZmZzICAgID0gWwogICAgICAgICAgICAnR2VuZXJpYy5QSFAuTG93ZXJDYXNlQ29uc3RhbnQnLAogICAgICAgICAgICAnR2VuZXJpYy5Db21tZW50aW5nLlRvZG8nLAogICAgICAgIF07CgogICAgICAgICRydWxlc2V0ID0gbmV3IFJ1bGVzZXQoJGNvbmZpZyk7CgogICAgICAgIC8vIFN1cHByZXNzIGEgc2luZ2xlIHNuaWZmIGFuZCByZS1lbmFibGUuCiAgICAgICAgJGNvbnRlbnQgPSAnPD9waHAgJy5QSFBfRU9MLicvLyBwaHBjczpkaXNhYmxlIEdlbmVyaWMuQ29tbWVudGluZy5Ub2RvJy5QSFBfRU9MLickdmFyID0gRkFMU0U7Jy5QSFBfRU9MLicvL1RPRE86IHdyaXRlIHNvbWUgY29kZScuUEhQX0VPTC4nLy8gcGhwY3M6ZW5hYmxlIEdlbmVyaWMuQ29tbWVudGluZy5Ub2RvJy5QSFBfRU9MLicvL1RPRE86IHdyaXRlIHNvbWUgY29kZSc7CiAgICAgICAgJGZpbGUgICAgPSBuZXcgRHVtbXlGaWxlKCRjb250ZW50LCAkcnVsZXNldCwgJGNvbmZpZyk7CiAgICAgICAgJGZpbGUtPnByb2Nlc3MoKTsKCiAgICAgICAgJGVycm9ycyAgICAgID0gJGZpbGUtPmdldEVycm9ycygpOwogICAgICAgICRudW1FcnJvcnMgICA9ICRmaWxlLT5nZXRFcnJvckNvdW50KCk7CiAgICAgICAgJHdhcm5pbmdzICAgID0gJGZpbGUtPmdldFdhcm5pbmdzKCk7CiAgICAgICAgJG51bVdhcm5pbmdzID0gJGZpbGUtPmdldFdhcm5pbmdDb3VudCgpOwogICAgICAgICR0aGlzLT5hc3NlcnRFcXVhbHMoMSwgJG51bUVycm9ycyk7CiAgICAgICAgJHRoaXMtPmFzc2VydENvdW50KDEsICRlcnJvcnMpOwogICAgICAgICR0aGlzLT5hc3NlcnRFcXVhbHMoMSwgJG51bVdhcm5pbmdzKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0Q291bnQoMSwgJHdhcm5pbmdzKTsKCiAgICAgICAgLy8gU3VwcHJlc3MgbXVsdGlwbGUgc25pZmZzIGFuZCByZS1lbmFibGUuCiAgICAgICAgJGNvbnRlbnQgPSAnPD9waHAgJy5QSFBfRU9MLicvLyBwaHBjczpkaXNhYmxlIEdlbmVyaWMuQ29tbWVudGluZy5Ub2RvLEdlbmVyaWMuUEhQLkxvd2VyQ2FzZUNvbnN0YW50Jy5QSFBfRU9MLickdmFyID0gRkFMU0U7Jy5QSFBfRU9MLicvL1RPRE86IHdyaXRlIHNvbWUgY29kZScuUEhQX0VPTC4nLy8gcGhwY3M6ZW5hYmxlIEdlbmVyaWMuQ29tbWVudGluZy5Ub2RvLEdlbmVyaWMuUEhQLkxvd2VyQ2FzZUNvbnN0YW50Jy5QSFBfRU9MLicvL1RPRE86IHdyaXRlIHNvbWUgY29kZScuUEhQX0VPTC4nJHZhciA9IEZBTFNFOyc7CiAgICAgICAgJGZpbGUgICAgPSBuZXcgRHVtbXlGaWxlKCRjb250ZW50LCAkcnVsZXNldCwgJGNvbmZpZyk7CiAgICAgICAgJGZpbGUtPnByb2Nlc3MoKTsKCiAgICAgICAgJGVycm9ycyAgICAgID0gJGZpbGUtPmdldEVycm9ycygpOwogICAgICAgICRudW1FcnJvcnMgICA9ICRmaWxlLT5nZXRFcnJvckNvdW50KCk7CiAgICAgICAgJHdhcm5pbmdzICAgID0gJGZpbGUtPmdldFdhcm5pbmdzKCk7CiAgICAgICAgJG51bVdhcm5pbmdzID0gJGZpbGUtPmdldFdhcm5pbmdDb3VudCgpOwogICAgICAgICR0aGlzLT5hc3NlcnRFcXVhbHMoMSwgJG51bUVycm9ycyk7CiAgICAgICAgJHRoaXMtPmFzc2VydENvdW50KDEsICRlcnJvcnMpOwogICAgICAgICR0aGlzLT5hc3NlcnRFcXVhbHMoMSwgJG51bVdhcm5pbmdzKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0Q291bnQoMSwgJHdhcm5pbmdzKTsKCiAgICAgICAgLy8gU3VwcHJlc3MgbXVsdGlwbGUgc25pZmZzIGFuZCByZS1lbmFibGUgb25lLgogICAgICAgICRjb250ZW50ID0gJzw/cGhwICcuUEhQX0VPTC4nLy8gcGhwY3M6ZGlzYWJsZSBHZW5lcmljLkNvbW1lbnRpbmcuVG9kbyxHZW5lcmljLlBIUC5Mb3dlckNhc2VDb25zdGFudCcuUEhQX0VPTC4nJHZhciA9IEZBTFNFOycuUEhQX0VPTC4nLy9UT0RPOiB3cml0ZSBzb21lIGNvZGUnLlBIUF9FT0wuJy8vIHBocGNzOmVuYWJsZSBHZW5lcmljLkNvbW1lbnRpbmcuVG9kbycuUEhQX0VPTC4nLy9UT0RPOiB3cml0ZSBzb21lIGNvZGUnLlBIUF9FT0wuJyR2YXIgPSBGQUxTRTsnOwogICAgICAgICRmaWxlICAgID0gbmV3IER1bW15RmlsZSgkY29udGVudCwgJHJ1bGVzZXQsICRjb25maWcpOwogICAgICAgICRmaWxlLT5wcm9jZXNzKCk7CgogICAgICAgICRlcnJvcnMgICAgICA9ICRmaWxlLT5nZXRFcnJvcnMoKTsKICAgICAgICAkbnVtRXJyb3JzICAgPSAkZmlsZS0+Z2V0RXJyb3JDb3VudCgpOwogICAgICAgICR3YXJuaW5ncyAgICA9ICRmaWxlLT5nZXRXYXJuaW5ncygpOwogICAgICAgICRudW1XYXJuaW5ncyA9ICRmaWxlLT5nZXRXYXJuaW5nQ291bnQoKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0RXF1YWxzKDAsICRudW1FcnJvcnMpOwogICAgICAgICR0aGlzLT5hc3NlcnRDb3VudCgwLCAkZXJyb3JzKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0RXF1YWxzKDEsICRudW1XYXJuaW5ncyk7CiAgICAgICAgJHRoaXMtPmFzc2VydENvdW50KDEsICR3YXJuaW5ncyk7CgogICAgICAgIC8vIFN1cHByZXNzIGEgY2F0ZWdvcnkgb2Ygc25pZmZzIGFuZCByZS1lbmFibGUuCiAgICAgICAgJGNvbnRlbnQgPSAnPD9waHAgJy5QSFBfRU9MLicvLyBwaHBjczpkaXNhYmxlIEdlbmVyaWMuQ29tbWVudGluZycuUEhQX0VPTC4nJHZhciA9IEZBTFNFOycuUEhQX0VPTC4nLy9UT0RPOiB3cml0ZSBzb21lIGNvZGUnLlBIUF9FT0wuJy8vIHBocGNzOmVuYWJsZSBHZW5lcmljLkNvbW1lbnRpbmcnLlBIUF9FT0wuJy8vVE9ETzogd3JpdGUgc29tZSBjb2RlJzsKICAgICAgICAkZmlsZSAgICA9IG5ldyBEdW1teUZpbGUoJGNvbnRlbnQsICRydWxlc2V0LCAkY29uZmlnKTsKICAgICAgICAkZmlsZS0+cHJvY2VzcygpOwoKICAgICAgICAkZXJyb3JzICAgICAgPSAkZmlsZS0+Z2V0RXJyb3JzKCk7CiAgICAgICAgJG51bUVycm9ycyAgID0gJGZpbGUtPmdldEVycm9yQ291bnQoKTsKICAgICAgICAkd2FybmluZ3MgICAgPSAkZmlsZS0+Z2V0V2FybmluZ3MoKTsKICAgICAgICAkbnVtV2FybmluZ3MgPSAkZmlsZS0+Z2V0V2FybmluZ0NvdW50KCk7CiAgICAgICAgJHRoaXMtPmFzc2VydEVxdWFscygxLCAkbnVtRXJyb3JzKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0Q291bnQoMSwgJGVycm9ycyk7CiAgICAgICAgJHRoaXMtPmFzc2VydEVxdWFscygxLCAkbnVtV2FybmluZ3MpOwogICAgICAgICR0aGlzLT5hc3NlcnRDb3VudCgxLCAkd2FybmluZ3MpOwoKICAgICAgICAvLyBTdXBwcmVzcyBhIHdob2xlIHN0YW5kYXJkIGFuZCByZS1lbmFibGUuCiAgICAgICAgJGNvbnRlbnQgPSAnPD9waHAgJy5QSFBfRU9MLicvLyBwaHBjczpkaXNhYmxlIEdlbmVyaWMnLlBIUF9FT0wuJyR2YXIgPSBGQUxTRTsnLlBIUF9FT0wuJy8vVE9ETzogd3JpdGUgc29tZSBjb2RlJy5QSFBfRU9MLicvLyBwaHBjczplbmFibGUgR2VuZXJpYycuUEhQX0VPTC4nLy9UT0RPOiB3cml0ZSBzb21lIGNvZGUnOwogICAgICAgICRmaWxlICAgID0gbmV3IER1bW15RmlsZSgkY29udGVudCwgJHJ1bGVzZXQsICRjb25maWcpOwogICAgICAgICRmaWxlLT5wcm9jZXNzKCk7CgogICAgICAgICRlcnJvcnMgICAgICA9ICRmaWxlLT5nZXRFcnJvcnMoKTsKICAgICAgICAkbnVtRXJyb3JzICAgPSAkZmlsZS0+Z2V0RXJyb3JDb3VudCgpOwogICAgICAgICR3YXJuaW5ncyAgICA9ICRmaWxlLT5nZXRXYXJuaW5ncygpOwogICAgICAgICRudW1XYXJuaW5ncyA9ICRmaWxlLT5nZXRXYXJuaW5nQ291bnQoKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0RXF1YWxzKDAsICRudW1FcnJvcnMpOwogICAgICAgICR0aGlzLT5hc3NlcnRDb3VudCgwLCAkZXJyb3JzKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0RXF1YWxzKDEsICRudW1XYXJuaW5ncyk7CiAgICAgICAgJHRoaXMtPmFzc2VydENvdW50KDEsICR3YXJuaW5ncyk7CgogICAgICAgIC8vIFN1cHByZXNzIGEgd2hvbGUgc3RhbmRhcmQgYW5kIHJlLWVuYWJsZSBhIGNhdGVnb3J5LgogICAgICAgICRjb250ZW50ID0gJzw/cGhwICcuUEhQX0VPTC4nLy8gcGhwY3M6ZGlzYWJsZSBHZW5lcmljJy5QSFBfRU9MLickdmFyID0gRkFMU0U7Jy5QSFBfRU9MLicvL1RPRE86IHdyaXRlIHNvbWUgY29kZScuUEhQX0VPTC4nLy8gcGhwY3M6ZW5hYmxlIEdlbmVyaWMuQ29tbWVudGluZycuUEhQX0VPTC4nLy9UT0RPOiB3cml0ZSBzb21lIGNvZGUnOwogICAgICAgICRmaWxlICAgID0gbmV3IER1bW15RmlsZSgkY29udGVudCwgJHJ1bGVzZXQsICRjb25maWcpOwogICAgICAgICRmaWxlLT5wcm9jZXNzKCk7CgogICAgICAgICRlcnJvcnMgICAgICA9ICRmaWxlLT5nZXRFcnJvcnMoKTsKICAgICAgICAkbnVtRXJyb3JzICAgPSAkZmlsZS0+Z2V0RXJyb3JDb3VudCgpOwogICAgICAgICR3YXJuaW5ncyAgICA9ICRmaWxlLT5nZXRXYXJuaW5ncygpOwogICAgICAgICRudW1XYXJuaW5ncyA9ICRmaWxlLT5nZXRXYXJuaW5nQ291bnQoKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0RXF1YWxzKDAsICRudW1FcnJvcnMpOwogICAgICAgICR0aGlzLT5hc3NlcnRDb3VudCgwLCAkZXJyb3JzKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0RXF1YWxzKDEsICRudW1XYXJuaW5ncyk7CiAgICAgICAgJHRoaXMtPmFzc2VydENvdW50KDEsICR3YXJuaW5ncyk7CgogICAgICAgIC8vIFN1cHByZXNzIGEgY2F0ZWdvcnkgYW5kIHJlLWVuYWJsZSBhIHdob2xlIHN0YW5kYXJkLgogICAgICAgICRjb250ZW50ID0gJzw/cGhwICcuUEhQX0VPTC4nLy8gcGhwY3M6ZGlzYWJsZSBHZW5lcmljLkNvbW1lbnRpbmcnLlBIUF9FT0wuJyR2YXIgPSBGQUxTRTsnLlBIUF9FT0wuJy8vVE9ETzogd3JpdGUgc29tZSBjb2RlJy5QSFBfRU9MLicvLyBwaHBjczplbmFibGUgR2VuZXJpYycuUEhQX0VPTC4nLy9UT0RPOiB3cml0ZSBzb21lIGNvZGUnOwogICAgICAgICRmaWxlICAgID0gbmV3IER1bW15RmlsZSgkY29udGVudCwgJHJ1bGVzZXQsICRjb25maWcpOwogICAgICAgICRmaWxlLT5wcm9jZXNzKCk7CgogICAgICAgICRlcnJvcnMgICAgICA9ICRmaWxlLT5nZXRFcnJvcnMoKTsKICAgICAgICAkbnVtRXJyb3JzICAgPSAkZmlsZS0+Z2V0RXJyb3JDb3VudCgpOwogICAgICAgICR3YXJuaW5ncyAgICA9ICRmaWxlLT5nZXRXYXJuaW5ncygpOwogICAgICAgICRudW1XYXJuaW5ncyA9ICRmaWxlLT5nZXRXYXJuaW5nQ291bnQoKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0RXF1YWxzKDEsICRudW1FcnJvcnMpOwogICAgICAgICR0aGlzLT5hc3NlcnRDb3VudCgxLCAkZXJyb3JzKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0RXF1YWxzKDEsICRudW1XYXJuaW5ncyk7CiAgICAgICAgJHRoaXMtPmFzc2VydENvdW50KDEsICR3YXJuaW5ncyk7CgogICAgICAgIC8vIFN1cHByZXNzIGEgc25pZmYgYW5kIHJlLWVuYWJsZSBhIGNhdGVnb3J5LgogICAgICAgICRjb250ZW50ID0gJzw/cGhwICcuUEhQX0VPTC4nLy8gcGhwY3M6ZGlzYWJsZSBHZW5lcmljLkNvbW1lbnRpbmcuVG9kbycuUEhQX0VPTC4nJHZhciA9IEZBTFNFOycuUEhQX0VPTC4nLy9UT0RPOiB3cml0ZSBzb21lIGNvZGUnLlBIUF9FT0wuJy8vIHBocGNzOmVuYWJsZSBHZW5lcmljLkNvbW1lbnRpbmcnLlBIUF9FT0wuJy8vVE9ETzogd3JpdGUgc29tZSBjb2RlJzsKICAgICAgICAkZmlsZSAgICA9IG5ldyBEdW1teUZpbGUoJGNvbnRlbnQsICRydWxlc2V0LCAkY29uZmlnKTsKICAgICAgICAkZmlsZS0+cHJvY2VzcygpOwoKICAgICAgICAkZXJyb3JzICAgICAgPSAkZmlsZS0+Z2V0RXJyb3JzKCk7CiAgICAgICAgJG51bUVycm9ycyAgID0gJGZpbGUtPmdldEVycm9yQ291bnQoKTsKICAgICAgICAkd2FybmluZ3MgICAgPSAkZmlsZS0+Z2V0V2FybmluZ3MoKTsKICAgICAgICAkbnVtV2FybmluZ3MgPSAkZmlsZS0+Z2V0V2FybmluZ0NvdW50KCk7CiAgICAgICAgJHRoaXMtPmFzc2VydEVxdWFscygxLCAkbnVtRXJyb3JzKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0Q291bnQoMSwgJGVycm9ycyk7CiAgICAgICAgJHRoaXMtPmFzc2VydEVxdWFscygxLCAkbnVtV2FybmluZ3MpOwogICAgICAgICR0aGlzLT5hc3NlcnRDb3VudCgxLCAkd2FybmluZ3MpOwoKICAgICAgICAvLyBTdXBwcmVzcyBhIHdob2xlIHN0YW5kYXJkIGFuZCByZS1lbmFibGUgYSBzbmlmZi4KICAgICAgICAkY29udGVudCA9ICc8P3BocCAnLlBIUF9FT0wuJy8vIHBocGNzOmRpc2FibGUgR2VuZXJpYycuUEhQX0VPTC4nJHZhciA9IEZBTFNFOycuUEhQX0VPTC4nLy9UT0RPOiB3cml0ZSBzb21lIGNvZGUnLlBIUF9FT0wuJy8vIHBocGNzOmVuYWJsZSBHZW5lcmljLkNvbW1lbnRpbmcuVG9kbycuUEhQX0VPTC4nLy9UT0RPOiB3cml0ZSBzb21lIGNvZGUnOwogICAgICAgICRmaWxlICAgID0gbmV3IER1bW15RmlsZSgkY29udGVudCwgJHJ1bGVzZXQsICRjb25maWcpOwogICAgICAgICRmaWxlLT5wcm9jZXNzKCk7CgogICAgICAgICRlcnJvcnMgICAgICA9ICRmaWxlLT5nZXRFcnJvcnMoKTsKICAgICAgICAkbnVtRXJyb3JzICAgPSAkZmlsZS0+Z2V0RXJyb3JDb3VudCgpOwogICAgICAgICR3YXJuaW5ncyAgICA9ICRmaWxlLT5nZXRXYXJuaW5ncygpOwogICAgICAgICRudW1XYXJuaW5ncyA9ICRmaWxlLT5nZXRXYXJuaW5nQ291bnQoKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0RXF1YWxzKDAsICRudW1FcnJvcnMpOwogICAgICAgICR0aGlzLT5hc3NlcnRDb3VudCgwLCAkZXJyb3JzKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0RXF1YWxzKDEsICRudW1XYXJuaW5ncyk7CiAgICAgICAgJHRoaXMtPmFzc2VydENvdW50KDEsICR3YXJuaW5ncyk7CgogICAgICAgIC8vIFN1cHByZXNzIGEgd2hvbGUgc3RhbmRhcmQgYW5kIHJlLWVuYWJsZSBhbmQgcmUtZGlzYWJsZSBhIHNuaWZmLgogICAgICAgICRjb250ZW50ID0gJzw/cGhwICcuUEhQX0VPTC4nLy8gcGhwY3M6ZGlzYWJsZSBHZW5lcmljJy5QSFBfRU9MLickdmFyID0gRkFMU0U7Jy5QSFBfRU9MLicvL1RPRE86IHdyaXRlIHNvbWUgY29kZScuUEhQX0VPTC4nLy8gcGhwY3M6ZW5hYmxlIEdlbmVyaWMuQ29tbWVudGluZy5Ub2RvJy5QSFBfRU9MLicvL1RPRE86IHdyaXRlIHNvbWUgY29kZScuUEhQX0VPTC4nLy8gcGhwY3M6ZGlzYWJsZSBHZW5lcmljLkNvbW1lbnRpbmcuVG9kbycuUEhQX0VPTC4nLy9UT0RPOiB3cml0ZSBzb21lIGNvZGUnLlBIUF9FT0wuJy8vIHBocGNzOmVuYWJsZScuUEhQX0VPTC4nLy9UT0RPOiB3cml0ZSBzb21lIGNvZGUnOwogICAgICAgICRmaWxlICAgID0gbmV3IER1bW15RmlsZSgkY29udGVudCwgJHJ1bGVzZXQsICRjb25maWcpOwogICAgICAgICRmaWxlLT5wcm9jZXNzKCk7CgogICAgICAgICRlcnJvcnMgICAgICA9ICRmaWxlLT5nZXRFcnJvcnMoKTsKICAgICAgICAkbnVtRXJyb3JzICAgPSAkZmlsZS0+Z2V0RXJyb3JDb3VudCgpOwogICAgICAgICR3YXJuaW5ncyAgICA9ICRmaWxlLT5nZXRXYXJuaW5ncygpOwogICAgICAgICRudW1XYXJuaW5ncyA9ICRmaWxlLT5nZXRXYXJuaW5nQ291bnQoKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0RXF1YWxzKDAsICRudW1FcnJvcnMpOwogICAgICAgICR0aGlzLT5hc3NlcnRDb3VudCgwLCAkZXJyb3JzKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0RXF1YWxzKDIsICRudW1XYXJuaW5ncyk7CiAgICAgICAgJHRoaXMtPmFzc2VydENvdW50KDIsICR3YXJuaW5ncyk7CgogICAgICAgIC8vIFN1cHByZXNzIGEgd2hvbGUgc3RhbmRhcmQgYW5kIHJlLWVuYWJsZSAyIHNwZWNpZmljIHNuaWZmcyBpbmRlcGVuZGVudGx5LgogICAgICAgICRjb250ZW50ID0gJzw/cGhwICcuUEhQX0VPTC4nLy8gcGhwY3M6ZGlzYWJsZSBHZW5lcmljJy5QSFBfRU9MLickdmFyID0gRkFMU0U7Jy5QSFBfRU9MLicvL1RPRE86IHdyaXRlIHNvbWUgY29kZScuUEhQX0VPTC4nLy8gcGhwY3M6ZW5hYmxlIEdlbmVyaWMuQ29tbWVudGluZy5Ub2RvJy5QSFBfRU9MLicvL1RPRE86IHdyaXRlIHNvbWUgY29kZScuUEhQX0VPTC4nJHZhciA9IEZBTFNFOycuUEhQX0VPTC4nLy8gcGhwY3M6ZW5hYmxlIEdlbmVyaWMuUEhQLkxvd2VyQ2FzZUNvbnN0YW50Jy5QSFBfRU9MLicvL1RPRE86IHdyaXRlIHNvbWUgY29kZScuUEhQX0VPTC4nJHZhciA9IEZBTFNFOycuUEhQX0VPTDsKICAgICAgICAkZmlsZSAgICA9IG5ldyBEdW1teUZpbGUoJGNvbnRlbnQsICRydWxlc2V0LCAkY29uZmlnKTsKICAgICAgICAkZmlsZS0+cHJvY2VzcygpOwoKICAgICAgICAkZXJyb3JzICAgICAgPSAkZmlsZS0+Z2V0RXJyb3JzKCk7CiAgICAgICAgJG51bUVycm9ycyAgID0gJGZpbGUtPmdldEVycm9yQ291bnQoKTsKICAgICAgICAkd2FybmluZ3MgICAgPSAkZmlsZS0+Z2V0V2FybmluZ3MoKTsKICAgICAgICAkbnVtV2FybmluZ3MgPSAkZmlsZS0+Z2V0V2FybmluZ0NvdW50KCk7CiAgICAgICAgJHRoaXMtPmFzc2VydEVxdWFscygxLCAkbnVtRXJyb3JzKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0Q291bnQoMSwgJGVycm9ycyk7CiAgICAgICAgJHRoaXMtPmFzc2VydEVxdWFscygyLCAkbnVtV2FybmluZ3MpOwogICAgICAgICR0aGlzLT5hc3NlcnRDb3VudCgyLCAkd2FybmluZ3MpOwoKICAgIH0vL2VuZCB0ZXN0RW5hYmxlU2VsZWN0ZWQoKQoKCiAgICAvKioKICAgICAqIFRlc3QgaWdub3Jpbmcgc3BlY2lmaWMgc25pZmZzLgogICAgICoKICAgICAqIEByZXR1cm4gdm9pZAogICAgICovCiAgICBwdWJsaWMgZnVuY3Rpb24gdGVzdElnbm9yZVNlbGVjdGVkKCkKICAgIHsKICAgICAgICAkY29uZmlnICAgICAgICAgICAgPSBuZXcgQ29uZmlnKCk7CiAgICAgICAgJGNvbmZpZy0+c3RhbmRhcmRzID0gWydHZW5lcmljJ107CiAgICAgICAgJGNvbmZpZy0+c25pZmZzICAgID0gWwogICAgICAgICAgICAnR2VuZXJpYy5QSFAuTG93ZXJDYXNlQ29uc3RhbnQnLAogICAgICAgICAgICAnR2VuZXJpYy5Db21tZW50aW5nLlRvZG8nLAogICAgICAgIF07CgogICAgICAgICRydWxlc2V0ID0gbmV3IFJ1bGVzZXQoJGNvbmZpZyk7CgogICAgICAgIC8vIE5vIHN1cHByZXNzaW9uLgogICAgICAgICRjb250ZW50ID0gJzw/cGhwICcuUEhQX0VPTC4nJHZhciA9IEZBTFNFOyAvL1RPRE86IHdyaXRlIHNvbWUgY29kZScuUEhQX0VPTC4nJHZhciA9IEZBTFNFOyAvL1RPRE86IHdyaXRlIHNvbWUgY29kZSc7CiAgICAgICAgJGZpbGUgICAgPSBuZXcgRHVtbXlGaWxlKCRjb250ZW50LCAkcnVsZXNldCwgJGNvbmZpZyk7CiAgICAgICAgJGZpbGUtPnByb2Nlc3MoKTsKCiAgICAgICAgJGVycm9ycyAgICAgID0gJGZpbGUtPmdldEVycm9ycygpOwogICAgICAgICRudW1FcnJvcnMgICA9ICRmaWxlLT5nZXRFcnJvckNvdW50KCk7CiAgICAgICAgJHdhcm5pbmdzICAgID0gJGZpbGUtPmdldFdhcm5pbmdzKCk7CiAgICAgICAgJG51bVdhcm5pbmdzID0gJGZpbGUtPmdldFdhcm5pbmdDb3VudCgpOwogICAgICAgICR0aGlzLT5hc3NlcnRFcXVhbHMoMiwgJG51bUVycm9ycyk7CiAgICAgICAgJHRoaXMtPmFzc2VydENvdW50KDIsICRlcnJvcnMpOwogICAgICAgICR0aGlzLT5hc3NlcnRFcXVhbHMoMiwgJG51bVdhcm5pbmdzKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0Q291bnQoMiwgJHdhcm5pbmdzKTsKCiAgICAgICAgLy8gU3VwcHJlc3MgYSBzaW5nbGUgc25pZmYuCiAgICAgICAgJGNvbnRlbnQgPSAnPD9waHAgJy5QSFBfRU9MLicvLyBwaHBjczppZ25vcmUgR2VuZXJpYy5Db21tZW50aW5nLlRvZG8nLlBIUF9FT0wuJyR2YXIgPSBGQUxTRTsgLy9UT0RPOiB3cml0ZSBzb21lIGNvZGUnLlBIUF9FT0wuJyR2YXIgPSBGQUxTRTsgLy9UT0RPOiB3cml0ZSBzb21lIGNvZGUnOwogICAgICAgICRmaWxlICAgID0gbmV3IER1bW15RmlsZSgkY29udGVudCwgJHJ1bGVzZXQsICRjb25maWcpOwogICAgICAgICRmaWxlLT5wcm9jZXNzKCk7CgogICAgICAgICRlcnJvcnMgICAgICA9ICRmaWxlLT5nZXRFcnJvcnMoKTsKICAgICAgICAkbnVtRXJyb3JzICAgPSAkZmlsZS0+Z2V0RXJyb3JDb3VudCgpOwogICAgICAgICR3YXJuaW5ncyAgICA9ICRmaWxlLT5nZXRXYXJuaW5ncygpOwogICAgICAgICRudW1XYXJuaW5ncyA9ICRmaWxlLT5nZXRXYXJuaW5nQ291bnQoKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0RXF1YWxzKDIsICRudW1FcnJvcnMpOwogICAgICAgICR0aGlzLT5hc3NlcnRDb3VudCgyLCAkZXJyb3JzKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0RXF1YWxzKDEsICRudW1XYXJuaW5ncyk7CiAgICAgICAgJHRoaXMtPmFzc2VydENvdW50KDEsICR3YXJuaW5ncyk7CgogICAgICAgIC8vIFN1cHByZXNzIG11bHRpcGxlIHNuaWZmcy4KICAgICAgICAkY29udGVudCA9ICc8P3BocCAnLlBIUF9FT0wuJy8vIHBocGNzOmlnbm9yZSBHZW5lcmljLkNvbW1lbnRpbmcuVG9kbyxHZW5lcmljLlBIUC5Mb3dlckNhc2VDb25zdGFudCcuUEhQX0VPTC4nJHZhciA9IEZBTFNFOyAvL1RPRE86IHdyaXRlIHNvbWUgY29kZScuUEhQX0VPTC4nJHZhciA9IEZBTFNFOyAvL1RPRE86IHdyaXRlIHNvbWUgY29kZSc7CiAgICAgICAgJGZpbGUgICAgPSBuZXcgRHVtbXlGaWxlKCRjb250ZW50LCAkcnVsZXNldCwgJGNvbmZpZyk7CiAgICAgICAgJGZpbGUtPnByb2Nlc3MoKTsKCiAgICAgICAgJGVycm9ycyAgICAgID0gJGZpbGUtPmdldEVycm9ycygpOwogICAgICAgICRudW1FcnJvcnMgICA9ICRmaWxlLT5nZXRFcnJvckNvdW50KCk7CiAgICAgICAgJHdhcm5pbmdzICAgID0gJGZpbGUtPmdldFdhcm5pbmdzKCk7CiAgICAgICAgJG51bVdhcm5pbmdzID0gJGZpbGUtPmdldFdhcm5pbmdDb3VudCgpOwogICAgICAgICR0aGlzLT5hc3NlcnRFcXVhbHMoMSwgJG51bUVycm9ycyk7CiAgICAgICAgJHRoaXMtPmFzc2VydENvdW50KDEsICRlcnJvcnMpOwogICAgICAgICR0aGlzLT5hc3NlcnRFcXVhbHMoMSwgJG51bVdhcm5pbmdzKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0Q291bnQoMSwgJHdhcm5pbmdzKTsKCiAgICAgICAgLy8gQWRkIHRvIHN1cHByZXNzaW9uLgogICAgICAgICRjb250ZW50ID0gJzw/cGhwICcuUEhQX0VPTC4nLy8gcGhwY3M6ZGlzYWJsZSBHZW5lcmljLkNvbW1lbnRpbmcuVG9kbycuUEhQX0VPTC4nLy8gcGhwY3M6aWdub3JlIEdlbmVyaWMuUEhQLkxvd2VyQ2FzZUNvbnN0YW50Jy5QSFBfRU9MLickdmFyID0gRkFMU0U7IC8vVE9ETzogd3JpdGUgc29tZSBjb2RlJy5QSFBfRU9MLickdmFyID0gRkFMU0U7IC8vVE9ETzogd3JpdGUgc29tZSBjb2RlJzsKICAgICAgICAkZmlsZSAgICA9IG5ldyBEdW1teUZpbGUoJGNvbnRlbnQsICRydWxlc2V0LCAkY29uZmlnKTsKICAgICAgICAkZmlsZS0+cHJvY2VzcygpOwoKICAgICAgICAkZXJyb3JzICAgICAgPSAkZmlsZS0+Z2V0RXJyb3JzKCk7CiAgICAgICAgJG51bUVycm9ycyAgID0gJGZpbGUtPmdldEVycm9yQ291bnQoKTsKICAgICAgICAkd2FybmluZ3MgICAgPSAkZmlsZS0+Z2V0V2FybmluZ3MoKTsKICAgICAgICAkbnVtV2FybmluZ3MgPSAkZmlsZS0+Z2V0V2FybmluZ0NvdW50KCk7CiAgICAgICAgJHRoaXMtPmFzc2VydEVxdWFscygxLCAkbnVtRXJyb3JzKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0Q291bnQoMSwgJGVycm9ycyk7CiAgICAgICAgJHRoaXMtPmFzc2VydEVxdWFscygwLCAkbnVtV2FybmluZ3MpOwogICAgICAgICR0aGlzLT5hc3NlcnRDb3VudCgwLCAkd2FybmluZ3MpOwoKICAgICAgICAvLyBTdXBwcmVzcyBhIGNhdGVnb3J5IG9mIHNuaWZmcy4KICAgICAgICAkY29udGVudCA9ICc8P3BocCAnLlBIUF9FT0wuJy8vIHBocGNzOmlnbm9yZSBHZW5lcmljLkNvbW1lbnRpbmcnLlBIUF9FT0wuJyR2YXIgPSBGQUxTRTsgLy9UT0RPOiB3cml0ZSBzb21lIGNvZGUnLlBIUF9FT0wuJyR2YXIgPSBGQUxTRTsgLy9UT0RPOiB3cml0ZSBzb21lIGNvZGUnOwogICAgICAgICRmaWxlICAgID0gbmV3IER1bW15RmlsZSgkY29udGVudCwgJHJ1bGVzZXQsICRjb25maWcpOwogICAgICAgICRmaWxlLT5wcm9jZXNzKCk7CgogICAgICAgICRlcnJvcnMgICAgICA9ICRmaWxlLT5nZXRFcnJvcnMoKTsKICAgICAgICAkbnVtRXJyb3JzICAgPSAkZmlsZS0+Z2V0RXJyb3JDb3VudCgpOwogICAgICAgICR3YXJuaW5ncyAgICA9ICRmaWxlLT5nZXRXYXJuaW5ncygpOwogICAgICAgICRudW1XYXJuaW5ncyA9ICRmaWxlLT5nZXRXYXJuaW5nQ291bnQoKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0RXF1YWxzKDIsICRudW1FcnJvcnMpOwogICAgICAgICR0aGlzLT5hc3NlcnRDb3VudCgyLCAkZXJyb3JzKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0RXF1YWxzKDEsICRudW1XYXJuaW5ncyk7CiAgICAgICAgJHRoaXMtPmFzc2VydENvdW50KDEsICR3YXJuaW5ncyk7CgogICAgICAgIC8vIFN1cHByZXNzIGEgd2hvbGUgc3RhbmRhcmQuCiAgICAgICAgJGNvbnRlbnQgPSAnPD9waHAgJy5QSFBfRU9MLicvLyBwaHBjczppZ25vcmUgR2VuZXJpYycuUEhQX0VPTC4nJHZhciA9IEZBTFNFOyAvL1RPRE86IHdyaXRlIHNvbWUgY29kZScuUEhQX0VPTC4nJHZhciA9IEZBTFNFOyAvL1RPRE86IHdyaXRlIHNvbWUgY29kZSc7CiAgICAgICAgJGZpbGUgICAgPSBuZXcgRHVtbXlGaWxlKCRjb250ZW50LCAkcnVsZXNldCwgJGNvbmZpZyk7CiAgICAgICAgJGZpbGUtPnByb2Nlc3MoKTsKCiAgICAgICAgJGVycm9ycyAgICAgID0gJGZpbGUtPmdldEVycm9ycygpOwogICAgICAgICRudW1FcnJvcnMgICA9ICRmaWxlLT5nZXRFcnJvckNvdW50KCk7CiAgICAgICAgJHdhcm5pbmdzICAgID0gJGZpbGUtPmdldFdhcm5pbmdzKCk7CiAgICAgICAgJG51bVdhcm5pbmdzID0gJGZpbGUtPmdldFdhcm5pbmdDb3VudCgpOwogICAgICAgICR0aGlzLT5hc3NlcnRFcXVhbHMoMSwgJG51bUVycm9ycyk7CiAgICAgICAgJHRoaXMtPmFzc2VydENvdW50KDEsICRlcnJvcnMpOwogICAgICAgICR0aGlzLT5hc3NlcnRFcXVhbHMoMSwgJG51bVdhcm5pbmdzKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0Q291bnQoMSwgJHdhcm5pbmdzKTsKCiAgICB9Ly9lbmQgdGVzdElnbm9yZVNlbGVjdGVkKCkKCgogICAgLyoqCiAgICAgKiBUZXN0IGlnbm9yaW5nIHNwZWNpZmljIHNuaWZmcy4KICAgICAqCiAgICAgKiBAcmV0dXJuIHZvaWQKICAgICAqLwogICAgcHVibGljIGZ1bmN0aW9uIHRlc3RDb21tZW50aW5nKCkKICAgIHsKICAgICAgICAkY29uZmlnICAgICAgICAgICAgPSBuZXcgQ29uZmlnKCk7CiAgICAgICAgJGNvbmZpZy0+c3RhbmRhcmRzID0gWydHZW5lcmljJ107CiAgICAgICAgJGNvbmZpZy0+c25pZmZzICAgID0gWwogICAgICAgICAgICAnR2VuZXJpYy5QSFAuTG93ZXJDYXNlQ29uc3RhbnQnLAogICAgICAgICAgICAnR2VuZXJpYy5Db21tZW50aW5nLlRvZG8nLAogICAgICAgIF07CgogICAgICAgICRydWxlc2V0ID0gbmV3IFJ1bGVzZXQoJGNvbmZpZyk7CgogICAgICAgIC8vIFN1cHByZXNzIGEgc2luZ2xlIHNuaWZmLgogICAgICAgICRjb250ZW50ID0gJzw/cGhwICcuUEhQX0VPTC4nLy8gcGhwY3M6aWdub3JlIEdlbmVyaWMuQ29tbWVudGluZy5Ub2RvIC0tIEJlY2F1c2UgcmVhc29ucycuUEhQX0VPTC4nJHZhciA9IEZBTFNFOyAvL1RPRE86IHdyaXRlIHNvbWUgY29kZScuUEhQX0VPTC4nJHZhciA9IEZBTFNFOyAvL1RPRE86IHdyaXRlIHNvbWUgY29kZSc7CiAgICAgICAgJGZpbGUgICAgPSBuZXcgRHVtbXlGaWxlKCRjb250ZW50LCAkcnVsZXNldCwgJGNvbmZpZyk7CiAgICAgICAgJGZpbGUtPnByb2Nlc3MoKTsKCiAgICAgICAgJGVycm9ycyAgICAgID0gJGZpbGUtPmdldEVycm9ycygpOwogICAgICAgICRudW1FcnJvcnMgICA9ICRmaWxlLT5nZXRFcnJvckNvdW50KCk7CiAgICAgICAgJHdhcm5pbmdzICAgID0gJGZpbGUtPmdldFdhcm5pbmdzKCk7CiAgICAgICAgJG51bVdhcm5pbmdzID0gJGZpbGUtPmdldFdhcm5pbmdDb3VudCgpOwogICAgICAgICR0aGlzLT5hc3NlcnRFcXVhbHMoMiwgJG51bUVycm9ycyk7CiAgICAgICAgJHRoaXMtPmFzc2VydENvdW50KDIsICRlcnJvcnMpOwogICAgICAgICR0aGlzLT5hc3NlcnRFcXVhbHMoMSwgJG51bVdhcm5pbmdzKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0Q291bnQoMSwgJHdhcm5pbmdzKTsKCiAgICAgICAgLy8gU3VwcHJlc3MgYSBzaW5nbGUgc25pZmYgYW5kIHJlLWVuYWJsZS4KICAgICAgICAkY29udGVudCA9ICc8P3BocCAnLlBIUF9FT0wuJy8vIHBocGNzOmRpc2FibGUgR2VuZXJpYy5Db21tZW50aW5nLlRvZG8gLS1CZWNhdXNlIHJlYXNvbnMnLlBIUF9FT0wuJyR2YXIgPSBGQUxTRTsnLlBIUF9FT0wuJy8vVE9ETzogd3JpdGUgc29tZSBjb2RlJy5QSFBfRU9MLicvLyBwaHBjczplbmFibGUgR2VuZXJpYy5Db21tZW50aW5nLlRvZG8gICAtLSAgQmVjYXVzZSByZWFzb25zJy5QSFBfRU9MLicvL1RPRE86IHdyaXRlIHNvbWUgY29kZSc7CiAgICAgICAgJGZpbGUgICAgPSBuZXcgRHVtbXlGaWxlKCRjb250ZW50LCAkcnVsZXNldCwgJGNvbmZpZyk7CiAgICAgICAgJGZpbGUtPnByb2Nlc3MoKTsKCiAgICAgICAgJGVycm9ycyAgICAgID0gJGZpbGUtPmdldEVycm9ycygpOwogICAgICAgICRudW1FcnJvcnMgICA9ICRmaWxlLT5nZXRFcnJvckNvdW50KCk7CiAgICAgICAgJHdhcm5pbmdzICAgID0gJGZpbGUtPmdldFdhcm5pbmdzKCk7CiAgICAgICAgJG51bVdhcm5pbmdzID0gJGZpbGUtPmdldFdhcm5pbmdDb3VudCgpOwogICAgICAgICR0aGlzLT5hc3NlcnRFcXVhbHMoMSwgJG51bUVycm9ycyk7CiAgICAgICAgJHRoaXMtPmFzc2VydENvdW50KDEsICRlcnJvcnMpOwogICAgICAgICR0aGlzLT5hc3NlcnRFcXVhbHMoMSwgJG51bVdhcm5pbmdzKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0Q291bnQoMSwgJHdhcm5pbmdzKTsKCiAgICAgICAgLy8gU3VwcHJlc3MgYSBzaW5nbGUgc25pZmYgdXNpbmcgYmxvY2sgY29tbWVudHMuCiAgICAgICAgJGNvbnRlbnQgPSAnPD9waHAgJy5QSFBfRU9MLicvKicuUEhQX0VPTC4nICAgIERpc2FibGUgc29tZSBjaGVja3MnLlBIUF9FT0wuJyAgICBwaHBjczpkaXNhYmxlIEdlbmVyaWMuQ29tbWVudGluZy5Ub2RvJy5QSFBfRU9MLicqLycuUEhQX0VPTC4nJHZhciA9IEZBTFNFOycuUEhQX0VPTC4nLy9UT0RPOiB3cml0ZSBzb21lIGNvZGUnOwogICAgICAgICRmaWxlICAgID0gbmV3IER1bW15RmlsZSgkY29udGVudCwgJHJ1bGVzZXQsICRjb25maWcpOwogICAgICAgICRmaWxlLT5wcm9jZXNzKCk7CgogICAgICAgICRlcnJvcnMgICAgICA9ICRmaWxlLT5nZXRFcnJvcnMoKTsKICAgICAgICAkbnVtRXJyb3JzICAgPSAkZmlsZS0+Z2V0RXJyb3JDb3VudCgpOwogICAgICAgICR3YXJuaW5ncyAgICA9ICRmaWxlLT5nZXRXYXJuaW5ncygpOwogICAgICAgICRudW1XYXJuaW5ncyA9ICRmaWxlLT5nZXRXYXJuaW5nQ291bnQoKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0RXF1YWxzKDEsICRudW1FcnJvcnMpOwogICAgICAgICR0aGlzLT5hc3NlcnRDb3VudCgxLCAkZXJyb3JzKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0RXF1YWxzKDAsICRudW1XYXJuaW5ncyk7CiAgICAgICAgJHRoaXMtPmFzc2VydENvdW50KDAsICR3YXJuaW5ncyk7CgogICAgICAgIC8vIFN1cHByZXNzIGEgc2luZ2xlIHNuaWZmIHdpdGggYSBtdWx0aS1saW5lIGNvbW1lbnQuCiAgICAgICAgJGNvbnRlbnQgPSAnPD9waHAgJy5QSFBfRU9MLicvLyBUdXJuIG9mZiBhIGNoZWNrIGZvciB0aGUgbmV4dCBsaW5lIG9mIGNvZGUuJy5QSFBfRU9MLicvLyBwaHBjczppZ25vcmUgR2VuZXJpYy5Db21tZW50aW5nLlRvZG8nLlBIUF9FT0wuJyR2YXIgPSBGQUxTRTsgLy9UT0RPOiB3cml0ZSBzb21lIGNvZGUnLlBIUF9FT0wuJyR2YXIgPSBGQUxTRTsgLy9UT0RPOiB3cml0ZSBzb21lIGNvZGUnOwogICAgICAgICRmaWxlICAgID0gbmV3IER1bW15RmlsZSgkY29udGVudCwgJHJ1bGVzZXQsICRjb25maWcpOwogICAgICAgICRmaWxlLT5wcm9jZXNzKCk7CgogICAgICAgICRlcnJvcnMgICAgICA9ICRmaWxlLT5nZXRFcnJvcnMoKTsKICAgICAgICAkbnVtRXJyb3JzICAgPSAkZmlsZS0+Z2V0RXJyb3JDb3VudCgpOwogICAgICAgICR3YXJuaW5ncyAgICA9ICRmaWxlLT5nZXRXYXJuaW5ncygpOwogICAgICAgICRudW1XYXJuaW5ncyA9ICRmaWxlLT5nZXRXYXJuaW5nQ291bnQoKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0RXF1YWxzKDIsICRudW1FcnJvcnMpOwogICAgICAgICR0aGlzLT5hc3NlcnRDb3VudCgyLCAkZXJyb3JzKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0RXF1YWxzKDEsICRudW1XYXJuaW5ncyk7CiAgICAgICAgJHRoaXMtPmFzc2VydENvdW50KDEsICR3YXJuaW5ncyk7CgogICAgICAgIC8vIElnbm9yZSBhbiBlbmFibGUgYmVmb3JlIGEgZGlzYWJsZS4KICAgICAgICAkY29udGVudCA9ICc8P3BocCAnLlBIUF9FT0wuJy8vIHBocGNzOmVuYWJsZSBHZW5lcmljLlBIUC5Ob1NpbGVuY2VkRXJyb3JzIC0tIEJlY2F1c2UgcmVhc29ucycuUEhQX0VPTC4nJHZhciA9IEBkZWxldGUoICRmaWxlbmFtZSApOycuUEhQX0VPTDsKICAgICAgICAkZmlsZSAgICA9IG5ldyBEdW1teUZpbGUoJGNvbnRlbnQsICRydWxlc2V0LCAkY29uZmlnKTsKICAgICAgICAkZmlsZS0+cHJvY2VzcygpOwoKICAgICAgICAkZXJyb3JzICAgICAgPSAkZmlsZS0+Z2V0RXJyb3JzKCk7CiAgICAgICAgJG51bUVycm9ycyAgID0gJGZpbGUtPmdldEVycm9yQ291bnQoKTsKICAgICAgICAkd2FybmluZ3MgICAgPSAkZmlsZS0+Z2V0V2FybmluZ3MoKTsKICAgICAgICAkbnVtV2FybmluZ3MgPSAkZmlsZS0+Z2V0V2FybmluZ0NvdW50KCk7CiAgICAgICAgJHRoaXMtPmFzc2VydEVxdWFscygwLCAkbnVtRXJyb3JzKTsKICAgICAgICAkdGhpcy0+YXNzZXJ0Q291bnQoMCwgJGVycm9ycyk7CiAgICAgICAgJHRoaXMtPmFzc2VydEVxdWFscygwLCAkbnVtV2FybmluZ3MpOwogICAgICAgICR0aGlzLT5hc3NlcnRDb3VudCgwLCAkd2FybmluZ3MpOwoKICAgIH0vL2VuZCB0ZXN0Q29tbWVudGluZygpCgoKfS8vZW5kIGNsYXNzCiI7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lc3BhY2VzIjthOjE6e3M6Mjc6IlxQSFBfQ29kZVNuaWZmZXJcVGVzdHNcQ29yZSI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjI3OiJcUEhQX0NvZGVTbmlmZmVyXFRlc3RzXENvcmUiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czo0OiJDb3JlIjt9fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW5jbHVkZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZnVuY3Rpb25zIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNvbnN0YW50cyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjE6e3M6NDg6IlxQSFBfQ29kZVNuaWZmZXJcVGVzdHNcQ29yZVxFcnJvclN1cHByZXNzaW9uVGVzdCI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18iOjExOntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo0ODoiXFBIUF9Db2RlU25pZmZlclxUZXN0c1xDb3JlXEVycm9yU3VwcHJlc3Npb25UZXN0IjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MjA6IkVycm9yU3VwcHJlc3Npb25UZXN0Ijt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGRvY0Jsb2NrIjtOO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBhYnN0cmFjdCI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBmaW5hbCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBwYXJlbnQiO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czoyNzoiXFBIUFVuaXRcRnJhbWV3b3JrXFRlc3RDYXNlIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6ODoiVGVzdENhc2UiO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AaW1wbGVtZW50cyI7YTowOnt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGNvbnN0YW50cyI7YTowOnt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAHByb3BlcnRpZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBtZXRob2RzIjthOjExOntzOjY5OiJcUEhQX0NvZGVTbmlmZmVyXFRlc3RzXENvcmVcRXJyb3JTdXBwcmVzc2lvblRlc3Q6OnRlc3RTdXBwcmVzc0Vycm9yKCkiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kIjo5OntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZG9jQmxvY2siO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jayI6Nzp7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBzdW1tYXJ5IjtzOjMyOiJUZXN0IHN1cHByZXNzaW5nIGEgc2luZ2xlIGVycm9yLiI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YToxOntpOjA7Tzo0NjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUmV0dXJuXyI6Mzp7czo3OiIAKgB0eXBlIjtPOjM2OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcVm9pZF8iOjA6e31zOjc6IgAqAG5hbWUiO3M6NjoicmV0dXJuIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fX19czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBjb250ZXh0IjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dCI6Mjp7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZSI7czoyNjoiUEhQX0NvZGVTbmlmZmVyXFRlc3RzXENvcmUiO3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2VBbGlhc2VzIjthOjQ6e3M6NjoiQ29uZmlnIjtzOjIyOiJQSFBfQ29kZVNuaWZmZXJcQ29uZmlnIjtzOjc6IlJ1bGVzZXQiO3M6MjM6IlBIUF9Db2RlU25pZmZlclxSdWxlc2V0IjtzOjk6IkR1bW15RmlsZSI7czozMToiUEhQX0NvZGVTbmlmZmVyXEZpbGVzXER1bW15RmlsZSI7czo4OiJUZXN0Q2FzZSI7czoyNjoiUEhQVW5pdFxGcmFtZXdvcmtcVGVzdENhc2UiO319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MjE7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6Njk6IlxQSFBfQ29kZVNuaWZmZXJcVGVzdHNcQ29yZVxFcnJvclN1cHByZXNzaW9uVGVzdDo6dGVzdFN1cHByZXNzRXJyb3IoKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjE3OiJ0ZXN0U3VwcHJlc3NFcnJvciI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhYnN0cmFjdCI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABzdGF0aWMiO2I6MDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6NjoicHVibGljIjt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFyZ3VtZW50cyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToyNjtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAcmV0dXJuVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fX1zOjc0OiJcUEhQX0NvZGVTbmlmZmVyXFRlc3RzXENvcmVcRXJyb3JTdXBwcmVzc2lvblRlc3Q6OnRlc3RTdXBwcmVzc1NvbWVFcnJvcnMoKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjk6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6MzU6IlRlc3Qgc3VwcHJlc3NpbmcgMSBvdXQgb2YgMiBlcnJvcnMuIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjE6e2k6MDtPOjQ2OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xSZXR1cm5fIjozOntzOjc6IgAqAHR5cGUiO086MzY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xWb2lkXyI6MDp7fXM6NzoiACoAbmFtZSI7czo2OiJyZXR1cm4iO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO3I6NzA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MTc3O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjc0OiJcUEhQX0NvZGVTbmlmZmVyXFRlc3RzXENvcmVcRXJyb3JTdXBwcmVzc2lvblRlc3Q6OnRlc3RTdXBwcmVzc1NvbWVFcnJvcnMoKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjIyOiJ0ZXN0U3VwcHJlc3NTb21lRXJyb3JzIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFic3RyYWN0IjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHN0YXRpYyI7YjowO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo2OiJwdWJsaWMiO31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjE4MjtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAcmV0dXJuVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fX1zOjcxOiJcUEhQX0NvZGVTbmlmZmVyXFRlc3RzXENvcmVcRXJyb3JTdXBwcmVzc2lvblRlc3Q6OnRlc3RTdXBwcmVzc1dhcm5pbmcoKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjk6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6MzQ6IlRlc3Qgc3VwcHJlc3NpbmcgYSBzaW5nbGUgd2FybmluZy4iO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHRhZ3MiO2E6MTp7aTowO086NDY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFJldHVybl8iOjM6e3M6NzoiACoAdHlwZSI7TzozNjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFZvaWRfIjowOnt9czo3OiIAKgBuYW1lIjtzOjY6InJldHVybiI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX19fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAY29udGV4dCI7cjo3MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToyNTM7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NzE6IlxQSFBfQ29kZVNuaWZmZXJcVGVzdHNcQ29yZVxFcnJvclN1cHByZXNzaW9uVGVzdDo6dGVzdFN1cHByZXNzV2FybmluZygpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTk6InRlc3RTdXBwcmVzc1dhcm5pbmciO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjY6InB1YmxpYyI7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MjU4O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9fXM6Njg6IlxQSFBfQ29kZVNuaWZmZXJcVGVzdHNcQ29yZVxFcnJvclN1cHByZXNzaW9uVGVzdDo6dGVzdFN1cHByZXNzTGluZSgpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6OTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czo1OToiVGVzdCBzdXBwcmVzc2luZyBhIHNpbmdsZSBlcnJvciB1c2luZyBhIHNpbmdsZSBsaW5lIGlnbm9yZS4iO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHRhZ3MiO2E6MTp7aTowO086NDY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFJldHVybl8iOjM6e3M6NzoiACoAdHlwZSI7TzozNjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFZvaWRfIjowOnt9czo3OiIAKgBuYW1lIjtzOjY6InJldHVybiI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX19fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAY29udGV4dCI7cjo3MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTozMjk7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6Njg6IlxQSFBfQ29kZVNuaWZmZXJcVGVzdHNcQ29yZVxFcnJvclN1cHByZXNzaW9uVGVzdDo6dGVzdFN1cHByZXNzTGluZSgpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTY6InRlc3RTdXBwcmVzc0xpbmUiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjY6InB1YmxpYyI7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MzM0O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9fXM6NzQ6IlxQSFBfQ29kZVNuaWZmZXJcVGVzdHNcQ29yZVxFcnJvclN1cHByZXNzaW9uVGVzdDo6dGVzdE5lc3RlZFN1cHByZXNzTGluZSgpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6OTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czo4MDoiVGVzdCB0aGF0IHVzaW5nIGEgc2luZ2xlIGxpbmUgaWdub3JlIGRvZXMgbm90IGludGVyZmVyZSB3aXRoIG90aGVyIHN1cHByZXNzaW9ucy4iO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHRhZ3MiO2E6MTp7aTowO086NDY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFJldHVybl8iOjM6e3M6NzoiACoAdHlwZSI7TzozNjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFZvaWRfIjowOnt9czo3OiIAKgBuYW1lIjtzOjY6InJldHVybiI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX19fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAY29udGV4dCI7cjo3MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTo0MzU7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NzQ6IlxQSFBfQ29kZVNuaWZmZXJcVGVzdHNcQ29yZVxFcnJvclN1cHByZXNzaW9uVGVzdDo6dGVzdE5lc3RlZFN1cHByZXNzTGluZSgpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MjI6InRlc3ROZXN0ZWRTdXBwcmVzc0xpbmUiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjY6InB1YmxpYyI7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6NDQwO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9fXM6Njk6IlxQSFBfQ29kZVNuaWZmZXJcVGVzdHNcQ29yZVxFcnJvclN1cHByZXNzaW9uVGVzdDo6dGVzdFN1cHByZXNzU2NvcGUoKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjk6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6MzI6IlRlc3Qgc3VwcHJlc3NpbmcgYSBzY29wZSBvcGVuZXIuIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjE6e2k6MDtPOjQ2OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xSZXR1cm5fIjozOntzOjc6IgAqAHR5cGUiO086MzY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xWb2lkXyI6MDp7fXM6NzoiACoAbmFtZSI7czo2OiJyZXR1cm4iO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO3I6NzA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6NTExO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjY5OiJcUEhQX0NvZGVTbmlmZmVyXFRlc3RzXENvcmVcRXJyb3JTdXBwcmVzc2lvblRlc3Q6OnRlc3RTdXBwcmVzc1Njb3BlKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxNzoidGVzdFN1cHByZXNzU2NvcGUiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjY6InB1YmxpYyI7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6NTE2O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9fXM6Njg6IlxQSFBfQ29kZVNuaWZmZXJcVGVzdHNcQ29yZVxFcnJvclN1cHByZXNzaW9uVGVzdDo6dGVzdFN1cHByZXNzRmlsZSgpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6OTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czozMDoiVGVzdCBzdXBwcmVzc2luZyBhIHdob2xlIGZpbGUuIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjE6e2k6MDtPOjQ2OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xSZXR1cm5fIjozOntzOjc6IgAqAHR5cGUiO086MzY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xWb2lkXyI6MDp7fXM6NzoiACoAbmFtZSI7czo2OiJyZXR1cm4iO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO3I6NzA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6NTk0O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjY4OiJcUEhQX0NvZGVTbmlmZmVyXFRlc3RzXENvcmVcRXJyb3JTdXBwcmVzc2lvblRlc3Q6OnRlc3RTdXBwcmVzc0ZpbGUoKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjE2OiJ0ZXN0U3VwcHJlc3NGaWxlIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFic3RyYWN0IjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHN0YXRpYyI7YjowO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo2OiJwdWJsaWMiO31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjU5OTtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAcmV0dXJuVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fX1zOjcxOiJcUEhQX0NvZGVTbmlmZmVyXFRlc3RzXENvcmVcRXJyb3JTdXBwcmVzc2lvblRlc3Q6OnRlc3REaXNhYmxlU2VsZWN0ZWQoKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjk6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6MzE6IlRlc3QgZGlzYWJsaW5nIHNwZWNpZmljIHNuaWZmcy4iO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHRhZ3MiO2E6MTp7aTowO086NDY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFJldHVybl8iOjM6e3M6NzoiACoAdHlwZSI7TzozNjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFZvaWRfIjowOnt9czo3OiIAKgBuYW1lIjtzOjY6InJldHVybiI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX19fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAY29udGV4dCI7cjo3MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTo3NDA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NzE6IlxQSFBfQ29kZVNuaWZmZXJcVGVzdHNcQ29yZVxFcnJvclN1cHByZXNzaW9uVGVzdDo6dGVzdERpc2FibGVTZWxlY3RlZCgpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTk6InRlc3REaXNhYmxlU2VsZWN0ZWQiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjY6InB1YmxpYyI7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6NzQ1O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9fXM6NzA6IlxQSFBfQ29kZVNuaWZmZXJcVGVzdHNcQ29yZVxFcnJvclN1cHByZXNzaW9uVGVzdDo6dGVzdEVuYWJsZVNlbGVjdGVkKCkiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kIjo5OntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZG9jQmxvY2siO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jayI6Nzp7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBzdW1tYXJ5IjtzOjU3OiJUZXN0IHJlLWVuYWJsaW5nIHNwZWNpZmljIHNuaWZmcyB0aGF0IGhhdmUgYmVlbiBkaXNhYmxlZC4iO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHRhZ3MiO2E6MTp7aTowO086NDY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFJldHVybl8iOjM6e3M6NzoiACoAdHlwZSI7TzozNjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFZvaWRfIjowOnt9czo3OiIAKgBuYW1lIjtzOjY6InJldHVybiI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX19fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAY29udGV4dCI7cjo3MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTo4ODc7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NzA6IlxQSFBfQ29kZVNuaWZmZXJcVGVzdHNcQ29yZVxFcnJvclN1cHByZXNzaW9uVGVzdDo6dGVzdEVuYWJsZVNlbGVjdGVkKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxODoidGVzdEVuYWJsZVNlbGVjdGVkIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFic3RyYWN0IjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHN0YXRpYyI7YjowO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo2OiJwdWJsaWMiO31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjg5MjtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAcmV0dXJuVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fX1zOjcwOiJcUEhQX0NvZGVTbmlmZmVyXFRlc3RzXENvcmVcRXJyb3JTdXBwcmVzc2lvblRlc3Q6OnRlc3RJZ25vcmVTZWxlY3RlZCgpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6OTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czozMDoiVGVzdCBpZ25vcmluZyBzcGVjaWZpYyBzbmlmZnMuIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjE6e2k6MDtPOjQ2OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xSZXR1cm5fIjozOntzOjc6IgAqAHR5cGUiO086MzY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xWb2lkXyI6MDp7fXM6NzoiACoAbmFtZSI7czo2OiJyZXR1cm4iO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO3I6NzA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MTA2MDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo3MDoiXFBIUF9Db2RlU25pZmZlclxUZXN0c1xDb3JlXEVycm9yU3VwcHJlc3Npb25UZXN0Ojp0ZXN0SWdub3JlU2VsZWN0ZWQoKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjE4OiJ0ZXN0SWdub3JlU2VsZWN0ZWQiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjY6InB1YmxpYyI7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MTA2NTtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAcmV0dXJuVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fX1zOjY2OiJcUEhQX0NvZGVTbmlmZmVyXFRlc3RzXENvcmVcRXJyb3JTdXBwcmVzc2lvblRlc3Q6OnRlc3RDb21tZW50aW5nKCkiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kIjo5OntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZG9jQmxvY2siO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jayI6Nzp7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBzdW1tYXJ5IjtzOjMwOiJUZXN0IGlnbm9yaW5nIHNwZWNpZmljIHNuaWZmcy4iO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHRhZ3MiO2E6MTp7aTowO086NDY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFJldHVybl8iOjM6e3M6NzoiACoAdHlwZSI7TzozNjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFZvaWRfIjowOnt9czo3OiIAKgBuYW1lIjtzOjY6InJldHVybiI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX19fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAY29udGV4dCI7cjo3MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToxMTYzO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjY2OiJcUEhQX0NvZGVTbmlmZmVyXFRlc3RzXENvcmVcRXJyb3JTdXBwcmVzc2lvblRlc3Q6OnRlc3RDb21tZW50aW5nKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxNDoidGVzdENvbW1lbnRpbmciO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjY6InB1YmxpYyI7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MTE2ODtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAcmV0dXJuVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fX19czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAHVzZWRUcmFpdHMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MTc7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9fX1zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGludGVyZmFjZXMiO2E6MDp7fXM6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAdHJhaXRzIjthOjA6e319";