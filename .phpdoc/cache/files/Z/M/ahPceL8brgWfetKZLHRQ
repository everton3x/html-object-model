1615849913
waR3U4bTeM%3A311914f2488a0cfa56d651bddf192843-3a7d41eb7e99ab47bddfb3e36676a6fc
s:29484:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxMjp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6Mzg6IkNoZWNrcyBmb3IgdW51c2VkIGZ1bmN0aW9uIHBhcmFtZXRlcnMuIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjMxNToiVGhpcyBzbmlmZiBjaGVja3MgdGhhdCBhbGwgZnVuY3Rpb24gcGFyYW1ldGVycyBhcmUgdXNlZCBpbiB0aGUgZnVuY3Rpb24gYm9keS4KT25lIGV4Y2VwdGlvbiBpcyBtYWRlIGZvciBlbXB0eSBmdW5jdGlvbiBib2RpZXMgb3IgZnVuY3Rpb24gYm9kaWVzIHRoYXQgb25seQpjb250YWluIGNvbW1lbnRzLiBUaGlzIGNvdWxkIGJlIHVzZWZ1bCBmb3IgdGhlIGNsYXNzZXMgdGhhdCBpbXBsZW1lbnQgYW4KaW50ZXJmYWNlIHRoYXQgZGVmaW5lcyBtdWx0aXBsZSBtZXRob2RzIGJ1dCB0aGUgaW1wbGVtZW50YXRpb24gb25seSBuZWVkcyBzb21lCm9mIHRoZW0uIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHRhZ3MiO2E6NDp7aTowO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXEF1dGhvciI6NDp7czo3OiIAKgBuYW1lIjtzOjY6ImF1dGhvciI7czo1NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXEF1dGhvcgBhdXRob3JOYW1lIjtzOjE0OiJNYW51ZWwgUGljaGxlciI7czo1ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXEF1dGhvcgBhdXRob3JFbWFpbCI7czoyMjoibWFwaUBtYW51ZWwtcGljaGxlci5kZSI7czoxNDoiACoAZGVzY3JpcHRpb24iO047fWk6MTtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xBdXRob3IiOjQ6e3M6NzoiACoAbmFtZSI7czo2OiJhdXRob3IiO3M6NTc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xBdXRob3IAYXV0aG9yTmFtZSI7czoxMzoiR3JlZyBTaGVyd29vZCI7czo1ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXEF1dGhvcgBhdXRob3JFbWFpbCI7czoxOToiZ3NoZXJ3b29kQHNxdWl6Lm5ldCI7czoxNDoiACoAZGVzY3JpcHRpb24iO047fWk6MjtPOjQ2OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xHZW5lcmljIjoyOntzOjc6IgAqAG5hbWUiO3M6OToiY29weXJpZ2h0IjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czo0NjoiMjAwNy0yMDE0IE1hbnVlbCBQaWNobGVyLiBBbGwgcmlnaHRzIHJlc2VydmVkLiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fWk6MztPOjQ2OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xHZW5lcmljIjoyOntzOjc6IgAqAG5hbWUiO3M6NzoibGljZW5zZSI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6ODA6Imh0dHBzOi8vZ2l0aHViLmNvbS9zcXVpemxhYnMvUEhQX0NvZGVTbmlmZmVyL2Jsb2IvbWFzdGVyL2xpY2VuY2UudHh0IEJTRCBMaWNlbmNlIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX19fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAY29udGV4dCI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQiOjI6e3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2UiO3M6MDoiIjtzOjU2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlQWxpYXNlcyI7YTowOnt9fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjI7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBoYXNoIjtzOjMyOiIzYTdkNDFlYjdlOTlhYjQ3YmRkZmIzZTM2Njc2YTZmYyI7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lIjtzOjMyOiJVbnVzZWRGdW5jdGlvblBhcmFtZXRlclNuaWZmLnBocCI7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBwYXRoIjtzOjEwNzoidmVuZG9yL3NxdWl6bGFicy9waHBfY29kZXNuaWZmZXIvc3JjL1N0YW5kYXJkcy9HZW5lcmljL1NuaWZmcy9Db2RlQW5hbHlzaXMvVW51c2VkRnVuY3Rpb25QYXJhbWV0ZXJTbmlmZi5waHAiO3M6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAc291cmNlIjtzOjg4OTg6Ijw/cGhwCi8qKgogKiBDaGVja3MgZm9yIHVudXNlZCBmdW5jdGlvbiBwYXJhbWV0ZXJzLgogKgogKiBUaGlzIHNuaWZmIGNoZWNrcyB0aGF0IGFsbCBmdW5jdGlvbiBwYXJhbWV0ZXJzIGFyZSB1c2VkIGluIHRoZSBmdW5jdGlvbiBib2R5LgogKiBPbmUgZXhjZXB0aW9uIGlzIG1hZGUgZm9yIGVtcHR5IGZ1bmN0aW9uIGJvZGllcyBvciBmdW5jdGlvbiBib2RpZXMgdGhhdCBvbmx5CiAqIGNvbnRhaW4gY29tbWVudHMuIFRoaXMgY291bGQgYmUgdXNlZnVsIGZvciB0aGUgY2xhc3NlcyB0aGF0IGltcGxlbWVudCBhbgogKiBpbnRlcmZhY2UgdGhhdCBkZWZpbmVzIG11bHRpcGxlIG1ldGhvZHMgYnV0IHRoZSBpbXBsZW1lbnRhdGlvbiBvbmx5IG5lZWRzIHNvbWUKICogb2YgdGhlbS4KICoKICogQGF1dGhvciAgICBNYW51ZWwgUGljaGxlciA8bWFwaUBtYW51ZWwtcGljaGxlci5kZT4KICogQGF1dGhvciAgICBHcmVnIFNoZXJ3b29kIDxnc2hlcndvb2RAc3F1aXoubmV0PgogKiBAY29weXJpZ2h0IDIwMDctMjAxNCBNYW51ZWwgUGljaGxlci4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KICogQGxpY2Vuc2UgICBodHRwczovL2dpdGh1Yi5jb20vc3F1aXpsYWJzL1BIUF9Db2RlU25pZmZlci9ibG9iL21hc3Rlci9saWNlbmNlLnR4dCBCU0QgTGljZW5jZQogKi8KCm5hbWVzcGFjZSBQSFBfQ29kZVNuaWZmZXJcU3RhbmRhcmRzXEdlbmVyaWNcU25pZmZzXENvZGVBbmFseXNpczsKCnVzZSBQSFBfQ29kZVNuaWZmZXJcRmlsZXNcRmlsZTsKdXNlIFBIUF9Db2RlU25pZmZlclxTbmlmZnNcU25pZmY7CnVzZSBQSFBfQ29kZVNuaWZmZXJcVXRpbFxUb2tlbnM7CgpjbGFzcyBVbnVzZWRGdW5jdGlvblBhcmFtZXRlclNuaWZmIGltcGxlbWVudHMgU25pZmYKewoKCiAgICAvKioKICAgICAqIFJldHVybnMgYW4gYXJyYXkgb2YgdG9rZW5zIHRoaXMgdGVzdCB3YW50cyB0byBsaXN0ZW4gZm9yLgogICAgICoKICAgICAqIEByZXR1cm4gYXJyYXkKICAgICAqLwogICAgcHVibGljIGZ1bmN0aW9uIHJlZ2lzdGVyKCkKICAgIHsKICAgICAgICByZXR1cm4gWwogICAgICAgICAgICBUX0ZVTkNUSU9OLAogICAgICAgICAgICBUX0NMT1NVUkUsCiAgICAgICAgICAgIFRfRk4sCiAgICAgICAgXTsKCiAgICB9Ly9lbmQgcmVnaXN0ZXIoKQoKCiAgICAvKioKICAgICAqIFByb2Nlc3NlcyB0aGlzIHRlc3QsIHdoZW4gb25lIG9mIGl0cyB0b2tlbnMgaXMgZW5jb3VudGVyZWQuCiAgICAgKgogICAgICogQHBhcmFtIFxQSFBfQ29kZVNuaWZmZXJcRmlsZXNcRmlsZSAkcGhwY3NGaWxlIFRoZSBmaWxlIGJlaW5nIHNjYW5uZWQuCiAgICAgKiBAcGFyYW0gaW50ICAgICAgICAgICAgICAgICAgICAgICAgICRzdGFja1B0ciAgVGhlIHBvc2l0aW9uIG9mIHRoZSBjdXJyZW50IHRva2VuCiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW4gdGhlIHN0YWNrIHBhc3NlZCBpbiAkdG9rZW5zLgogICAgICoKICAgICAqIEByZXR1cm4gdm9pZAogICAgICovCiAgICBwdWJsaWMgZnVuY3Rpb24gcHJvY2VzcyhGaWxlICRwaHBjc0ZpbGUsICRzdGFja1B0cikKICAgIHsKICAgICAgICAkdG9rZW5zID0gJHBocGNzRmlsZS0+Z2V0VG9rZW5zKCk7CiAgICAgICAgJHRva2VuICA9ICR0b2tlbnNbJHN0YWNrUHRyXTsKCiAgICAgICAgLy8gU2tpcCBicm9rZW4gZnVuY3Rpb24gZGVjbGFyYXRpb25zLgogICAgICAgIGlmIChpc3NldCgkdG9rZW5bJ3Njb3BlX29wZW5lciddKSA9PT0gZmFsc2UgfHwgaXNzZXQoJHRva2VuWydwYXJlbnRoZXNpc19vcGVuZXInXSkgPT09IGZhbHNlKSB7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CgogICAgICAgICRlcnJvckNvZGUgID0gJ0ZvdW5kJzsKICAgICAgICAkaW1wbGVtZW50cyA9IGZhbHNlOwogICAgICAgICRleHRlbmRzICAgID0gZmFsc2U7CiAgICAgICAgJGNsYXNzUHRyICAgPSAkcGhwY3NGaWxlLT5nZXRDb25kaXRpb24oJHN0YWNrUHRyLCBUX0NMQVNTKTsKICAgICAgICBpZiAoJGNsYXNzUHRyICE9PSBmYWxzZSkgewogICAgICAgICAgICAkaW1wbGVtZW50cyA9ICRwaHBjc0ZpbGUtPmZpbmRJbXBsZW1lbnRlZEludGVyZmFjZU5hbWVzKCRjbGFzc1B0cik7CiAgICAgICAgICAgICRleHRlbmRzICAgID0gJHBocGNzRmlsZS0+ZmluZEV4dGVuZGVkQ2xhc3NOYW1lKCRjbGFzc1B0cik7CiAgICAgICAgICAgIGlmICgkZXh0ZW5kcyAhPT0gZmFsc2UpIHsKICAgICAgICAgICAgICAgICRlcnJvckNvZGUgLj0gJ0luRXh0ZW5kZWRDbGFzcyc7CiAgICAgICAgICAgIH0gZWxzZSBpZiAoJGltcGxlbWVudHMgIT09IGZhbHNlKSB7CiAgICAgICAgICAgICAgICAkZXJyb3JDb2RlIC49ICdJbkltcGxlbWVudGVkSW50ZXJmYWNlJzsKICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgJHBhcmFtcyAgICAgICA9IFtdOwogICAgICAgICRtZXRob2RQYXJhbXMgPSAkcGhwY3NGaWxlLT5nZXRNZXRob2RQYXJhbWV0ZXJzKCRzdGFja1B0cik7CgogICAgICAgIC8vIFNraXAgd2hlbiBubyBwYXJhbWV0ZXJzIGZvdW5kLgogICAgICAgICRtZXRob2RQYXJhbXNDb3VudCA9IGNvdW50KCRtZXRob2RQYXJhbXMpOwogICAgICAgIGlmICgkbWV0aG9kUGFyYW1zQ291bnQgPT09IDApIHsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgZm9yZWFjaCAoJG1ldGhvZFBhcmFtcyBhcyAkcGFyYW0pIHsKICAgICAgICAgICAgJHBhcmFtc1skcGFyYW1bJ25hbWUnXV0gPSAkc3RhY2tQdHI7CiAgICAgICAgfQoKICAgICAgICAkbmV4dCA9ICsrJHRva2VuWydzY29wZV9vcGVuZXInXTsKICAgICAgICAkZW5kICA9IC0tJHRva2VuWydzY29wZV9jbG9zZXInXTsKCiAgICAgICAgJGZvdW5kQ29udGVudCA9IGZhbHNlOwogICAgICAgICR2YWxpZFRva2VucyAgPSBbCiAgICAgICAgICAgIFRfSEVSRURPQyAgICAgICAgICAgICAgPT4gVF9IRVJFRE9DLAogICAgICAgICAgICBUX05PV0RPQyAgICAgICAgICAgICAgID0+IFRfTk9XRE9DLAogICAgICAgICAgICBUX0VORF9IRVJFRE9DICAgICAgICAgID0+IFRfRU5EX0hFUkVET0MsCiAgICAgICAgICAgIFRfRU5EX05PV0RPQyAgICAgICAgICAgPT4gVF9FTkRfTk9XRE9DLAogICAgICAgICAgICBUX0RPVUJMRV9RVU9URURfU1RSSU5HID0+IFRfRE9VQkxFX1FVT1RFRF9TVFJJTkcsCiAgICAgICAgXTsKICAgICAgICAkdmFsaWRUb2tlbnMgKz0gVG9rZW5zOjokZW1wdHlUb2tlbnM7CgogICAgICAgIGZvciAoOyAkbmV4dCA8PSAkZW5kOyArKyRuZXh0KSB7CiAgICAgICAgICAgICR0b2tlbiA9ICR0b2tlbnNbJG5leHRdOwogICAgICAgICAgICAkY29kZSAgPSAkdG9rZW5bJ2NvZGUnXTsKCiAgICAgICAgICAgIC8vIElnbm9yYWJsZSB0b2tlbnMuCiAgICAgICAgICAgIGlmIChpc3NldChUb2tlbnM6OiRlbXB0eVRva2Vuc1skY29kZV0pID09PSB0cnVlKSB7CiAgICAgICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKCRmb3VuZENvbnRlbnQgPT09IGZhbHNlKSB7CiAgICAgICAgICAgICAgICAvLyBBIHRocm93IHN0YXRlbWVudCBhcyB0aGUgZmlyc3QgY29udGVudCBpbmRpY2F0ZXMgYW4gaW50ZXJmYWNlIG1ldGhvZC4KICAgICAgICAgICAgICAgIGlmICgkY29kZSA9PT0gVF9USFJPVyAmJiAkaW1wbGVtZW50cyAhPT0gZmFsc2UpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgLy8gQSByZXR1cm4gc3RhdGVtZW50IGFzIHRoZSBmaXJzdCBjb250ZW50IGluZGljYXRlcyBhbiBpbnRlcmZhY2UgbWV0aG9kLgogICAgICAgICAgICAgICAgaWYgKCRjb2RlID09PSBUX1JFVFVSTikgewogICAgICAgICAgICAgICAgICAgICR0bXAgPSAkcGhwY3NGaWxlLT5maW5kTmV4dChUb2tlbnM6OiRlbXB0eVRva2VucywgKCRuZXh0ICsgMSksIG51bGwsIHRydWUpOwogICAgICAgICAgICAgICAgICAgIGlmICgkdG1wID09PSBmYWxzZSAmJiAkaW1wbGVtZW50cyAhPT0gZmFsc2UpIHsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgLy8gVGhlcmUgaXMgYSByZXR1cm4uCiAgICAgICAgICAgICAgICAgICAgaWYgKCR0b2tlbnNbJHRtcF1bJ2NvZGUnXSA9PT0gVF9TRU1JQ09MT04gJiYgJGltcGxlbWVudHMgIT09IGZhbHNlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICR0bXAgPSAkcGhwY3NGaWxlLT5maW5kTmV4dChUb2tlbnM6OiRlbXB0eVRva2VucywgKCR0bXAgKyAxKSwgbnVsbCwgdHJ1ZSk7CiAgICAgICAgICAgICAgICAgICAgaWYgKCR0bXAgIT09IGZhbHNlICYmICR0b2tlbnNbJHRtcF1bJ2NvZGUnXSA9PT0gVF9TRU1JQ09MT04gJiYgJGltcGxlbWVudHMgIT09IGZhbHNlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIC8vIFRoZXJlIGlzIGEgcmV0dXJuIDx0b2tlbj4uCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9Ly9lbmQgaWYKICAgICAgICAgICAgfS8vZW5kIGlmCgogICAgICAgICAgICAkZm91bmRDb250ZW50ID0gdHJ1ZTsKCiAgICAgICAgICAgIGlmICgkY29kZSA9PT0gVF9WQVJJQUJMRSAmJiBpc3NldCgkcGFyYW1zWyR0b2tlblsnY29udGVudCddXSkgPT09IHRydWUpIHsKICAgICAgICAgICAgICAgIHVuc2V0KCRwYXJhbXNbJHRva2VuWydjb250ZW50J11dKTsKICAgICAgICAgICAgfSBlbHNlIGlmICgkY29kZSA9PT0gVF9ET0xMQVIpIHsKICAgICAgICAgICAgICAgICRuZXh0VG9rZW4gPSAkcGhwY3NGaWxlLT5maW5kTmV4dChUX1dISVRFU1BBQ0UsICgkbmV4dCArIDEpLCBudWxsLCB0cnVlKTsKICAgICAgICAgICAgICAgIGlmICgkdG9rZW5zWyRuZXh0VG9rZW5dWydjb2RlJ10gPT09IFRfT1BFTl9DVVJMWV9CUkFDS0VUKSB7CiAgICAgICAgICAgICAgICAgICAgJG5leHRUb2tlbiA9ICRwaHBjc0ZpbGUtPmZpbmROZXh0KFRfV0hJVEVTUEFDRSwgKCRuZXh0VG9rZW4gKyAxKSwgbnVsbCwgdHJ1ZSk7CiAgICAgICAgICAgICAgICAgICAgaWYgKCR0b2tlbnNbJG5leHRUb2tlbl1bJ2NvZGUnXSA9PT0gVF9TVFJJTkcpIHsKICAgICAgICAgICAgICAgICAgICAgICAgJHZhckNvbnRlbnQgPSAnJCcuJHRva2Vuc1skbmV4dFRva2VuXVsnY29udGVudCddOwogICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXNzZXQoJHBhcmFtc1skdmFyQ29udGVudF0pID09PSB0cnVlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1bnNldCgkcGFyYW1zWyR2YXJDb250ZW50XSk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0gZWxzZSBpZiAoJGNvZGUgPT09IFRfRE9VQkxFX1FVT1RFRF9TVFJJTkcKICAgICAgICAgICAgICAgIHx8ICRjb2RlID09PSBUX1NUQVJUX0hFUkVET0MKICAgICAgICAgICAgICAgIHx8ICRjb2RlID09PSBUX1NUQVJUX05PV0RPQwogICAgICAgICAgICApIHsKICAgICAgICAgICAgICAgIC8vIFRva2VuaXplIHN0cmluZ3MgdGhhdCBjYW4gY29udGFpbiB2YXJpYWJsZXMuCiAgICAgICAgICAgICAgICAvLyBNYWtlIHN1cmUgdGhlIHN0cmluZyBpcyByZS1qb2luZWQgaWYgaXQgb2NjdXJzIG92ZXIgbXVsdGlwbGUgbGluZXMuCiAgICAgICAgICAgICAgICAkY29udGVudCA9ICR0b2tlblsnY29udGVudCddOwogICAgICAgICAgICAgICAgZm9yICgkaSA9ICgkbmV4dCArIDEpOyAkaSA8PSAkZW5kOyAkaSsrKSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKGlzc2V0KCR2YWxpZFRva2Vuc1skdG9rZW5zWyRpXVsnY29kZSddXSkgPT09IHRydWUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgJGNvbnRlbnQgLj0gJHRva2Vuc1skaV1bJ2NvbnRlbnQnXTsKICAgICAgICAgICAgICAgICAgICAgICAgJG5leHQrKzsKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgJHN0cmluZ1Rva2VucyA9IHRva2VuX2dldF9hbGwoc3ByaW50ZignPD9waHAgJXM7Pz4nLCAkY29udGVudCkpOwogICAgICAgICAgICAgICAgZm9yZWFjaCAoJHN0cmluZ1Rva2VucyBhcyAkc3RyaW5nUHRyID0+ICRzdHJpbmdUb2tlbikgewogICAgICAgICAgICAgICAgICAgIGlmIChpc19hcnJheSgkc3RyaW5nVG9rZW4pID09PSBmYWxzZSkgewogICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICR2YXJDb250ZW50ID0gJyc7CiAgICAgICAgICAgICAgICAgICAgaWYgKCRzdHJpbmdUb2tlblswXSA9PT0gVF9ET0xMQVJfT1BFTl9DVVJMWV9CUkFDRVMpIHsKICAgICAgICAgICAgICAgICAgICAgICAgJHZhckNvbnRlbnQgPSAnJCcuJHN0cmluZ1Rva2Vuc1soJHN0cmluZ1B0ciArIDEpXVsxXTsKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKCRzdHJpbmdUb2tlblswXSA9PT0gVF9WQVJJQUJMRSkgewogICAgICAgICAgICAgICAgICAgICAgICAkdmFyQ29udGVudCA9ICRzdHJpbmdUb2tlblsxXTsKICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgIGlmICgkdmFyQ29udGVudCAhPT0gJycgJiYgaXNzZXQoJHBhcmFtc1skdmFyQ29udGVudF0pID09PSB0cnVlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHVuc2V0KCRwYXJhbXNbJHZhckNvbnRlbnRdKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0vL2VuZCBpZgogICAgICAgIH0vL2VuZCBmb3IKCiAgICAgICAgaWYgKCRmb3VuZENvbnRlbnQgPT09IHRydWUgJiYgY291bnQoJHBhcmFtcykgPiAwKSB7CiAgICAgICAgICAgICRlcnJvciA9ICdUaGUgbWV0aG9kIHBhcmFtZXRlciAlcyBpcyBuZXZlciB1c2VkJzsKCiAgICAgICAgICAgIC8vIElmIHRoZXJlIGlzIG9ubHkgb25lIHBhcmFtZXRlciBhbmQgaXQgaXMgdW51c2VkLCBubyBuZWVkIGZvciBhZGRpdGlvbmFsIGVycm9yY29kZSB0b2dnbGluZyBsb2dpYy4KICAgICAgICAgICAgaWYgKCRtZXRob2RQYXJhbXNDb3VudCA9PT0gMSkgewogICAgICAgICAgICAgICAgZm9yZWFjaCAoJHBhcmFtcyBhcyAkcGFyYW1OYW1lID0+ICRwb3NpdGlvbikgewogICAgICAgICAgICAgICAgICAgICRkYXRhID0gWyRwYXJhbU5hbWVdOwogICAgICAgICAgICAgICAgICAgICRwaHBjc0ZpbGUtPmFkZFdhcm5pbmcoJGVycm9yLCAkcG9zaXRpb24sICRlcnJvckNvZGUsICRkYXRhKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgICRmb3VuZExhc3RVc2VkID0gZmFsc2U7CiAgICAgICAgICAgICRsYXN0SW5kZXggICAgID0gKCRtZXRob2RQYXJhbXNDb3VudCAtIDEpOwogICAgICAgICAgICAkZXJyb3JJbmZvICAgICA9IFtdOwogICAgICAgICAgICBmb3IgKCRpID0gJGxhc3RJbmRleDsgJGkgPj0gMDsgLS0kaSkgewogICAgICAgICAgICAgICAgaWYgKCRmb3VuZExhc3RVc2VkICE9PSBmYWxzZSkgewogICAgICAgICAgICAgICAgICAgIGlmIChpc3NldCgkcGFyYW1zWyRtZXRob2RQYXJhbXNbJGldWyduYW1lJ11dKSA9PT0gdHJ1ZSkgewogICAgICAgICAgICAgICAgICAgICAgICAkZXJyb3JJbmZvWyRtZXRob2RQYXJhbXNbJGldWyduYW1lJ11dID0gWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3Bvc2l0aW9uJyAgPT4gJHBhcmFtc1skbWV0aG9kUGFyYW1zWyRpXVsnbmFtZSddXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICdlcnJvcmNvZGUnID0+ICRlcnJvckNvZGUuJ0JlZm9yZUxhc3RVc2VkJywKICAgICAgICAgICAgICAgICAgICAgICAgXTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIGlmIChpc3NldCgkcGFyYW1zWyRtZXRob2RQYXJhbXNbJGldWyduYW1lJ11dKSA9PT0gZmFsc2UpIHsKICAgICAgICAgICAgICAgICAgICAgICAgJGZvdW5kTGFzdFVzZWQgPSB0cnVlOwogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgICRlcnJvckluZm9bJG1ldGhvZFBhcmFtc1skaV1bJ25hbWUnXV0gPSBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAncG9zaXRpb24nICA9PiAkcGFyYW1zWyRtZXRob2RQYXJhbXNbJGldWyduYW1lJ11dLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2Vycm9yY29kZScgPT4gJGVycm9yQ29kZS4nQWZ0ZXJMYXN0VXNlZCcsCiAgICAgICAgICAgICAgICAgICAgICAgIF07CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAoY291bnQoJGVycm9ySW5mbykgPiAwKSB7CiAgICAgICAgICAgICAgICAkZXJyb3JJbmZvID0gYXJyYXlfcmV2ZXJzZSgkZXJyb3JJbmZvKTsKICAgICAgICAgICAgICAgIGZvcmVhY2ggKCRlcnJvckluZm8gYXMgJHBhcmFtTmFtZSA9PiAkaW5mbykgewogICAgICAgICAgICAgICAgICAgICRkYXRhID0gWyRwYXJhbU5hbWVdOwogICAgICAgICAgICAgICAgICAgICRwaHBjc0ZpbGUtPmFkZFdhcm5pbmcoJGVycm9yLCAkaW5mb1sncG9zaXRpb24nXSwgJGluZm9bJ2Vycm9yY29kZSddLCAkZGF0YSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9Ly9lbmQgaWYKCiAgICB9Ly9lbmQgcHJvY2VzcygpCgoKfS8vZW5kIGNsYXNzCiI7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lc3BhY2VzIjthOjE6e3M6NTQ6IlxQSFBfQ29kZVNuaWZmZXJcU3RhbmRhcmRzXEdlbmVyaWNcU25pZmZzXENvZGVBbmFseXNpcyI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjU0OiJcUEhQX0NvZGVTbmlmZmVyXFN0YW5kYXJkc1xHZW5lcmljXFNuaWZmc1xDb2RlQW5hbHlzaXMiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxMjoiQ29kZUFuYWx5c2lzIjt9fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW5jbHVkZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZnVuY3Rpb25zIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNvbnN0YW50cyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjE6e3M6ODM6IlxQSFBfQ29kZVNuaWZmZXJcU3RhbmRhcmRzXEdlbmVyaWNcU25pZmZzXENvZGVBbmFseXNpc1xVbnVzZWRGdW5jdGlvblBhcmFtZXRlclNuaWZmIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXyI6MTE6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjgzOiJcUEhQX0NvZGVTbmlmZmVyXFN0YW5kYXJkc1xHZW5lcmljXFNuaWZmc1xDb2RlQW5hbHlzaXNcVW51c2VkRnVuY3Rpb25QYXJhbWV0ZXJTbmlmZiI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjI4OiJVbnVzZWRGdW5jdGlvblBhcmFtZXRlclNuaWZmIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGRvY0Jsb2NrIjtOO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBhYnN0cmFjdCI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBmaW5hbCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBwYXJlbnQiO047czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGltcGxlbWVudHMiO2E6MTp7czoyOToiXFBIUF9Db2RlU25pZmZlclxTbmlmZnNcU25pZmYiO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czoyOToiXFBIUF9Db2RlU25pZmZlclxTbmlmZnNcU25pZmYiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czo1OiJTbmlmZiI7fX1zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AY29uc3RhbnRzIjthOjA6e31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AcHJvcGVydGllcyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAG1ldGhvZHMiO2E6Mjp7czo5NToiXFBIUF9Db2RlU25pZmZlclxTdGFuZGFyZHNcR2VuZXJpY1xTbmlmZnNcQ29kZUFuYWx5c2lzXFVudXNlZEZ1bmN0aW9uUGFyYW1ldGVyU25pZmY6OnJlZ2lzdGVyKCkiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kIjo5OntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZG9jQmxvY2siO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jayI6Nzp7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBzdW1tYXJ5IjtzOjU3OiJSZXR1cm5zIGFuIGFycmF5IG9mIHRva2VucyB0aGlzIHRlc3Qgd2FudHMgdG8gbGlzdGVuIGZvci4iO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHRhZ3MiO2E6MTp7aTowO086NDY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFJldHVybl8iOjM6e3M6NzoiACoAdHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFycmF5XyI6Mzp7czoxMjoiACoAdmFsdWVUeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czoxMDoiACoAa2V5VHlwZSI7TjtzOjE3OiIAKgBkZWZhdWx0S2V5VHlwZSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbXBvdW5kIjoxOntzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbXBvdW5kAHR5cGVzIjthOjI6e2k6MDtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcU3RyaW5nXyI6MDp7fWk6MTtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcSW50ZWdlciI6MDp7fX19fXM6NzoiACoAbmFtZSI7czo2OiJyZXR1cm4iO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0IjoyOntzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlIjtzOjUzOiJQSFBfQ29kZVNuaWZmZXJcU3RhbmRhcmRzXEdlbmVyaWNcU25pZmZzXENvZGVBbmFseXNpcyI7czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZUFsaWFzZXMiO2E6Mzp7czo0OiJGaWxlIjtzOjI2OiJQSFBfQ29kZVNuaWZmZXJcRmlsZXNcRmlsZSI7czo1OiJTbmlmZiI7czoyODoiUEhQX0NvZGVTbmlmZmVyXFNuaWZmc1xTbmlmZiI7czo2OiJUb2tlbnMiO3M6Mjc6IlBIUF9Db2RlU25pZmZlclxVdGlsXFRva2VucyI7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToyNztzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo5NToiXFBIUF9Db2RlU25pZmZlclxTdGFuZGFyZHNcR2VuZXJpY1xTbmlmZnNcQ29kZUFuYWx5c2lzXFVudXNlZEZ1bmN0aW9uUGFyYW1ldGVyU25pZmY6OnJlZ2lzdGVyKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czo4OiJyZWdpc3RlciI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhYnN0cmFjdCI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABzdGF0aWMiO2I6MDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6NjoicHVibGljIjt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFyZ3VtZW50cyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTozMjtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAcmV0dXJuVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fX1zOjk0OiJcUEhQX0NvZGVTbmlmZmVyXFN0YW5kYXJkc1xHZW5lcmljXFNuaWZmc1xDb2RlQW5hbHlzaXNcVW51c2VkRnVuY3Rpb25QYXJhbWV0ZXJTbmlmZjo6cHJvY2VzcygpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6OTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czo1OToiUHJvY2Vzc2VzIHRoaXMgdGVzdCwgd2hlbiBvbmUgb2YgaXRzIHRva2VucyBpcyBlbmNvdW50ZXJlZC4iO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHRhZ3MiO2E6Mzp7aTowO086NDQ6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtIjo1OntzOjU4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0AdmFyaWFibGVOYW1lIjtzOjk6InBocGNzRmlsZSI7czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAGlzVmFyaWFkaWMiO2I6MDtzOjc6IgAqAHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfIjoxOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8AZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czoyNzoiXFBIUF9Db2RlU25pZmZlclxGaWxlc1xGaWxlIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6NDoiRmlsZSI7fX1zOjc6IgAqAG5hbWUiO3M6NToicGFyYW0iO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjIzOiJUaGUgZmlsZSBiZWluZyBzY2FubmVkLiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fWk6MTtPOjQ0OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbSI6NTp7czo1ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAHZhcmlhYmxlTmFtZSI7czo4OiJzdGFja1B0ciI7czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAGlzVmFyaWFkaWMiO2I6MDtzOjc6IgAqAHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xJbnRlZ2VyIjowOnt9czo3OiIAKgBuYW1lIjtzOjU6InBhcmFtIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czo2NToiVGhlIHBvc2l0aW9uIG9mIHRoZSBjdXJyZW50IHRva2VuCmluIHRoZSBzdGFjayBwYXNzZWQgaW4gJHRva2Vucy4iO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fX1pOjI7Tzo0NjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUmV0dXJuXyI6Mzp7czo3OiIAKgB0eXBlIjtPOjM2OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcVm9pZF8iOjA6e31zOjc6IgAqAG5hbWUiO3M6NjoicmV0dXJuIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fX19czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBjb250ZXh0IjtyOjgyO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjQzO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjk0OiJcUEhQX0NvZGVTbmlmZmVyXFN0YW5kYXJkc1xHZW5lcmljXFNuaWZmc1xDb2RlQW5hbHlzaXNcVW51c2VkRnVuY3Rpb25QYXJhbWV0ZXJTbmlmZjo6cHJvY2VzcygpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6NzoicHJvY2VzcyI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhYnN0cmFjdCI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABzdGF0aWMiO2I6MDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6NjoicHVibGljIjt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFyZ3VtZW50cyI7YToyOntpOjA7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czo5OiJwaHBjc0ZpbGUiO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfIjoxOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8AZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czoyNzoiXFBIUF9Db2RlU25pZmZlclxGaWxlc1xGaWxlIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6NDoiRmlsZSI7fX1zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO31pOjE7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czo4OiJzdGFja1B0ciI7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fX1zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjUyO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9fX1zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AdXNlZFRyYWl0cyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToyMztzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO319fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW50ZXJmYWNlcyI7YTowOnt9czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQB0cmFpdHMiO2E6MDp7fX0=";